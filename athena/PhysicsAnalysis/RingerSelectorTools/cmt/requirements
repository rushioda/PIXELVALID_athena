package RingerSelectorTools

author Werner S. Freund <wsfreund@cern.ch>

use                AtlasPolicy               AtlasPolicy-*
use                AthenaKernel              AthenaKernel-*              Control
use                AtlasROOT                 AtlasROOT-*                 External

use                PATCore                   PATCore-*                   PhysicsAnalysis/AnalysisCommon
use                AsgTools                  AsgTools-*                  Control/AthToolSupport
use                xAODEgamma                xAODEgamma-*                Event/xAOD
use                xAODCaloRings             xAODCaloRings-*             Event/xAOD
use                xAODTracking              xAODTracking-*              Event/xAOD
use_unless     tag=ROOT_GE_6_00 \
               pkg=AtlasBoost            ver=AtlasBoost-*           root=External
use_unless     tag=ROOT_GE_6_00 \
               pkg=CxxUtils              ver=CxxUtils-*             root=Control

use ElectronPhotonSelectorTools ElectronPhotonSelectorTools-* PhysicsAnalysis/ElectronPhotonID

private

use            GaudiInterface           GaudiInterface-*            External
use             PathResolver             PathResolver-*              Tools
use            AthContainers            AthContainers-*             Control

use               xAODBase                 xAODBase-*              Event/xAOD
use           TrkTrackSummary          TrkTrackSummary-*        Tracking/TrkEvent
end_private

# Adds Core,Cint,Tree,pthread,MathCore,Hist Root libs
apply_tag       ROOTBasicLibs 

branches RingerSelectorTools python src Root share data

# Create a dual-use library (we exclude file that may be created by RootCore to
# keep source files with multi-folder architeture)
apply_pattern dual_use_library \
              files="*.cxx ../Root/*.cxx ../Root/procedures/*.cxx ../Root/tools/*.cxx -x=../Root/MoreFilesForYou-RootCore-*"

# install our python modules
apply_pattern declare_python_modules files="*.py"

# install the ROOT files (in the data/ directory)                                      
apply_pattern declare_calib files="../data/*.root ../data/test"

# For reflex dictionary generation                                                                                                   
use AtlasReflex   AtlasReflex-*   External -no_auto_imports                                                                           
apply_pattern lcgdict dict=RingerSelectorTools \
                      selectionfile=selection.xml \
                      headerfiles="..\/RingerSelectorTools/RingerSelectorToolsDict.h"

# Add binary ringerSel_readTest using testRead.cxx
#application ringerSel_testRead ../util/testRead.cxx
#macro_append ringerSel_testRead_dependencies RingerSelectorToolsLib 

# Add binary ringerSel_writeTest using writeRead.cxx
#application ringerSel_testWrite ../util/testWrite.cxx
#macro_append ringerSel_testWrite_dependencies RingerSelectorToolsLib


###################### Code Graveyard ##########################

#use               AtlasPyROOT               AtlasPyROOT-*               External
#use           xAODCaloEvent            xAODCaloEvent-*            Event/xAOD
#use           xAODEventInfo            xAODEventInfo-*            Event/xAOD

# Adds MathMore,Minuit,Minuit2,Matrix,Physics,HistPainter,Rint
#apply_tag       ROOTMathLibs
# For more ROOT options, take a look here http://acode-browser.usatlas.bnl.gov/lxr/source/atlas/External/AtlasROOT/cmt/requirements

#macro use_AtlasBoost "AtlasBoost             AtlasBoost-*                External" \
#      ROOT_GE_6_00 ""
#use $(use_AtlasBoost)
#macro use_CxxUtils "CxxUtils             CxxUtils-*                External" \
#      ROOT_GE_6_00 ""
#use $(use_CxxUtils)

#macro_append ringerSel_testReadlinkopts "-lRingerSelectorToolsLib -lAtlasSTLAddReflexDict -lGaudiAlg "

#private
## Python bindings:
#macro_append Boost_linkopts " $(Boost_linkopts_python) "
#macro_append pyringerselectortools_util_pp_cppflags " -Wno-unused "
#end_private


# This could be added by asg tool requirements, so that we don't need to do it ourselves.
#private
# Uncomment these to run on debug mode for this package only:
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
#macro_remove AtlasCxxPolicy_pp_cppflags "-DNDEBUG"
#macro_remove AtlasCxxPolicy_pp_cppflags "-O2"
#macro_append AtlasCxxPolicy_pp_cppflags " -g "
#end_private

#pattern declare_python_package \
#    apply_pattern generic_declare_for_link kind=python_package \
#                      files='-s=../python <pyth_package>/*.py' prefix=python/<pyth_package> name=<name> ; \
#    private ; \
#    macro_append <package>_python_init_dependencies " install_<name>python_package " ; \
#    end_private
#
#declare_python_package pyth_package="RingerSelectorTools"

