/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

// $Id: Thresholds.icc 667905 2015-05-18 19:07:55Z wsfreund $
#ifndef RINGERSELECTORTOOLS_PROCEDURES_THRESHOLDS_ICC
#define RINGERSELECTORTOOLS_PROCEDURES_THRESHOLDS_ICC

#include "Thresholds.h"

/** 
 * @brief Namespace dedicated for Ringer utilities 
 **/
namespace Ringer {

/** 
 * @brief Namespace dedicated for Ringer Discrimination utilities 
 **/
namespace Discrimination {

// =============================================================================
inline
void UniqueThreshold::execute(const std::vector<float> &input,
    std::vector<bool> &output) const 
{
#ifndef NDEBUG
  ATH_MSG_DEBUG("Applying UniqueThreshold (Value: " << m_threshold 
      << "). Output space is: " << input);
#endif
  output.clear();
  if ( input.empty() ) {
    throw std::runtime_error(
        std::string("Entered UniqueDimThreshold.execute" 
          " with input.size() == 0"));
  }
  output.push_back( input[0] > m_threshold );
#ifndef NDEBUG
  std::ios_base::fmtflags flags = std::cout.flags();
  ATH_MSG_DEBUG("Decision is: " << output);
  // reset previous cout flags
  std::cout.flags(flags);
#endif
}

} // namespace Discrimination
} // namespace Ringer

#endif // RINGERSELECTORTOOLS_PROCEDURES_THRESHOLDS_ICC

// vim: filetype=cpp :
