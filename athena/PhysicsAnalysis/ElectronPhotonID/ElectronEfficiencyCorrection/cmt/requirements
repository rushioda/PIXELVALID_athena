## automatically generated CMT requirements file
package ElectronEfficiencyCorrection
author  kkoeneke

## for athena policies: this has to be the first use statement
use AtlasPolicy 	AtlasPolicy-*

## for gaudi tools, services and objects
use AtlasPyROOT                 AtlasPyROOT-*           External
use AtlasROOT                   AtlasROOT-*             External
use PATCore                     PATCore-*               PhysicsAnalysis/AnalysisCommon
use PATInterfaces               PATInterfaces-*         PhysicsAnalysis/AnalysisCommon
use AsgTools                    AsgTools-*              Control/AthToolSupport
use  AthContainers              AthContainers-*         Control
use xAODEgamma                  xAODEgamma-*            Event/xAOD
use AtlasBoost                  AtlasBoost-*            External


## put here your package dependencies...
private
use  GaudiInterface             GaudiInterface-*                External
use  xAODEventInfo              xAODEventInfo-*                 Event/xAOD
use  PathResolver               PathResolver-*                  Tools
use CxxUtils    		CxxUtils-*              Control

#new
use  AthenaBaseComps            AthenaBaseComps-*               Control
use  xAODCore                   xAODCore-*                      Event/xAOD
#next two are needed to get checkreq to shhh about the util stuff... this is annoying, but that's life! (will@cern)
use xAODCaloEvent xAODCaloEvent-* Event/xAOD
use xAODTracking xAODTracking-* Event/xAOD 
end_private
##

## macros   
apply_tag       ROOTBasicLibs
apply_tag       ROOTMathLibs


## declare the directories CMT should know about
branches ElectronEfficiencyCorrection python src Root share data

# Create a dual-use library
#apply_pattern dual_use_library files="../Root/*.cxx"
#apply_pattern dual_use_library files="*.cxx ../scr/*.cxx ../Root/*.cxx components/*.cxx"
apply_pattern dual_use_library files="*.cxx ../scr/*.cxx ../Root/*.cxx"

## install our python modules
apply_pattern declare_python_modules files="*.py"

## install our job options files
apply_pattern declare_joboptions files="*.py"

## install the ROOT files (in the data/ directory)
apply_pattern declare_calib files="../data/*.root" 

## For reflex dictionary generation
use AtlasReflex   AtlasReflex-*   External -no_auto_imports
apply_pattern lcgdict dict=ElectronEfficiencyCorrection selectionfile=selection.xml headerfiles="..\/ElectronEfficiencyCorrection/ElectronEfficiencyCorrectionDict.h"
