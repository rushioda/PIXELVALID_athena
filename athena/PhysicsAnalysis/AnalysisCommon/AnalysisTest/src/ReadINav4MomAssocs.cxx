/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

/////////////////////////////////////////////////////////////////// 
// ReadINav4MomAssocs.cxx 
// Implementation file for class ReadINav4MomAssocs
// Author: S.Binet<binet@cern.ch>
/////////////////////////////////////////////////////////////////// 


// STL includes

// FrameWork includes
#include "GaudiKernel/Property.h"

// NavFourMom includes
#include "NavFourMom/INav4MomAssocs.h"

// AnalysisTest includes
#include "AnalysisTest/ReadINav4MomAssocs.h"

/////////////////////////////////////////////////////////////////// 
/// Public methods: 
/////////////////////////////////////////////////////////////////// 

/// Constructors
////////////////
ReadINav4MomAssocs::ReadINav4MomAssocs( const std::string& name, 
                                        ISvcLocator* pSvcLocator ) : 
  AthAlgorithm( name, pSvcLocator )
{
  //
  // Property declaration
  // 
  declareProperty( "Assocs", m_inavAssocsName = "INav4MomAssocs" );

}

/// Destructor
///////////////
ReadINav4MomAssocs::~ReadINav4MomAssocs()
{ 
  ATH_MSG_DEBUG ( "Calling destructor" ) ;
}

/// Athena Algorithm's Hooks
////////////////////////////
StatusCode ReadINav4MomAssocs::initialize()
{
  ATH_MSG_INFO ( "Initializing " << name() << "..." ) ;
  return StatusCode::SUCCESS;
}

StatusCode ReadINav4MomAssocs::finalize()
{
  ATH_MSG_INFO ( "Finalizing " << name() << "..." ) ;
  return StatusCode::SUCCESS;
}

StatusCode ReadINav4MomAssocs::execute()
{  
  ATH_MSG_DEBUG ( "Executing " << name() << "..." ) ;
  ATH_CHECK( readAssocs<INav4MomAssocs>( m_inavAssocsName ) );
  return StatusCode::SUCCESS;
}

/////////////////////////////////////////////////////////////////// 
// Const methods: 
///////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////// 
// Non-const methods: 
/////////////////////////////////////////////////////////////////// 

/////////////////////////////////////////////////////////////////// 
// Protected methods: 
/////////////////////////////////////////////////////////////////// 

/////////////////////////////////////////////////////////////////// 
// Const methods: 
///////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////// 
// Non-const methods: 
/////////////////////////////////////////////////////////////////// 

