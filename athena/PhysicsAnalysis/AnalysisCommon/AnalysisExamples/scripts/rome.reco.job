#! /usr/bin/env sh

export T_RELEASE=9.0.4
export T_DISTREL=/afs/cern.ch/atlas/software/dist/$T_RELEASE
export T_INCPATH=/afs/cern.ch/atlas/software/dist/9.0.4/Tools/JobTransforms/JobTransforms-00-02-10/include
export POOLFILE=/afs/cern.ch/user/k/ketevi/scratch0/Tutorial/$T_RELEASE/PoolFileCatalog.xml

export OUTPUTDIR=/castor/cern.ch/user/k/ketevi
export LOGDIR=/afs/cern.ch/user/k/ketevi/scratch0/Tutorial/$T_RELEASE/log
export ESDOUT=esd904
export AODOUT=aod904

export EXT=pool.root
export NEVENT=100

export FILENAME=$1
export INPUTDIR=rfio:$2

#--------------------------------------------------------------------------
#          package dependencies
#--------------------------------------------------------------------------
#-------------------
#      use Atlas $RELEASE
#-------------------
export ATLAS_ROOT=/afs/cern.ch/atlas 
export DISTREL=$ATLAS_ROOT/software/dist/$T_RELEASE 
 
export ATLASDATA=$ATLAS_ROOT/offline/data 
export ATLASBIN=$DISTREL/InstallArea/i686-slc3-gcc32-opt/bin 
export ATLASLIB=$DISTREL/InstallArea/i686-slc3-gcc32-opt/lib 
 
export CMTVERSION=v1r16p20040901
export CMTROOT=/afs/cern.ch/sw/contrib/CMT/$CMTVERSION 
. ${CMTROOT}/mgr/setup.sh 
 
 
# setup home 

cat > requirements << EOF

set     CMTSITE         CERN
set     SITEROOT        /afs/cern.ch
macro   ATLAS_DIST_AREA \${SITEROOT}/atlas/software/dist
macro   ATLAS_TEST_AREA "" \
        $T_RELEASE           "`pwd`"

use     AtlasLogin      AtlasLogin-*    \$(ATLAS_DIST_AREA)

EOF

cat requirements
#source /afs/cern.ch/sw/contrib/CMT/v1r16p20040901/mgr/setup.sh
cmt config 
source setup.sh -tag=$T_RELEASE,opt 

#shift
#shift

mkdir -p `pwd`/$T_RELEASE
cd `pwd`/$RELEASE 
pwd
echo "##CMTCONFIG = $CMTCONFIG" 
echo "##CMTPATH=$CMTPATH" 

# if the release can be use out of the box, use thes 2 lines 
echo "##sourcing AtlasRelease/AtlasRelease-09-00-04/cmt/setup.sh" 
. $DISTREL/AtlasRelease/AtlasRelease-09-00-04/cmt/setup.sh ""


cp /afs/cern.ch/user/k/ketevi/scratch0/Tutorial/9.0.4/Reconstruction/RecExample/RecExCommon/RecExCommon-00-03-02-11/scripts/rome.reco.trf .

export TYPE=`echo $FILENAME | awk -F. '{print $3}'`
if [[ $TYPE = 'Z_2e' ]]; then
    export NUMBER=`echo $FILENAME | awk -F. '{print $6}'`
    export ESDFILE=rome.initial.zee.$ESDOUT.$NUMBER.$EXT
    export CBNTFILE=rome.initial.zee.ntuple.$NUMBER.root
    export ESDDIR=$OUTPUTDIR/zee/esd
    export AODFILE=rome.initial.zee.$ESDOUT.$AODOUT.$NUMBER.$EXT
    export AODDIR=$OUTPUTDIR/zee/aod
else
    export NUMBER=`echo $FILENAME | awk -F. '{print $5}'`
    export ESDFILE=rome.initial.zmm.$ESDOUT.$NUMBER.$EXT
    export CBNTFILE=rome.initial.zmm.ntuple.$NUMBER.root
    export ESDDIR=$OUTPUTDIR/zmm/esd
    export AODFILE=rome.initial.zmm.$ESDOUT.$AODOUT.$NUMBER.$EXT
    export AODDIR=$OUTPUTDIR/zmm/aod
fi
rome.reco.trf $INPUTDIR/$FILENAME $ESDFILE $AODFILE CBNTFILE $NEVENT 0

mv logESD $LOGDIR/$ESDFILE.log
mv logAOD $LOGDIR/$AODFILE.log

#--------------------------------------------------------------------------
#          output file copy
#--------------------------------------------------------------------------
if [[ -e $ESDFILE ]] ; then
    echo "md5sum $ESDFILE `md5sum ESDFILE `"
    rfmkdir -p $ESDDIR
    rfcp $ESDFILE $ESDDIR/$ESDFILE
    echo "rfcp result code = $?"
fi

if [[ -e $AODFILE ]] ; then
    echo "md5sum $AODFILE `md5sum AODFILE `"
    rfmkdir -p $AODDIR
    rfcp $AODFILE $AODDIR/$AODFILE
    echo "rfcp result code = $?"
fi


