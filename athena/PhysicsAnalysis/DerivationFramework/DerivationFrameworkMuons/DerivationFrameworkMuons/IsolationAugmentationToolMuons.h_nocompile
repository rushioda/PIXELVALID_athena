///////////////////////////////////////////////////////////////////
// IsolationAugmentationToolMuons.h, (c) ATLAS Detector software
///////////////////////////////////////////////////////////////////

#ifndef DERIVATIONFRAMEWORK_ISOLATIONAUGMENTATIONTOOLMUONS_H
#define DERIVATIONFRAMEWORK_ISOLATIONAUGMENTATIONTOOLMUONS_H

#include <string>

#include "AthenaBaseComps/AthAlgTool.h"
#include "DerivationFrameworkInterfaces/IAugmentationTool.h"
#include "GaudiKernel/ToolHandle.h"
#include "AthContainers/AuxElement.h"
#include "xAODBase/IParticle.h"

namespace xAOD {
  class ITrackIsolationTool;
}

namespace DerivationFramework {

  class IsolationAugmentationToolMuons : public AthAlgTool, public IAugmentationTool {
    public: 
      IsolationAugmentationToolMuons(const std::string& t, const std::string& n, const IInterface* p);

      StatusCode initialize();
      StatusCode finalize();
      StatusCode addBranches() const;

    private:
      
      template< class CONTAINER, class AUXSTORE >
	StatusCode deepCopy( const std::string& key ) const;
      template< class CONTAINER, class AUXSTORE >
	StatusCode deepCopyImp( const std::string& key ) const;
      
      std::string m_collNameMu;

      const xAOD::IParticle* getReferenceParticle(const xAOD::IParticle& particle) const;

      ToolHandle<xAOD::ITrackIsolationTool> m_trackIsolationTool;

      std::vector<SG::AuxElement::Decorator<float>*> isoDecopt;
      std::vector<SG::AuxElement::Decorator<float>*> isoDecoptv;
      std::vector<SG::AuxElement::Decorator<float>*> isoDecotp;
      
  }; 
}

#endif // DERIVATIONFRAMEWORK_ISOLATIONAUGMENTATIONTOOLMUONS_H
