#! /usr/bin/env sh

# Defaults
T_RELEASE="8.0.1"
ATLAS_ROOT=$SITEROOT
T_SCRIPTPATH=`dirname $0`
T_SCRIPTPATH=`echo $T_SCRIPTPATH|sed -e "s#^./#$PWD/#"`
export T_INCPATH="$T_SCRIPTPATH/../include"
export T_SRCPATH="$T_SCRIPTPATH/../src"
T_DATAPATH=${PWD}/data
T_INDESC="InputTransformation"
T_OUTDESC="OutputTransformation"
T_PREFIX="KitValidation"
T_TRANSVER=1.0.0
T_TRANSDESC="Template for high-level transformations"
T_TRANSAUTH="Alessandro De Salvo <Alessandro.De.Salvo@roma1.infn.it>"
T_NUMEVENTS=10
T_PARAMS="0"

# help
source ${T_INCPATH}/transformHelp.def

# athena logfile check function
source ${T_INCPATH}/checkLogUtils.def
                                                                                
# copy files
source ${T_INCPATH}/copy.def

# End-Of-Job tasks
source ${T_INCPATH}/checkfiles.def

# Get the command line options
source ${T_INCPATH}/transformOptions.def

# Colors
source ${T_INCPATH}/colors.def

# Input/Output paths
[ "$T_INPATH" == "" ] && T_INPATH=${T_DATAPATH}/${T_INDESC}-${T_RELEASE}
[ "$T_OUTPATH" == "" ] && T_OUTPATH=${T_DATAPATH}/${T_OUTDESC}-${T_RELEASE}
[ "$T_INFILE" == "" ] && T_INFILE="${T_PREFIX}-${T_INDESC}-${T_RELEASE}.pool.root"
[ "$T_OUTFILE" == "" ] && T_OUTFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.pool.root"
[ "$T_LOGFILE" == "" ] && T_LOGFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.log"
mkdir -p ${T_OUTPATH}

# Working directory
T_TMPDIR=${T_TEMPPATH}/atlas.tmp$$
mkdir -p ${T_TMPDIR}
cd ${T_TMPDIR}

# Setup the release
export T_DISTREL=${ATLAS_ROOT}/dist/${T_RELEASE}
export T_POOLFILE=${T_INPATH}/PoolFileCatalog.xml
source ${T_DISTREL}/AtlasRelease/*/cmt/setup.sh

#--------------------------------------------------------------------------
#          transformation script call
#--------------------------------------------------------------------------

######################################################
#    YOU SHOULD CALL HERE YOUR CORE TRANSFORMATION   #
#    Transformations should be in the same dir       #
#    as the KitValidation transformations            #
######################################################

# Example
#${T_SCRIPTPATH}/test.trf >& "${T_TMPDIR}/${T_LOGFILE}"

# Error report
[ "$T_GUESSPROBLEM" = "yes" -a -f checklog.txt ] && cat checklog.txt

# Copy the specified files to ${T_OUTPATH}
# Syntax: copyFiles <file1> <file2> ... <file n>
copyFiles ${T_TMPDIR}/${T_LOGFILE} PoolFileCatalog.xml ${T_OUTFILE}

# Check if an error occurred
if [ $retcode -ne 0 ] ; then
  cd /tmp; rm -fr ${T_TMPDIR}
  exit ${retcode}
fi
                                                                                
# End-Of-Job tasks
# Check if one or more files have been produced and register them to the GRID

# Syntax: checkFiles <SFN 1>[,<LFN 1>] ... <SFN n>[,<LFN n>]
# where SFN=Site File Name (=Physical File Name) and LFN=Logical File Name
# Note that GRID registration is enabled only if a LFN is specified for that SFN
# and if a grid is specified
checkFiles ${T_OUTPATH}/${T_OUTFILE},${T_OUTFILE} \
           ${T_OUTPATH}/PoolFileCatalog.xml
retcode=$?

# Clean up
cd /tmp
rm -fr ${T_TMPDIR}

exit ${retcode}
