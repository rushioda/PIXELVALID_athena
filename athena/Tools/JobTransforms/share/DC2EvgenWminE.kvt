#! /usr/bin/env sh

# Defaults
T_RELEASE="8.1.0"
ATLAS_ROOT=$SITEROOT
T_SCRIPTPATH=`dirname $0`
T_SCRIPTPATH=`echo $T_SCRIPTPATH|sed -e "s#^./#$PWD/#"`
export T_INCPATH="$T_SCRIPTPATH/../include"
T_DATAPATH=${PWD}/data
T_OUTDESC="DC2EvgenWminE"
T_PREFIX="KitValidation"
T_TRANSVER=1.1.0
T_TRANSDESC="DC2 W generation"
T_TRANSAUTH="Alessandro De Salvo <Alessandro.De.Salvo@roma1.infn.it>"
T_DATASET=2674
T_FIRSTEVENT=1
T_NUMEVENTS=20
T_RANDOM=26740007
T_PARAMS="dc2_A4_herwig_mcatlno.py"

# help
source ${T_INCPATH}/transformHelp.def

# copy files
source ${T_INCPATH}/copy.def

# End-Of-Job tasks
source ${T_INCPATH}/checkfiles.def

# Get the command line options
source ${T_INCPATH}/transformOptions.def
                                                                                
# Colors
source ${T_INCPATH}/colors.def

[ "$T_OUTPATH" == "" ] && T_OUTPATH=${T_DATAPATH}/${T_OUTDESC}-${T_RELEASE}
[ "$T_OUTFILE" == "" ] && T_OUTFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.pool.root"
[ "$T_NTUPLE" == "" ]  && T_NTUPLE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.ntup"
T_NTUPLE="`echo $T_NTUPLE | awk '{ print tolower($0) }'`"
[ "$T_LOGFILE" == "" ] && T_LOGFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.log"

mkdir -p $T_OUTPATH

# Working directory
T_TMPDIR=${T_TEMPPATH}/atlas.tmp$$
mkdir -p ${T_TMPDIR}
cd ${T_TMPDIR}

# Setup the run time environment
kvtSetup

# Copy the input files
T_INPDATA="DC2WminE.events"
T_INPDATAURL="http://www.nikhef.nl/~stanb/ProductionData/DC2/MCATNLO/W_prod/Wmin_E"
wget ${T_INPDATAURL}/${T_INPDATA}

#--------------------------------------------------------------------------
#          Signature:  datasetnr outfilename first total ran pytcmd
#--------------------------------------------------------------------------
#--------------------------------------------------------------------------
#          transformation script call
#--------------------------------------------------------------------------
${T_SCRIPTPATH}/dc2.evgen.herwig.inputA4.trf "${T_DATASET}" "${T_OUTFILE}" "${T_NTUPLE}" ${T_FIRSTEVENT} ${T_NUMEVENTS} ${T_RANDOM} "${T_PARAMS}" "${T_INPDATA}" >> ${T_TMPDIR}/${T_LOGFILE} 2>&1
retcode=$?

# Error report
[ "$T_GUESSPROBLEM" = "yes" -a -f checklog.txt ] && cat checklog.txt

# Copy files
copyFiles ${T_TMPDIR}/${T_LOGFILE} PoolFileCatalog.xml ${T_OUTFILE} \
          metadata.xml ${T_NTUPLE}

# Check if an error occurred
if [ $retcode -ne 0 ] ; then
  cd /tmp; rm -fr ${T_TMPDIR}
  exit ${retcode}
fi
                                                                                
# End-Of-Job tasks
checkFiles ${T_OUTPATH}/${T_OUTFILE},${T_OUTFILE}
retcode=$?

# Clean up
cd /tmp
rm -fr ${T_TMPDIR}
                                                                                
exit ${retcode}
