#! /usr/bin/env sh

# Defaults
T_RELEASE="8.1.0"
T_RELEASEBASE=dist
ATLAS_ROOT=$SITEROOT
T_SCRIPTPATH=`dirname $0`
T_SCRIPTPATH=`echo $T_SCRIPTPATH|sed -e "s#^./#$PWD/#"`
export T_INCPATH="$T_SCRIPTPATH/../include"
T_DATAPATH=${PWD}/data
T_INDESC="DC2G4digitZee"
T_OUTDESC="DC2reconZee"
T_PREFIX="KitValidation"
T_TRANSVER=1.0.0
T_TRANSDESC="DC2 Z -> e e reconstruction"
T_TRANSAUTH="Alessandro De Salvo <Alessandro.De.Salvo@roma1.infn.it>"
T_NUMEVENTS=10
T_SKIP="0"

# help
source ${T_INCPATH}/transformHelp.def

# copy files
source ${T_INCPATH}/copy.def

# End-Of-Job tasks
source ${T_INCPATH}/checkfiles.def

# Get the command line options
source ${T_INCPATH}/transformOptions.def

# Colors
source ${T_INCPATH}/colors.def

[ "$T_INPATH" == "" ] && T_INPATH=${T_DATAPATH}/${T_INDESC}-${T_RELEASE}
[ "$T_OUTPATH" == "" ] && T_OUTPATH=${T_DATAPATH}/${T_OUTDESC}-${T_RELEASE}
[ "$T_INFILE" == "" ] && T_INFILE="${T_PREFIX}-${T_INDESC}-${T_RELEASE}.pool.root"
[ "$T_OUTFILE" == "" ] && T_OUTFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.ntuple"
[ "$T_HISFILE" == "" ] && T_HISFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.hbook"
[ "$T_LOGFILE" == "" ] && T_LOGFILE="${T_PREFIX}-${T_OUTDESC}-${T_RELEASE}.log"

mkdir -p ${T_OUTPATH}

# Working directory
T_TMPDIR=${T_TEMPPATH}/atlas.tmp$$
mkdir -p ${T_TMPDIR}
cd ${T_TMPDIR}

# Setup the run time environment
kvtSetup
export T_POOLFILE=${T_INPATH}/PoolFileCatalog.xml
ln -fs ${T_INPATH}/${T_INFILE} .

#--------------------------------------------------------------------------
#          Signature:  infilename outfilename macrofilename nevents skip
#--------------------------------------------------------------------------
#--------------------------------------------------------------------------
#          transformation script call
#--------------------------------------------------------------------------
${T_SCRIPTPATH}/dc2.recon.trf "${T_INFILE}" "${T_OUTFILE}" "${T_HISFILE}" ${T_NUMEVENTS} ${T_SKIP} >> ${T_TMPDIR}/${T_LOGFILE} 2>&1 
retcode=$?

# Error report
[ "$T_GUESSPROBLEM" = "yes" -a -f checklog.txt ] && cat checklog.txt

# Copy files
copyFiles ${T_TMPDIR}/${T_LOGFILE} ${T_OUTFILE} ${T_HISFILE}

# Check if an error occurred
if [ $retcode -ne 0 ] ; then
  cd /tmp; rm -fr ${T_TMPDIR}
  exit ${retcode}
fi

# End-Of-Job tasks
checkFiles ${T_OUTPATH}/${T_OUTFILE},${T_OUTFILE}
retcode=$?

# Clean up
cd /tmp
rm -fr ${T_TMPDIR}

exit ${retcode}
