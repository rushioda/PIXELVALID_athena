# Write the job info

T_XMLJOBINFOTEMPLATEHEAD=${T_INCPATH}/jobInfo.head.xml.template
T_XMLJOBINFOTEMPLATEBODY=${T_INCPATH}/jobInfo.body.xml.template
T_XMLJOBINFOTEMPLATEERRORS=${T_INCPATH}/jobInfo.errors.xml.template
T_XMLJOBINFOTEMPLATETAIL=${T_INCPATH}/jobInfo.tail.xml.template
T_XMLJOBINFOOUTPUT=jobInfo.xml

# Save the job start time
T_STARTTIME=`date +%s`

writeJobInfo ()
{
  # Log file name
  LOGFILE="$1"
  T_ERROR_CATEGORIES=error_categories.txt

  # Override the output file name, if requested
  [ "$2" != "" ] && T_XMLJOBINFOOUTPUT="$2"

  # Get the job end time
  T_ENDTIME=`date +%s`
  T_TIMESTAMP="`date`"

  # Calculate the elapsed time (in seconds)
  T_ELAPSED=$((T_ENDTIME-T_STARTTIME))

  # Get info on this machine
  T_GCCVERSION="`gcc -v 2>&1 | grep ^gcc`"
  T_NODENAME="`uname -n`"
  T_OS="`uname -s`"
  T_DISTRIBUTION="`lsb_release -d 2>/dev/null | sed 's#^Description:.##'`"
  [ "$T_DISTRIBUTION" == "" ] && T_DISTRIBUTION="unknown"
  T_KERNEL="`uname -vr`"
  T_MACHINE="`uname -m`"
  T_PROCESSOR="`uname -p`"
  T_CPUNAME="`cat /proc/cpuinfo | grep '^model name' | tail -n 1 | cut -d':' -f 2- | sed 's/^ *//g'`"
  T_CPUNUM=$((`cat /proc/cpuinfo | grep '^processor' | wc -l`))
  T_BOGOMIPS="`cat /proc/cpuinfo | grep '^bogomips' | tail -n 1 | cut -d':' -f 2- | sed 's/^ *//g'`"
  T_MEM=`cat /proc/meminfo | grep '^Mem:' | awk '{print $2}'`

  # Get the info on WARNINGS/ERRORS/FATALS
  athenaLogStats $LOGFILE
  T_WARNINGS=-1
  T_ERRORS=-1
  T_FATALS=-1
  if [ -f "$T_LOGSTATSOUT" ] ; then
      T_WARNINGS=`grep WARNING $T_LOGSTATSOUT | awk '{print $2}'`
      T_ERRORS=`grep ERROR $T_LOGSTATSOUT | awk '{print $2}'`
      T_FATALS=`grep FATAL $T_LOGSTATSOUT | awk '{print $2}'`
  fi

  # Write the xml output file (HEAD)
  cat ${T_XMLJOBINFOTEMPLATEHEAD} > ${T_XMLJOBINFOOUTPUT}

  # Write the xml output file (BODY)
  sed -e "s#@TIMESTAMP@#$T_TIMESTAMP#g" \
      -e "s#@ELAPSED@#$T_ELAPSED#g" \
      -e "s#@NODENAME@#$T_NODENAME#g" \
      -e "s#@GCCVERSION@#$T_GCCVERSION#g" \
      -e "s/@KERNEL@/$T_KERNEL/g" \
      -e "s#@OS@#$T_OS#g" \
      -e "s#@DISTRIBUTION@#$T_DISTRIBUTION#g" \
      -e "s#@MACHINE@#$T_MACHINE#g" \
      -e "s#@PROCESSOR@#$T_PROCESSOR#g" \
      -e "s#@CPUNAME@#$T_CPUNAME#g" \
      -e "s#@CPUNUM@#$T_CPUNUM#g" \
      -e "s#@BOGOMIPS@#$T_BOGOMIPS#g" \
      -e "s#@MEM@#$T_MEM#g" \
      -e "s#@WARNINGS@#$T_WARNINGS#g" \
      -e "s#@ERRORS@#$T_ERRORS#g" \
      -e "s#@FATALS@#$T_FATALS#g" \
      -e "s#@SITEROOT@#$SITEROOT#g" \
      -e "s#@RELEASE@#$T_RELEASE#g" \
      -e "s#@DISTREL@#$T_DISTREL#g" \
      ${T_XMLJOBINFOTEMPLATEBODY} >> ${T_XMLJOBINFOOUTPUT}

  # Write the xml output file (ERROR ACRONYMS)
  if [ -s "${T_ERROR_CATEGORIES}" ] ; then
      cat ${T_ERROR_CATEGORIES} | while read line; do
          OCCURR="`echo $line | awk '{ print $1 }'`"
          ACRONYM="`echo $line | awk '{ print $2 }'`"
          ERRORID="`echo $line | awk '{ print $3 }'`"
          sed -e "s#@OCCURR@#$OCCURR#g" \
              -e "s#@ACRONYM@#$ACRONYM#g" \
              -e "s#@ERRORID@#$ERRORID#g" \
          ${T_XMLJOBINFOTEMPLATEERRORS} >> ${T_XMLJOBINFOOUTPUT}
      done
  fi

  # Write the xml output file (TAIL)
  cat ${T_XMLJOBINFOTEMPLATETAIL} >> ${T_XMLJOBINFOOUTPUT}
}
