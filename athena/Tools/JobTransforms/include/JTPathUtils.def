# Utility functions

# Find a path starting from a string = path1:path2:path3:...:pathn
JTPathFinder ()
{
  CHECK_FILE=$1
  if [ "$JT_SEARCHPATH" = "" ] ; then
    return -1
  fi

  echo "$JT_SEARCHPATH" \
  | awk -F ':' '{ for (i=1; i<=NF; i++) print $i }' 2> /dev/null \
  | while read current_path; do
    FINDPATH=`eval \find $current_path -name "$CHECK_FILE" 2> /dev/null`
    if [ "$FINDPATH" != "" ] ; then
      for item in $FINDPATH ; do echo $item ; done
      return 0
    fi
  done

  return 1
}


# Build a full path starting from a releative one
JTPathBuilder ()
{
  PATHSTRING=$1
  TMPFILE=/tmp/tmp-path.$$
  if [ "$PATHSTRING" = "" ] ; then
    return -1
  fi

  NEWPATH=""
  SKIPNEXT=0
  PATHSTRING="`echo $PATHSTRING | sed -e "s#^\./##g"`"
  FIRSTCHAR="`echo $PATHSTRING | cut -b 1`"
  [ "$FIRSTCHAR" != "/" ] && PATHSTRING="$PWD/$PATHSTRING"
  echo $PATHSTRING \
  | awk -F '/' '{ for (i=NF; i>1; i--) print $i }' \
  | while read line ; do
    if [ "$line" != "." -a "$line" != ".." -a "$line" != "" -a $SKIPNEXT -eq 0 ]
    then
      NEWPATH="`cat $TMPFILE 2>/dev/null`"
      if [ "$NEWPATH" != "" ] ; then
        echo -n $line/$NEWPATH > $TMPFILE
      else
        echo -n $line > $TMPFILE
      fi
    fi
    if [ "$line" = ".." ] ; then
      let SKIPNEXT+=1
    else
      [ $SKIPNEXT -ne 0 ] && let SKIPNEXT-=1
    fi
  done

  echo "/"`cat $TMPFILE`
  rm -fr $TMPFILE

  return 0
}
