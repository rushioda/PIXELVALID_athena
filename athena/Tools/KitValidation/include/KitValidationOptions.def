# Defaults
T_COLOR="yes"
T_CONTEXT="kit"
T_GUESSPROBLEM="no"
T_KEEPDATA="no"
T_AUTODISCOVERY="yes"
T_GRID=""
T_NOSTOP="no"
T_KVPREFIX=""
T_KVPOSTTAG=""
T_MARK="no"
T_SAVECORE="no"
T_SETUPONLY="no"
T_SUITE=""
T_TEMPPATH=/tmp
T_TEST=""
T_USEROOTHIST=
T_RELEASEBASE=dist
VERBOSE="no"
T_SHOWCONF=""
T_KVT=""
#T_XMLCONF=""

# Read options from the command line
OPTS=`getopt -o Cc:d:e:gG:I:kLnp:P:r:b:s:St:vVx:h -l bw,compiler-path:,conf:,context:,data-path:,disable:,enable:,err-log:,grid:,guess-problem,include:,keep-data,kvpost-tag:,kvt:,lcg,mark,no-auto,no-stop,path:,prefix:,project:,release:,release-base:,save-core,scripts:,search:,setup-only,show-suites,show-tests,suite:,temp-path:,test:,test-config:,use-root,verbose,version,help -- "$@"`
                                                                                
if [ $? != 0 ] ; then echo "Terminating..."; exit -1 ; fi
                                                                                
eval set -- "$OPTS"
                                                                                
while true ; do
        case "$1" in
		--bw)               T_COLOR="no"; shift;;
                --compiler-path|-c) GCC_SITE=$2; shift 2;;
                --conf)             T_CONF=$2; shift 2;;
                --context|-x)       T_CONTEXT=$2; shift 2;;
		--data-path|-d)     T_DATAPATH=$2; shift 2;;
		--disable)          T_DISABLE="$2"; shift 2;;
		--enable)           T_ENABLE="$2"; shift 2;;
		--err-log|-e)       T_ERRLOG=$2; shift 2;;
		--keep-data|-k)     T_KEEPDATA="yes"; shift;;
		--grid|-G)          T_GRID="$2"; shift 2;;
                --guess-problem|-g) T_GUESSPROBLEM="yes"; shift;;
                --include|-I)       export T_INCPATH="$2"; shift 2;;
                --kvt)              T_KVT="$2"; shift 2;;
                --kvpost-tag)       T_KVPOSTTAG="$2"; shift 2;;
		--lcg|-L)           T_LCGMODE="yes"; shift;;
		--mark)             T_MARK="yes"; shift;;
		--no-auto)          T_AUTODISCOVERY="no"; shift;;
		--no-stop|-n)       T_NOSTOP="yes"; shift;;
		--path|-p)          ATLAS_ROOT=$2; shift 2;;
		--prefix|-P)        T_KVPREFIX=$2; shift 2;;
		--project)          T_KVPROJECT=$2; shift 2;;
		--release|-r)       T_RELEASE=$2; shift 2;;
		--release-base|-b)  T_RELEASEBASE=$2; shift 2;;
		--save-core|-C)     T_SAVECORE="yes"; shift;;
		--scripts|-s)       T_SCRIPTPATH=$2; shift 2;;
		--search)           T_ADDSEARCH=$2; shift 2;;
		--setup-only|-S)    T_SETUPONLY="yes"; shift;;
		--show-suites)      T_SHOWCONF="suite"; shift;;
		--show-tests)       T_SHOWCONF="test"; shift;;
		--suite)            T_SUITE="$2"; shift 2;;
		--temp-path|-t)     T_TEMPPATH="$2"; shift 2;;
		--test)             T_TEST="$2"; shift 2;;
		--test-config)      T_XMLCONF="$2"; shift 2;;
		--use-root)         T_USEROOTHIST="yes"; shift;;
		--verbose|-v)       VERBOSE="yes"; shift;;
		--version|-V)       showVersion; exit;;
		--help|-h)          help;shift;;
                --)                 shift ; break ;;
                \?)                 break ;
                exit ;;
        esac
done

export T_USEROOTHIST
export T_CONTEXT
[ "$T_XMLCONF" != "" ] && T_XMLCONF="`echo $T_XMLCONF | sed -e 's/^\"//' -e 's/\"$//'`"

# Check if a release number has been specified, otherwise die
if [ "$T_RELEASE" == "" ] ; then
  echo "No release number specified"
  help
  exit -1
else
  T_RELTYPE="`echo $T_RELEASE | awk -F':' '{if ($2) print "-"$2}' | sed 's/^-*/-/g'`"
  T_RELEASE="`echo $T_RELEASE | cut -d':' -f 1`"
fi
