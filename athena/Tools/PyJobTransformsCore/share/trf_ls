#!/usr/bin/env python
import sys,os,getopt
def usage():
    use = "usage: %s [-h] [-p] [-f] [[trf_name] [trf_name]]" % os.path.basename(sys.argv[0])
    print use + """
    
Print a list of available jobtransforms, or find a specific one. Wildcards allowed.
If <trf_name> does not end with _trf.py, this will be added before searching.
When no arguments are given, all available jobtransforms are printed.
By default PATH is used to look jobtransforms, and only the jobtransform names are shown.
Options:
 -h : Print this help message
 -f : Print full path name.
 -p : Look in PYTHONPATH and include package name in front of trf name (for import in python)
      If combined with option -f, print full path of python module."""


showPython = False
showPath = False

# parse options
if len(sys.argv) > 1:
    opts,args = getopt.getopt( sys.argv[1:], 'hpf' )
else:
    opts = []
    args = []

for opt,arg in opts:
    if opt == '-h':
        usage()
        sys.exit()
    elif opt == '-p':
        showPython = True
    elif opt == '-f':
        showPath = True


try:
    from PyJobTransformsCore.envutil import find_files_env
except ImportError:
    raise EnvironmentError("ATLAS Runtime environment not setup.")


if args:
    filelist = args
else:
    filelist = [ '*_trf.py' ]

postfix = '_trf.py'
prefix = ''
pathToFind = 'PATH'

if showPython:
    pathToFind = 'PYTHONPATH'
    prefix = '*' + os.sep

for f in filelist:
    if not os.path.dirname(f): f = prefix + f
    if not f.endswith(postfix): f += postfix
    found = find_files_env( f, pathToFind )
    for full in found:
        trf = os.path.basename(full)
        if showPath:
            print full
        elif showPython:
            dir = os.path.dirname(full)
            package = os.path.basename(dir)
            print '%s ' % os.path.join(package,trf)
        else:
            print trf
            
