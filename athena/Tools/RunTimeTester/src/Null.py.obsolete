class Null:
    "Null object pattern See Python Cookbook - A class version of None"

    def __init__(self, *args, **kwargs):pass
    def __call__(self, *args, **kwargs): return self
    def __repr__(self): return 'Null()'
    def __str__(self): return 'Null()'
    def __nonzero__(self): return 0

    def __getattr__(self, name):
        print '__getattr__(), '+name
        return self
    def __setattr__(self, name, value): return self
    def __delattr__(self, name): return self

    def __eq__(self, other):
        if other == None: return True
        if other.__class__ == self.__class__: return True
        return False

    
    
if __name__=='__main__':
    n1 = Null()
    n2 = Null()

    print n1==n2

    class A:
        def __init__(self): self.i=1

    a=A()
    print n1 == a

    print n1 == 1

    print n1.group
