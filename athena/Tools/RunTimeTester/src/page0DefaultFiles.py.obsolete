currentStatusN0X = """
/************************************************/
/*                                              */
/*              EXPERT CORNER                   */
/*                                              */
/*                                              */
/*  (If you don't want to change the way that)  */
/*  (messages are displayed, rather you just )  */
/*  (want to edit messages, then skip down to)  */
/*  (the USER CORNER                         )  */
/*                                              */
/************************************************/

var runs = new Array();

/******************************************/
/* A crappy Javascript class for messages */
/******************************************/

function Run(date,rel,branch,comment){
   this.theDate     = date;
   this.theRel      = rel;
   this.theBranch   = branch;
   this.theComment  = comment;
   runs.push(this);
}

/***************************************************/
/* Functions to do with displaying on the web page */
/***************************************************/

function titleStyle(){
   return 'font-family:sans-serif;font-weight:bold;font-size:10pt;color:#88f;background-color:#ccf';
}

function textStyle(){
   return 'font-family:sans-serif;font-size:8pt';
}

/* HTML code for displaying a message*/
function display(numbRunsToDisplay,title){
   htmlCode  = '<div align="center">';
   htmlCode += '<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#dddddd">';
   htmlCode += '<tr><td colspan= "4" align="center" style="' + titleStyle() + '">' + title + '</td></tr>'
   htmlCode += '<tr style="font-weight:bold"><td width="20%">NICOS Date</td><td width="10%">Release</td><td width="10%">Branch</td><td>Comment</td></tr>';

   for (var i=runs.length-1;i >= (runs.length - numbRunsToDisplay);i--){
      run = runs[i];
      htmlCode += '<tr style="' + textStyle() + '">';
      htmlCode += '<td>' + run.theDate + '</td>';
      htmlCode += '<td>' + run.theRel + '</td>';
      htmlCode += '<td>' + run.theBranch + '</td>';
      htmlCode += '<td>' + run.theComment + '</td>';   
      htmlCode += '</tr>';
   }

   htmlCode += '</table>';
   htmlCode += '</div>';

   document.write(htmlCode);
}


/************************************************/
/*                                              */
/*                USER CORNER                   */
/*                                              */
/*                                              */
/************************************************/

new Run('---','rel_XXX','N.0.X','This JavaScript file located in %s');

/***********************************************************/
/*        ADD A NEW RUN ABOVE THIS BOX                     */
/***********************************************************/

/* Show the last how many runs ? */
display(numbOfRunsToDisplay = 7, title = ":: Current status of N0X runs ::");
"""

#########################################################################
#########################################################################

currentStatusNX0  = """
/************************************************/
/*                                              */
/*              EXPERT CORNER                   */
/*                                              */
/*                                              */
/*  (If you don't want to change the way that)  */
/*  (messages are displayed, rather you just )  */
/*  (want to edit messages, then skip down to)  */
/*  (the USER CORNER                         )  */
/*                                              */
/************************************************/

var runs = new Array();

/******************************************/
/* A crappy Javascript class for messages */
/******************************************/

function Run(date,rel,branch,comment){
   this.theDate     = date;
   this.theRel      = rel;
   this.theBranch   = branch;
   this.theComment  = comment;
   runs.push(this);
}

/***************************************************/
/* Functions to do with displaying on the web page */
/***************************************************/

function titleStyle(){
   return 'font-family:sans-serif;font-weight:bold;font-size:10pt;color:#88f;background-color:#ccf';
}

function textStyle(){
   return 'font-family:sans-serif;font-size:8pt';
}

/* HTML code for displaying a message*/
function display(numbRunsToDisplay,title){
   htmlCode  = '<div align="center">';
   htmlCode += '<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#dddddd">';
   htmlCode += '<tr><td colspan= "4" align="center" style="' + titleStyle() + '">' + title + '</td></tr>'
   htmlCode += '<tr style="font-weight:bold"><td width="20%">NICOS Date</td><td width="10%">Release</td><td width="10%">Branch</td><td>Comment</td></tr>';

   for (var i=runs.length-1;i >= (runs.length - numbRunsToDisplay);i--){
      run = runs[i];
      htmlCode += '<tr style="' + textStyle() + '">';
      htmlCode += '<td>' + run.theDate + '</td>';
      htmlCode += '<td>' + run.theRel + '</td>';
      htmlCode += '<td>' + run.theBranch + '</td>';
      htmlCode += '<td>' + run.theComment + '</td>';   
      htmlCode += '</tr>';
   }

   htmlCode += '</table>';
   htmlCode += '</div>';

   document.write(htmlCode);
}


/************************************************/
/*                                              */
/*                USER CORNER                   */
/*                                              */
/*                                              */
/************************************************/

/* This is all the messages we've ever posted.    */
/* Add your new one down below after all this lot.*/

new Run('---','rel_XXX','N.X.0','This JavaScript file located in %s');

/***********************************************************/
/*        ADD A NEW RUN ABOVE THIS BOX                     */
/***********************************************************/

/* Show the last how many runs ? */
display(numbOfRunsToDisplay = 7, title = ":: Current status of NX0 runs ::");

"""

#########################################################################
#########################################################################

messageOfTheDay  = """
/************************************************/
/*                                              */
/*              EXPERT CORNER                   */
/*                                              */
/*                                              */
/*  (If you don't want to change the way that)  */
/*  (messages are displayed, rather you just )  */
/*  (want to edit messages, then skip down to)  */
/*  (the USER CORNER                         )  */
/*                                              */
/************************************************/

var messages = new Array();

/******************************************/
/* A crappy Javascript class for messages */
/******************************************/

function Message(date,text,isImportant){
   this.theDate     = date;
   this.theText     = text;
   this.isImportant = isImportant;
   messages.push(this);
}

/***************************************************/
/* Functions to do with displaying on the web page */
/***************************************************/

/* Display style for the message text */
function textStyle(isImportant){
   style = 'font-family:arial;font-size:10pt;';
   if (isImportant){
       style = style + 'font-weight:bold;color:red';
   }
   else{
       style = style + 'color:black';
   }

   return style;
}

/* Display style for the date*/
function dateStyle(){
   return 'font-family:arial;font-size:10pt;color:black;font-weight:bold';
}

function titleStyle(){
   return 'font-family:sans-serif;font-weight:bold;font-size:10pt;color:#88f;background-color:#ccf';
}

/* HTML code for displaying a message*/
function display(numbMessagesToDisplay,title){
   htmlCode  = '<div align="center">';
   htmlCode += '<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#dddddd">';
   htmlCode += '<tr><td colspan= "4" align="center" style="' + titleStyle() + '">' + title + '</td></tr>'

   for (var i=messages.length-1;i >= (messages.length - numbMessagesToDisplay);i--){
      message = messages[i];
      htmlCode += '<tr style="' + dateStyle() + '">';
      htmlCode += '<td>' + message.theDate + '</td>';
      htmlCode += '</tr>';
      htmlCode += '<tr style="' + textStyle(message.isImportant) + '">';
      htmlCode += '<td>' + message.theText + '</td>';
      htmlCode += '</tr>';
   }

   htmlCode += '</table>';
   htmlCode += '</div>';

   document.write(htmlCode);

}

/************************************************/
/*                                              */
/*                USER CORNER                   */
/*                                              */
/*                                              */
/************************************************/

new Message('---','The JavaScript file that created this is located in %s',true);


/***********************************************************/
/*        ADDING A NEW MESSAGE                             */
/***********************************************************/
/* Add your latest message above this comment box          */
/* Skeleton code is:                                       */
/*   new Message('theDate','theMessage',false);            */
/*                                                         */
/*  where false means the message gets displayed normal    */
/*        true means message displayed in red and bold     */
/***********************************************************/

/* Show the last how many messages ? */
display(numberOfMessagesToDisplay = 1,title=":: Message of the Day ::");
"""

#########################################################################
#########################################################################

page0 = """
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Home | The ATLAS RunTimeTester Results</title>
  </head>

  <frameset rows="25%,*">
    <frame src="status.html" name="top_frame"/>    
    <frame src="page1.xml" name="main_frame"/>
  </frameset>

</html>
"""

#########################################################################
#########################################################################

page0_noTopFrame = """
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Home | The ATLAS RunTimeTester Results</title>
  </head>

  <frameset cols="15%,*">
      <frame src="page0.xml" />    
      <frame src="" name="main_frame"/>
  </frameset>
</html>
"""
                                        
#########################################################################
#########################################################################

RTTpage1_LinksAtTopOfPage = """
/*********************/
/***** Base URLs *****/
/*********************/

uclHEP    = 'http://www.hep.ucl.ac.uk/atlas/AtlasTesting/';
cernRTT   = 'http://cern.ch/atlasrtt/';
atlasComp = 'http://atlas-computing.web.cern.ch/atlas-computing/';

/*********************/
/***** Style CSS *****/
/*********************/

styleClass  = '<style>';
styleClass += 'a.pageLink{font-family:arial;font-size:10pt;color:#777777;text-decoration:underline}';
styleClass += 'a.pageLink:hover{font-family:arial;font-size:10pt;color:black;text-decoration:none}';
styleClass += '</style>';

/*********************/
/***** The links *****/
/*********************/

link00 = '<a target="main_frame" class="pageLink" href="page1.xml">All RTT results</a>';
link0 = '<a target="main_frame" class="pageLink" href="weeklyTable/weekly.php">Summary of the week</a>';
link1 = '<a target="_top" class="pageLink" href="https://savannah.cern.ch/bugs/?group=atlas-infra">Report RTT bugs</a>';
link2 = '<a target="_top" class="pageLink" href="' + uclHEP + '">RTT documentation</a>';
link3 = '<a target="_top" class="pageLink" href="' + atlasComp + 'projects/releases/releases.php">Release Status</a>';
link4 = '<a target="_top" class="pageLink" href="' + atlasComp +'links/distDirectory/nightlies/global/">NICOS</a>';
link5 = '<a target="main_frame" class="pageLink" href="' + cernRTT + 'DatasetManager.report">Dataset Manager Report</a>';

document.write(
   styleClass
 + '<div align="center">'
 + link00 + ' | '
 + link0 + ' | '
 + link1 + ' | '
 + link2 + ' | '
 + link3 + ' | '
 + link4 + ' | '
 + link5
 + '</div><br />' 
);
"""

#########################################################################
#########################################################################

status = """
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">body{background-color:#eeeeff}</style>
<title></title>
</head>

<body>
<script src="RTTpage1_LinksAtTopOfPage.js" type="text/JavaScript"></script>
<table width="100%">
<tr><td colspan="2"><script src="messageOfTheDay.js" type="text/JavaScript"></script></td></tr>
</table>
</body>
</html>
"""

#########################################################################
#########################################################################

page0XSL = \
"""<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="RTTpage0">
  <html>
  <style>
   div.header{font-family:arial;font-size:10pt;font-weight:bold;background-color:#ccccff;color:#8888ff}
   div.text{font-family:arial;font-size:10pt;color:black}
   a:link{font-family:arial;font-size:10pt;color:#333333;text-decoration:underline}
   a:visited{color:gray;font-family:arial;font-size:10pt;}
   a:hover{color:orange;text-decoration:none}
   .button{font-family:sans-serif;font-weight:bold;font-size:10pt;background-color:#ccccff;border:1px #aaaaff solid;cursor:pointer;}
  </style>
  <body bgcolor="#eeeeff">
      <div class="header" align="center">:: Top Frame ::</div>
      <p align="center">
          <button class="button" onclick="top.location.href='page0.noTopFrame.html'">Hide</button>
          <button class="button" onclick="top.location.href='page0.html'">Show</button>
      </p>         
      <div class="header" align="center">:: Available Results ::</div>
      <p>
      <xsl:choose>
         <xsl:when test="count(page1)=0">
             <div class="text">No results available.</div>
         </xsl:when>
         <xsl:otherwise>
            <xsl:for-each select="page1">
               <xsl:sort select="normalize-space(page1Name)" />
               <xsl:variable name="page1URL"><xsl:value-of select="normalize-space(relPage0Page1Path)" /></xsl:variable>
               <a href="{$page1URL}" target="main_frame"><xsl:value-of select="page1Name" /></a><br />
            </xsl:for-each>
         </xsl:otherwise>
       </xsl:choose>
      </p>
      <div class="header" align="center">:: Old Monolithic Results ::</div>
      <a href="http://www.hep.ucl.ac.uk/atlas/RTTmonolithic/RTTpage1.html" target="main_frame">Prior 11.2.0</a>          
  </body>  
</html>
</xsl:template>
</xsl:stylesheet>
"""

#########################################################################
#########################################################################

page1XSL = \
"""<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="RTTpage1">
  <html>
  <style>
  .level1TableHeader{font-family:arial;font-size:16pt;font-weight:bold;color:black;background-color:#8888ff}
  .level2TableHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;background-color:#aaaaff}
  .tableEntry{font-family:arial;font-size:14pt;color:#333333;background-color:#bbbbff}
   a.tableLink{font-family:arial;font-size:14pt;color:#333333;text-decoration:none;border-bottom:1px solid}
   a.tableLink:hover{font-family:arial;font-size:14pt;color:orange;text-decoration:none;border-bottom:1px solid}
   a.pageLink{font-family:arial;font-size:10pt;color:#777777;text-decoration:underline}
   a.pageLink:hover{font-family:arial;font-size:10pt;color:black;text-decoration:none}
   a.permaLink{font-family:arial;font-size:7pt;color:#777777;text-decoration:underline;float:right}
   a.permaLink:hover{color:black;text-decoration:none}
   .sectionHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;}
   .buildHeader{font-family:arial;font-size:14pt;font-weight:bold;background-color:#ddddff;color:black;}
  </style>
  <body bgcolor="#eeeeff">
  <center>
     <h1>All available RTT runs</h1><br />


     <table  BORDER="1" CELLSPACING="0" CELLPADDING="4">
        <tr class="level2TableHeader">
           <td align="center" valign="top" colspan="1">Release</td>
           <td align="center" valign="top" colspan="1">Branch</td>
           <td align="center" valign="top" colspan="1">Platform</td>
           <td align="center" valign="top" colspan="1">Project</td>
           <td align="center" valign="top" colspan="1">Started<font color="yellow"> (GMT)</font></td>
           <td align="center" valign="top" colspan="1">Completed<font color="yellow"> (GMT)</font></td>
           <td align="center" valign="top" colspan="1">NICOS</td>
           <td align="center" valign="top" colspan="1">Status</td>
        </tr>

        <xsl:for-each select="overview">
           <xsl:sort select="normalize-space(release)" />
           <xsl:sort select="normalize-space(originalBranch)" />
           <xsl:sort select="normalize-space(targetCMTCONFIG)" />
           <xsl:sort select="normalize-space(topProject)" />

           <xsl:variable name="page2url"><xsl:value-of select="normalize-space(relPage1Page2Path)" /></xsl:variable>

           <tr class="tableEntry">
              <td align="center" valign="top" colspan="1"><a class="tableLink" href="{$page2url}"><xsl:value-of select="normalize-space(release)" /></a></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="normalize-space(originalBranch)" /></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="targetCMTCONFIG" /></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="normalize-space(topProject)" /></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="startTime1" /></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="endTime1" /></td>
              <td align="center" valign="top" colspan="1"><xsl:value-of select="nicosDate1" /></td>
              <td align="center" valign="top" colspan="1"><font size="1"><b><xsl:value-of select="statusText" /></b></font></td>	
           </tr>

        </xsl:for-each>

     </table>

  </center>
  </body>
  </html>
</xsl:template>
</xsl:stylesheet>
"""

#########################################################################
#########################################################################

page2XSL = \
"""<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rtt="http://www.hep.ucl.ac.uk/atlas/AtlasTesting/rtt">
<xsl:template match="RTTSummary">
  <html>
  <style>
  .pageHeader{font-family:arial;font-size:20pt;font-weight:bold;color:black;}
  .level1TableHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;background-color:#8888ff}
  .level2TableHeader{font-family:arial;font-size:10pt;font-weight:bold;color:black;background-color:#aaaaff}
  .tableEntry{font-family:arial;font-size:10pt;color:#333333;background-color:#bbbbff}
   a.tableLink{font-family:arial;font-size:10pt;color:#333333;text-decoration:none;border-bottom:1px solid}
   a.tableLink:hover{font-family:arial;font-size:10pt;color:orange;text-decoration:none;border-bottom:1px solid}
   a.pageLink{font-family:arial;font-size:10pt;color:#777777;text-decoration:underline}
   a.pageLink:hover{font-family:arial;font-size:10pt;color:black;text-decoration:none}
   a.permaLink{font-family:arial;font-size:7pt;color:#777777;text-decoration:underline;float:right}
   a.permaLink:hover{color:black;text-decoration:none}              
   .sectionHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;}
  </style>
  <body bgcolor="#eeeeff">
  <a href="" class="permaLink">Permalink</a>
  <center>

  <xsl:comment>******************************************</xsl:comment>
  <xsl:comment>* CREATE THE TOP OF THE PAGE INFORMATION *</xsl:comment>
  <xsl:comment>******************************************</xsl:comment>

  <div class="pageHeader">
        <xsl:value-of select="normalize-space(overview/releaseName)" />/<xsl:value-of select="normalize-space(overview/runType)" /> run ---
        <xsl:value-of select="normalize-space(overview/targetCMTCONFIG)" /> --- <xsl:value-of select="normalize-space(overview/topProject)" />
  </div>

  <br />

  <xsl:comment>******************************************</xsl:comment>
  <xsl:comment>* OUTPUT THE TOOLS AND LIBTOOLS TAGS     *</xsl:comment>
  <xsl:comment>******************************************</xsl:comment>

  <div class="sectionHeader">
       RTT src code: <xsl:value-of select="overview/rttSrcVersion" /><br />
       RTT library tools: <xsl:value-of select="overview/rttLibVersion" /><br />
  </div>

  <br />

  <xsl:comment>******************************************</xsl:comment>
  <xsl:comment>* NUMBER OF PACKAGES FOUND BY THE RTT    *</xsl:comment>
  <xsl:comment>******************************************</xsl:comment>

  <div class="pageHeader">Packages found by the RTT: <xsl:value-of select="count(package)" /></div><br />

  <xsl:comment>******************************************</xsl:comment>
  <xsl:comment>* LINK TO THE TEXT RUN SUMMARY FILE      *</xsl:comment>
  <xsl:comment>******************************************</xsl:comment>
  <a class="pageLink" href="RTTSummary.txt">RTT developer run diagnostics</a><br /><br />

  <xsl:comment>**************************************</xsl:comment>
  <xsl:comment>* CREATE THE MAIN TABLE OF PACKAGES  *</xsl:comment>
  <xsl:comment>**************************************</xsl:comment>

    <table border="1" cellspacing="0" cellpadding="4">
      <tr class="level1TableHeader" align="center" valign="top">
         <td>Package</td><td>Status</td><td>ATN jobs</td><td>RTT jobs</td>
      </tr>

      <xsl:comment>**********************************************</xsl:comment>
      <xsl:comment>* LOOP OVER EACH PACKAGE TAG IN THE XML FILE *</xsl:comment>
      <xsl:comment>**********************************************</xsl:comment>

      <xsl:variable name="atnParentNode" select="ATNSummary" />

      <xsl:for-each select="package">
         <xsl:sort select="normalize-space(packageName)" />
         <xsl:variable name="page3URL"><xsl:value-of select="normalize-space(relPage2Page3Path)" /></xsl:variable>

         <tr class="tableEntry" align="center" valign="top">

           <td><a class="tableLink" href="{$page3URL}"><xsl:value-of select="packageName"/></a><br /><xsl:value-of select="packageTag"/></td>
           <td><xsl:value-of select="normalize-space(packageStatus)" /></td>               
           <td>
               <table border="0" cellspacing="0" cellpadding="4">                   
                   <tr class="level2TableHeader" align="center" valign="top"><td>Run by</td><td>Done Jobs</td><td>Jobs OK</td></tr>
                        <xsl:choose>
                           <xsl:when test="count(minder[normalize-space(jobGroup)='AthenaATN'])=0">
                              <tr><td align="center">RTT</td><td align="center">---</td><td align="center">---</td></tr>
                           </xsl:when>
                           <xsl:otherwise>
                              <tr>
                                 <td align="center">RTT</td>
                                 <td align="center">
                                     <xsl:value-of select="minder[normalize-space(jobGroup)='AthenaATN']/normalize-space(chainLength)" />/<xsl:value-of select="minder[normalize-space(jobGroup)='AthenaATN']/normalize-space(chainLength)" />
                                 </td>
                                 <td align="center">
                                     <xsl:value-of select="minder[normalize-space(jobGroup)='AthenaATN']/normalize-space(chainSuccesses)" />/<xsl:value-of select="minder[normalize-space(jobGroup)='AthenaATN']/normalize-space(chainLength)" />
                                 </td>
                              </tr>
                           </xsl:otherwise>
                        </xsl:choose>
                        <xsl:variable name="currentPackageName"><xsl:value-of select="normalize-space(packageName)" /></xsl:variable>
                        <tr>
                            <td align="center">ATN</td>
                            <td align="center">
                               <xsl:choose>
                                   <xsl:when test="count($atnParentNode/test[packageName=$currentPackageName])=0">---</xsl:when>
                                   <xsl:otherwise><xsl:value-of select="count($atnParentNode/test[packageName=$currentPackageName])" />/<xsl:value-of select="count($atnParentNode/test[packageName=$currentPackageName])" /></xsl:otherwise>
                               </xsl:choose>
                            </td>
                            <td align="center">
                               <xsl:choose>
                                   <xsl:when test="count($atnParentNode/test[normalize-space(packageName)=$currentPackageName])=0">---</xsl:when>
                                   <xsl:otherwise><xsl:value-of select="count($atnParentNode/test[normalize-space(packageName)=$currentPackageName and normalize-space(testStatus)='OK'])" />/<xsl:value-of select="count($atnParentNode/test[packageName=$currentPackageName])" /></xsl:otherwise>
                               </xsl:choose>
                            </td>
                        </tr>
               </table> 
           </td>
           <td align="center">
   
               <xsl:comment>***************************************************</xsl:comment>
               <xsl:comment>* CREATE THE TABLE OF JOB GROUPS FOR THIS PACKAGE *</xsl:comment>
               <xsl:comment>***************************************************</xsl:comment>


               <table border="0" cellspacing="0" cellpadding="4">
                  <tr class="level2TableHeader" align="center" valign="top"><td>Done Jobs</td><td>Jobs OK</td><td>Tests OK</td></tr>
                   
                  <xsl:choose>
                     <xsl:when test="count(minder[not(normalize-space(jobGroup)='AthenaATN')])=0">
                        <tr>
                           <td align="center">---</td>
                           <td align="center">---</td>
                           <td align="center">---</td>
                        </tr>
                     </xsl:when>
                     <xsl:otherwise>
                        <tr>
                           <td align="center">
                               <xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN') and done])" />/<xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN')])" />
                           </td>
                           <td align="center">
                               <xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN') and done and normalize-space(status)='success'])" />/<xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN') and done])" />
                           </td>
                           <td align="center"><xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN') and done and normalize-space(status)='success' and normalize-space(postProcessingResult)='success'])" />/<xsl:value-of select="count(minder[not(normalize-space(jobGroup)='AthenaATN') and done and normalize-space(status)='success'])" />
                           </td>
                        </tr>
                     </xsl:otherwise>
                  </xsl:choose>

               </table>
   
           </td>
         </tr>
   
      </xsl:for-each>

    </table>
    <br />
    <a class="pageLink" href="../../../../../page1.xml">Back to home page</a>
  </center>
               
  </body>
  </html>
</xsl:template>
</xsl:stylesheet>
"""

#########################################################################
#########################################################################

page3XSL = \
"""<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="RTTpage3">
  <html>
  <head>

  <style>
  .level1TableHeader{font-family:arial;font-size:14pt;font-weight:bold;color:black;background-color:#8888ff}
  .level2TableHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;background-color:#aaaaff}
  .tableEntry{font-family:arial;font-size:10pt;color:#333333;background-color:#bbbbff}
   a.permaLink{font-family:arial;font-size:7pt;color:#777777;text-decoration:underline;float:right}
   a.permaLink:hover{color:black;text-decoration:none}              
   a.tableLink{font-family:arial;font-size:10pt;color:#333333;text-decoration:none;border-bottom:1px solid}
   a.tableLink:hover{font-family:arial;font-size:10pt;color:orange;text-decoration:none;border-bottom:1px solid}
   a.pageLink{font-family:arial;font-size:10pt;color:#777777;text-decoration:underline}
   a.pageLink:hover{font-family:arial;font-size:10pt;color:black;text-decoration:none}
  </style>

  </head>
  <body bgcolor="#eeeeff">
    <a href="" class="permaLink">Permalink</a>              
    <center>

       <xsl:comment>******************************************</xsl:comment>
       <xsl:comment>* CREATE THE TOP OF THE PAGE INFORMATION *</xsl:comment>
       <xsl:comment>******************************************</xsl:comment>

       <h2>
        <xsl:value-of select="normalize-space(overview/releaseName)" />/<xsl:value-of select="normalize-space(overview/runType)" /> run ---
        <xsl:value-of select="normalize-space(overview/targetCMTCONFIG)" /> --- <xsl:value-of select="normalize-space(overview/topProject)" />: <xsl:value-of select="normalize-space(package/packageName)" />
       </h2>
       <br /><br />

       <xsl:comment>******************************************</xsl:comment>
       <xsl:comment>* CREATE SUMMARY STATS TABLE             *</xsl:comment>
       <xsl:comment>******************************************</xsl:comment>

       <table cellpadding="4" cellspacing="0" border="1">
           <tr class="level1TableHeader">
                <td align="center" valign="top" colspan="1">Total jobs</td>
                <td align="center" valign="top" colspan="1">Done jobs</td>
                <td align="center" valign="top" colspan="1">Jobs completing OK</td>
                <td align="center" valign="top" colspan="1">Jobs with all post-run tests OK</td>
           </tr>
           <tr class="tableEntry">
                <td align="center" valign="top" colspan="1"><xsl:value-of select="package/nJobsInPackage" /></td>
                <td align="center" valign="top" colspan="1"><xsl:value-of select="package/nJobsDoneInPackage" /></td>
                <td align="center" valign="top" colspan="1"><xsl:value-of select="package/nJobsSuccessInPackage" /></td>
                <xsl:choose>
                    <xsl:when test="package/nTestsInPackage=0">
      	                <td align="center" valign="top" colspan="1">n/a</td>
                    </xsl:when>
                    <xsl:otherwise>                     
      	                <td align="center" valign="top" colspan="1"><xsl:value-of select="package/nTestsSuccessInPackage" /></td>
                    </xsl:otherwise>
                </xsl:choose>
           </tr>
       </table>

       <xsl:comment>******************************************</xsl:comment>
       <xsl:comment>* CREATE MAIN TABLE                      *</xsl:comment>
       <xsl:comment>******************************************</xsl:comment>

       <br />

           <table border="1" cellspacing="0" cellpadding="4">
              <tr class="level1TableHeader" align="center" valign="top">
                <td align="center" valign="top" colspan="1">Name</td>
                <td align="center" valign="top" colspan="1">Group</td>
                <td align="center" valign="top" colspan="1">Datasets</td>
                <td align="center" valign="top" colspan="1">Job</td>
                <td align="center" valign="top" colspan="1">Combined Checks</td>
                <td align="center" valign="top" colspan="1">Ref. Release</td>
              </tr>

              <xsl:for-each select="package/minder">
                 <xsl:sort select="jobGroup" />
                 <xsl:sort select="identifiedName" />              
                 <tr class="tableEntry" align="center" valign="top">
                    <td align="center" valign="top" colspan="1">
                          <xsl:variable name="page4url"><xsl:value-of select="normalize-space(relPage3Page4Location)" /></xsl:variable>

                          <a class="tableLink" href="{$page4url}"><xsl:value-of select="normalize-space(jobName)" /><xsl:value-of select="normalize-space(jobID)" /></a>
                    </td>
                    <td align="center" valign="top" colspan="1">
			 <xsl:value-of select="jobGroup" />
                    </td>
                    <td align="center" valign="top" colspan="1">
                        <xsl:choose>
                           <xsl:when test="count(datasets/dataset) &gt; 0">
                               <xsl:for-each select="datasets/dataset">
                                  <xsl:value-of select="current()" /><br />
                               </xsl:for-each>         
                           </xsl:when>
                           <xsl:otherwise>
                               n/a
                           </xsl:otherwise>
                        </xsl:choose>
                    </td>
                    <td align="center" valign="top" colspan="1">
                        <xsl:choose>
                           <xsl:when test="normalize-space(status)='running'">
                               <font color="brown">running</font>
                           </xsl:when>
                           <xsl:when test="normalize-space(status)='queued'">
                               <font color="brown">queued</font>
                           </xsl:when>
                           <xsl:when test="normalize-space(status)='success'">
                               <font color="green">success</font>
                           </xsl:when>
                           <xsl:otherwise>
                               <font color="red"><xsl:value-of select="normalize-space(status)" /></font>
                           </xsl:otherwise>
                        </xsl:choose>     
                    </td>
                    <td align="center" valign="top" colspan="1">
                      <xsl:choose>
                         <xsl:when test="normalize-space(postProcessingResult)='success'">
                              <font color="green">success</font>
                         </xsl:when>
                         <xsl:when test="normalize-space(postProcessingResult)='error'">
                              <font color="red">error</font>
                         </xsl:when>
                         <xsl:otherwise>
                              <font color="black"><xsl:value-of select="normalize-space(postProcessingResult)" /></font>
                         </xsl:otherwise>
                      </xsl:choose>
                   </td>
                   <td align="center" valign="top" colspan="1"><xsl:value-of select="normalize-space(refRelease)" /></td>
                 </tr>
              </xsl:for-each>
           </table>

       <br />
       <a class="pageLink" href="../../../../../../page1.xml">Back to home page</a>

    </center>
  </body>
  </html>
</xsl:template>
</xsl:stylesheet>
"""

#########################################################################
#########################################################################

page4XSL = \
"""<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="RTTpage4">
  <html>
  <head>

  <style>
  .level1TableHeader{font-family:arial;font-size:14pt;font-weight:bold;color:black;background-color:#8888ff}
  .level2TableHeader{font-family:arial;font-size:12pt;font-weight:bold;color:black;background-color:#aaaaff}
  .tableEntry{font-family:arial;font-size:10pt;color:#333333;background-color:#bbbbff;font-weight:bold}
   a.permaLink{font-family:arial;font-size:7pt;color:#777777;text-decoration:underline;float:right}
   a.permaLink:hover{color:black;text-decoration:none}              
   a.tableLink{font-family:arial;font-size:10pt;color:#333333;text-decoration:none;border-bottom:1px solid}
   a.tableLink:hover{font-family:arial;font-size:10pt;color:orange;text-decoration:none;border-bottom:1px solid}
   a.pageLink{font-family:arial;font-size:10pt;color:#777777;text-decoration:underline}
   a.pageLink:hover{font-family:arial;font-size:10pt;color:black;text-decoration:none}
  </style>

  </head>

  <body bgcolor="#eeeeff">
    <a href="" class="permaLink">Permalink</a>
              
    <center>

       <xsl:comment>******************************************</xsl:comment>
       <xsl:comment>* CREATE THE TOP OF THE PAGE INFORMATION *</xsl:comment>
       <xsl:comment>******************************************</xsl:comment>

       <h2>
          <xsl:value-of select="normalize-space(overview/releaseName)" />/<xsl:value-of select="normalize-space(overview/runType)" /> run ---
          <xsl:value-of select="overview/targetCMTCONFIG" /> --- <xsl:value-of select="normalize-space(overview/topProject)" />
       </h2>
       <h3> <xsl:value-of select="normalize-space(minder/jobName)" /><xsl:value-of select="normalize-space(minder/jobID)" /></h3>

       <xsl:comment>******************************************</xsl:comment>
       <xsl:comment>* CREATE MAIN TABLE                      *</xsl:comment>
       <xsl:comment>******************************************</xsl:comment>

       <br />
           <table border="0" cellspacing="0" cellpadding="0">

              <tr class="tableEntry" align="center" valign="top">
                    <td>

       <table cellpadding="4" cellspacing="0" border="0">
           <tr class="level2TableHeader"><td colspan="2">Summary</td></tr>
           <tr class="tableEntry">
               <td align="right">Job Status:</td>
               <td align="left">
                   <xsl:choose>
                      <xsl:when test="normalize-space(minder/status)='error'">
                          <font color="red">error</font>
                      </xsl:when>
                      <xsl:when test="normalize-space(minder/status)='success'">
                          <font color="green">success</font>
                      </xsl:when>
                      <xsl:otherwise> 
                          <xsl:value-of select="minder/status" />
                      </xsl:otherwise> 
                   </xsl:choose>
               </td>
           </tr>
           <xsl:choose>
               <xsl:when test="count(minder/testResults/testResult)=0">
                   <tr class="tableEntry"><td align="right">Tests:</td><td align="left">no tests</td></tr>
               </xsl:when>
               <xsl:otherwise>
                   <xsl:for-each select="minder/testResults/testResult">
                        <tr class="tableEntry"><td align="right">Test <xsl:value-of select="testName" />:</td>
                           <xsl:choose>
                              <xsl:when test="testStatus=0"><td align="left"><font color="green">success</font></td></xsl:when>
                              <xsl:otherwise><td align="left"><font color="red">error</font></td></xsl:otherwise>
                           </xsl:choose>
                        </tr>
                    </xsl:for-each> 
               </xsl:otherwise>
           </xsl:choose>
           <xsl:choose>
               <xsl:when test="count(minder/checkResults/checkResult)=0">
                   <tr class="tableEntry"><td align="right">Checks:</td><td align="left">no checks</td></tr>
               </xsl:when>
               <xsl:otherwise>
                   <xsl:for-each select="minder/checkResults/checkResult">
                     <tr class="tableEntry"><td align="right">Check: </td>
                           <xsl:choose>
                              <xsl:when test="current()='success'"><td align="left"><font color="green">success</font></td></xsl:when>
                              <xsl:otherwise><td align="left"><font color="red">error</font></td></xsl:otherwise>
                           </xsl:choose>
                        </tr>
                    </xsl:for-each> 
               </xsl:otherwise>
           </xsl:choose>              
              
           <tr class="level2TableHeader"><td colspan="2">Classification</td></tr>

           <xsl:choose>
              <xsl:when test="not(minder/displayClass/node())">
                 <tr><td class="tableEntry">None available</td></tr>
              </xsl:when>
              <xsl:otherwise>
                 <tr class="tableEntry"><td align="right" valign="top">Class:</td><td align="left" valign="top"><xsl:value-of select="minder/displayClass" /></td></tr>
                 <tr class="tableEntry"><td align="right" valign="top">Process:</td><td align="left" valign="top"><xsl:value-of select="minder/displayProcess" /></td></tr>
                 <tr class="tableEntry"><td align="right" valign="top">Component:</td><td align="left" valign="top"><xsl:value-of select="minder/displayComponent" /></td></tr>

              </xsl:otherwise>
           </xsl:choose>
              
           <tr class="level2TableHeader"><td colspan="2">Documentation</td></tr>
           <tr><td class="tableEntry">
              <xsl:choose>
              <xsl:when test="minder/jobDocString/node()"><xsl:value-of select="minder/jobDocString" /></xsl:when>
              <xsl:otherwise>None available</xsl:otherwise>
              </xsl:choose>
           </td></tr>
              
           <tr class="level2TableHeader"><td colspan="2">Auditor stats</td></tr>
           <xsl:choose>
               <xsl:when test="minder/cpuTime and not(minder/cpuTime = 'Unknown')">
                  <tr class="tableEntry"><td align="right" valign="top">CPU time:</td><td align="left" valign="top"><xsl:value-of select="minder/cpuTime" />s</td></tr>
                  <tr class="tableEntry"><td align="right" valign="top">CPU time 2000:</td><td align="left" valign="top"><xsl:value-of select="minder/cpuTime2000" />s</td></tr>
                  <tr class="tableEntry"><td align="right" valign="top">Walltime:</td><td align="left" valign="top"><xsl:value-of select="minder/wallTime" />s</td></tr>
              </xsl:when>
              <xsl:otherwise>
                 <tr class="tableEntry"><td align="right" valign="top">CPU time:</td><td align="left" valign="top">Unknown</td></tr>
                 <tr class="tableEntry"><td align="right" valign="top">CPU time 2000:</td><td align="left" valign="top">Unknown</td></tr>
                 <tr class="tableEntry"><td align="right" valign="top">Walltime:</td><td align="left" valign="top">Unknown</td></tr>
              </xsl:otherwise>
           </xsl:choose>
       <tr class="tableEntry"><td align="right" valign="top">Memory:</td><td align="left" valign="top"><xsl:value-of select="minder/mem" /></td></tr>
            <tr class="tableEntry"><td align="right" valign="top">V-Memory:</td><td align="left" valign="top"><xsl:value-of select="minder/vmem" /></td></tr>
            <tr class="tableEntry"><td align="right" valign="top">Batch Status:</td><td align="left" valign="top"><xsl:value-of select="minder/batchStatus" /></td></tr>
       </table>

                    </td>
                    <td width="10" style="background-color:#ccccff"></td>
                    <td align="left" valign="top" colspan="1">
                         <xsl:choose>
                             <xsl:when test="count(minder/deliveredkeepfiles/keepfile)=0">
                                  <xsl:choose>
                                      <xsl:when test="not(minder/errors/node())">No files available</xsl:when>
                                      <xsl:otherwise><font color="#aa2222">This job was rejected by the RTT. The associated error message is:</font><br /><br /><xsl:value-of select="minder/errors" /></xsl:otherwise>
                                  </xsl:choose>
                             </xsl:when>
                             <xsl:otherwise>
                                  <xsl:for-each select="minder/deliveredkeepfiles/keepfile">
                                       <xsl:sort select="current()" />
                                       <xsl:variable name="keepFileLink"><xsl:value-of select="current()" /></xsl:variable>
                                       <xsl:variable name="infoString"><xsl:value-of select="@info" /></xsl:variable>
                                       <xsl:variable name="displayColor"><xsl:value-of select="@displayColor" /></xsl:variable>
                                       <a class="tableLink" href="{$keepFileLink}" title="{$infoString}" style="color:{$displayColor}"><xsl:value-of select="current()" /></a><br />
                                  </xsl:for-each>
                             </xsl:otherwise>
                         </xsl:choose>
                    </td>
                 </tr>
           </table>

       <br />
       <a class="pageLink" href="../../../../../../../../../page1.xml">Back to home page</a> | <a class="pageLink" href="../../../../page2.xml">Back to packages page</a>

    </center>
  </body>
  </html>
</xsl:template>
</xsl:stylesheet>
"""
