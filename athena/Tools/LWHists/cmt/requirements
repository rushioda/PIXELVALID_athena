package LWHists

author Thomas Kittelmann <thomas.kittelmann@cern.ch>

use AtlasPolicy AtlasPolicy-*

private
use AtlasROOT         AtlasROOT-*        External

# Add cmake compatibility (doesn't do anything on CMT side of things)
apply_pattern cmake_add_command command="find_package(ROOT COMPONENTS Hist RIO)"

#Various compilation options:
#
#*3 lines to get this lib compiled in debug mode (private tests only):
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
#macro_remove AtlasCxxPolicy_pp_cppflags "-DNDEBUG"
#
#Update: seems that recently these four do the trick instead:
#macro_remove componentshr_linkopts "-Wl,-s"
#macro_remove AtlasCxxPolicy_pp_cppflags "-DNDEBUG"
#macro_remove AtlasCxxPolicy_pp_cppflags "-O2"
#macro_append AtlasCxxPolicy_pp_cppflags " -g "
#
#*For cachegrind we might want to add this again:"
#macro_append AtlasCxxPolicy_pp_cppflags "-O2"
#
#*To let valgrind look for problems:
#macro_append AtlasCxxPolicy_pp_cppflags " -DLW_DEBUG_POOLS_USE_NEW"
#
#*To make the pools monitor acquire/release ("mini-valgrind"):
#macro_append AtlasCxxPolicy_pp_cppflags " -DLW_DEBUG_POOLS_DEBUG_USAGE"
#
#*Jump through extra hoops to reproduce obscure ROOT behaviour:
macro_append LWHists_pp_cppflags " -DLW_STRICT_ROOT_BEHAVIOUR"

#*To find users who really maybe shouldn't use LW histograms:
#macro_append AtlasCxxPolicy_pp_cppflags " -DLW_DEBUG_HEAVY_USERS"

#*To compile an extra symbol for better ROOTSPY performance:
#macro_append AtlasCxxPolicy_pp_cppflags " -DLW_DEBUG_ROOTSPY_SYMB"

public



library LWHists *.cxx
apply_pattern installed_library

application lwhists_validate "-s=tests/validation *.cxx"
application lwhists_benchmark "-s=tests/benchmarking *.cxx"
application lwhists_comphistfiles "-s=tests/comphistfiles *.cxx"
private

macro_append LWHists_cppflags " -fno-tree-vectorize " 

macro_append lwhists_validate_dependencies "$(LWHists_library_dependencies)"
macro_append lwhists_benchmark_dependencies "$(LWHists_library_dependencies)"
#NB: The next line IS needed for the nightly build system, despite the
#lwhists_comphistfiles appliction not depending on the LWHists
#library. Don't remove!!!:
macro_append lwhists_comphistfiles_dependencies "$(LWHists_library_dependencies)"
public
