///////////////////////////////////////////////////////////////////
// @algName@.cxx, (c) ATLAS Detector software
///////////////////////////////////////////////////////////////////

#include "@algName@.h"

//================ Constructor =================================================

@nameSpace@::@algName@::@algName@(const std::string& name, ISvcLocator* pSvcLocator)
  :
  AthAlgorithm(name,pSvcLocator)
{
  //  template for property decalration
  //declareProperty("PropertyName", m_propertyName);
}

//================ Destructor =================================================

@nameSpace@::@algName@::~@algName@()
{}


//================ Initialisation =================================================

StatusCode @nameSpace@::@algName@::initialize()
{
  // Code entered here will be executed once at program start.
  
  ATH_MSG_INFO (" initialize()");

  // retrieve something from StoreGate (it's an AthAlg member!)
  // StatusCode sc = evtStore()->retrieve("MyCollection",m_collection);
  // if (sc.isFailure()) ATH_MSG_ERROR ("Could not retrieve ...!");
  
  ATH_MSG_INFO ("initialize() successful in " << name());
  return StatusCode::SUCCESS;
}

//================ Finalisation =================================================

StatusCode @nameSpace@::@algName@::finalize()
{
  // Code entered here will be executed once at the end of the program run.
  return StatusCode::SUCCESS;
}

//================ Execution ====================================================

StatusCode @nameSpace@::@algName@::execute()
{
  // Code entered here will be executed once per event
  return StatusCode::SUCCESS;
}

//============================================================================================

