///////////////////////// -*- C++ -*- /////////////////////////////

/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

// TreeNotifier.h 
// Header file for class TreeNotifier
// Author: S.Binet<binet@cern.ch>
/////////////////////////////////////////////////////////////////// 
#ifndef ATHENAROOTCOMPS_ATHENA_TREENOTIFIER_H
#define ATHENAROOTCOMPS_ATHENA_TREENOTIFIER_H 1

// STL includes
#include <iosfwd>

// Gaudi includes

// ROOT includes
#include "TObject.h"

// Forward declaration
class TTree;

namespace Athena {

class TreeNotifier : public ::TObject
{ 

  /////////////////////////////////////////////////////////////////// 
  // Public methods: 
  /////////////////////////////////////////////////////////////////// 
 public: 

  /// Default constructor: 
  TreeNotifier();

  /// Constructor with parameters: 
  TreeNotifier(TTree *ntuple);

  /// Destructor: 
  virtual ~TreeNotifier(); 

  /////////////////////////////////////////////////////////////////// 
  // Const methods: 
  ///////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////// 
  // Non-const methods: 
  /////////////////////////////////////////////////////////////////// 

  /**
   * @brief Standard Root notify routine.
   *
   */
  Bool_t Notify();

  /////////////////////////////////////////////////////////////////// 
  // Private methods: 
  /////////////////////////////////////////////////////////////////// 
 private: 

  // disallow copy

  /// Copy constructor: 
  TreeNotifier( const TreeNotifier& rhs ); // not implemented

  /// Assignment operator: 
  TreeNotifier& operator=( const TreeNotifier& rhs ); //not implemented

  /////////////////////////////////////////////////////////////////// 
  // Private data: 
  /////////////////////////////////////////////////////////////////// 
 private: 

  /// For propagating notification requests.
  TObject *m_notify_chain;
}; 

/////////////////////////////////////////////////////////////////// 
// Inline methods: 
/////////////////////////////////////////////////////////////////// 
//std::ostream& operator<<( std::ostream& out, const TreeNotifier& o );

} //> end namespace Athena

#endif //> !ATHENAROOTCOMPS_ATHENA_TREENOTIFIER_H
