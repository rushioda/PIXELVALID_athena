package FileStager

author Max Baak <mbaak@cern.ch>

use AtlasPolicy       AtlasPolicy-* 
use GaudiInterface    GaudiInterface-*       External 
use AtlasROOT         AtlasROOT-*               External

## macros
apply_tag  ROOTBasicLibs
apply_tag  ROOTMathLibs
apply_tag  ROOTSTLDictLibs

# Specify the required ROOT components for cmake (transparent to CMT)
apply_pattern cmake_add_command command="find_package(ROOT COMPONENTS Hist Tree RIO)"

## build libraries
apply_pattern dual_use_library files="../Root/*.cxx ../src/*.cxx ../src/components/*.cxx"
apply_pattern have_root_headers \
  root_headers="TStagerInfo.h TStageFileInfo.h TStageManager.h TCopyChain.h TCopyFile.h ../Root/LinkDef.h" \
  headers_lib=FileStagerLib

### Create a named installed library
#library FileStagerLib "../Root/*.cxx"
#apply_pattern named_installed_library library=FileStagerLib
#macro FileStagerLib_dependencies  "filestager_root_dictionary"
#action  filestager_root_dictionary  "( make -f Makefile.Standalone stagercint )"
#
### Create a component library 
#library FileStager *.cxx components/*.cxx
##library FileStager "../src/*.cxx ../components/*.cxx"
#macro_append FileStager_dependencies " FileStagerLib"
#apply_pattern component_library

## applications
macro_append StageMonitor_dependencies             " FileStagerLib "
application           StageMonitor              "../bin/StageMonitor.cxx"

apply_pattern declare_scripts files="../scripts/define_* ../scripts/interpret_* ../scripts/wrapper_*"
apply_pattern declare_joboptions files="*.py"
apply_pattern declare_python_modules files="*.py"

private
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
## c++ flags
#macro cppflags        " -g -Wall -W -Woverloaded-virtual -Wno-unused-parameter -Wno-unused-variable -I$(ROOTSYS)/include -I../Root -IRoot"
#macro cpplinkflags    " -L${ROOTSYS}/lib -lRIO -lNet -lCore -lCint -lTree -lHist -lMatrix -lPhysics -ldl "

