*** DataList_test test1 BEGIN ***
intL: 0x5fe290 0x5fe210 0x5fe250 
7 1 3 
intL2: 0x5fe2b0 0x5fe2f0 0x5fe330 0x5fe370 0x5fe3f0 
5 5 5 5 6 
dfluff: 0x5fe670 0x5fe720 
 --> Now deleting copied list, but it should not delete elements as it does not own them. You should not see message of Element Destructor
 <-- delete done
 --> Now deleting list copied via iterator. You should NOT see the elements being deleted
 <-- delete done
 --> Now resizing DataList<DerivedFluff>
 --> You should see one DerivedFluff object being deleted
 ----> Destructor of AbsFluff called for 0x5fe720. After return, left alive 1
 <-- resize done
 --> Now deleting DataList<DerivedFluff>. You should see all remaining DerivedFluff objects being deleted
 ----> Destructor of AbsFluff called for 0x5fe670. After return, left alive 0
 <-- delete done
 --> Now erasing one element of the DerivedFluff container. You should see one instance being deleted
 ----> Destructor of AbsFluff called for 0x5fd600. After return, left alive 3
 <-- erase done
 --> Now resizing view container. You should NOT see the elements being deleted
 <-- resize done
 --> Now deleting two DerivedFluff instances
 ----> Destructor of AbsFluff called for 0x5fef00. After return, left alive 14
 ----> Destructor of AbsFluff called for 0x5fefb0. After return, left alive 13
 <-- delete done
 ----> Destructor of AbsFluff called for 0x5ff410. After return, left alive 17
 ----> Destructor of AbsFluff called for 0x5ff360. After return, left alive 16
--> We have purposedly duplicated an element of pBadFluff: 0x5ff410 0x5ff4c0 0x5ff410 
---> now we should see a warning message from ~DataList
WARNING: duplicated pointer found in a DataList of DerivedFluff owning its elements! 0x5ff410
 ----> Destructor of AbsFluff called for 0x5ff410. After return, left alive 17
 ----> Destructor of AbsFluff called for 0x5ff4c0. After return, left alive 16
*** DataList_test test1 OK ***
 ----> Destructor of AbsFluff called for 0x5feed0. After return, left alive 15
 ----> Destructor of AbsFluff called for 0x5fef00. After return, left alive 14
 ----> Destructor of AbsFluff called for 0x5fefb0. After return, left alive 13
 ----> Destructor of AbsFluff called for 0x5fd600. After return, left alive 12
 ----> Destructor of AbsFluff called for 0x5fe7d0. After return, left alive 11
 ----> Destructor of AbsFluff called for 0x5fe970. After return, left alive 10
 ----> Destructor of AbsFluff called for 0x5fe9e0. After return, left alive 9
 ----> Destructor of AbsFluff called for 0x5fea50. After return, left alive 8
 ----> Destructor of AbsFluff called for 0x5feac0. After return, left alive 7
 ----> Destructor of AbsFluff called for 0x5feb50. After return, left alive 6
 ----> Destructor of AbsFluff called for 0x5febe0. After return, left alive 5
 ----> Destructor of AbsFluff called for 0x5fec70. After return, left alive 4
 ----> Destructor of AbsFluff called for 0x5fed00. After return, left alive 3
 ----> Destructor of AbsFluff called for 0x5fe670. After return, left alive 2
 ----> Destructor of AbsFluff called for 0x5fe720. After return, left alive 1
 ----> Destructor of AbsFluff called for 0x5fe800. After return, left alive 0
*** DataList_test [test2] BEGIN ***
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fe210
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fe330
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fe430
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fe370
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff4f0
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff4b0
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff670
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff790
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff7f0
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff970
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ffd30
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fff30
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5ff4f0
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x6000d0
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fea90
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fea50
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fec10
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fed30
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fed90
WARNING: duplicated pointer found in a DataList of AA owning its elements! 0x5fef10
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x600550
WARNING: duplicated pointer found in a DataList of P owning its elements! 0x600b08
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5fec90
WARNING: duplicated pointer found in a DataList of P owning its elements! 0x600908
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5ff850
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5ff0f0
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5ff9d0
WARNING: duplicated pointer found in a DataList of P owning its elements! 0x600768
WARNING: duplicated pointer found in a DataList of P owning its elements! 0x600768
WARNING: duplicated pointer found in a DataList of P owning its elements! 0x600768
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x601240
WARNING: duplicated pointer found in a DataList of R owning its elements! 0x6005d8
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x600580
WARNING: duplicated pointer found in a DataList of R owning its elements! 0x5fea88
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5ffc90
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x5ffc50
WARNING: duplicated pointer found in a DataList of M owning its elements! 0x600c70
WARNING: duplicated pointer found in a DataList of R owning its elements! 0x601148
WARNING: duplicated pointer found in a DataList of R owning its elements! 0x601148
WARNING: duplicated pointer found in a DataList of R owning its elements! 0x601148
name: DataList<AA>
 clid, vers, is_do: 26fd 1 0
name: DataList<BB>
 clid, vers, is_do: 26fe 1 0
name: DataList<CC>
 clid, vers, is_do: 854e980 2 0
*** DataList_test [test2] OK ***
