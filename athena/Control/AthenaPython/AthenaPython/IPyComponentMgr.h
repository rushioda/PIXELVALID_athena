///////////////////////// -*- C++ -*- /////////////////////////////

/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

// IPyComponentMgr.h 
// Header file for class IPyComponentMgr
// Author: S.Binet<binet@cern.ch>
/////////////////////////////////////////////////////////////////// 
#ifndef ATHENAPYTHON_IPYCOMPONENTMGR_H 
#define ATHENAPYTHON_IPYCOMPONENTMGR_H 

/** @class IPyComponentMgr
 */

// STL includes
#include <string>

// FrameWork includes
#include "GaudiKernel/IService.h"

// AthenaPython includes

// forward declaration
struct _object;
typedef _object PyObject;
class IPyComponent;

class IPyComponentMgr : virtual public IService
{ 

  /////////////////////////////////////////////////////////////////// 
  // Public methods: 
  /////////////////////////////////////////////////////////////////// 
 public: 

  /** Destructor: 
   */
  virtual ~IPyComponentMgr();

  /////////////////////////////////////////////////////////////////// 
  // Const methods: 
  ///////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////// 
  // Non-const methods: 
  /////////////////////////////////////////////////////////////////// 

  static const InterfaceID& interfaceID();

  /**
   * Retrieve a python object from the python world
   * this returns a NEW reference to that python object.
   */
  virtual PyObject* pyObject( IPyComponent* comp ) = 0;

  /////////////////////////////////////////////////////////////////// 
  // Protected methods: 
  /////////////////////////////////////////////////////////////////// 
 protected: 

  /////////////////////////////////////////////////////////////////// 
  // Private methods: 
  /////////////////////////////////////////////////////////////////// 
 private: 
}; 

// I/O operators
//////////////////////

/////////////////////////////////////////////////////////////////// 
// Inline methods: 
/////////////////////////////////////////////////////////////////// 
inline const InterfaceID& IPyComponentMgr::interfaceID() 
{ 
  static const InterfaceID IID_IPyComponentMgr("IPyComponentMgr", 1, 0);
  return IID_IPyComponentMgr; 
}

#endif //> ATHENAPYTHON_IPYCOMPONENTMGR_H
