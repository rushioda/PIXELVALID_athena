# **********************************************************************
# $Id: collisions_run.config 796786 2017-02-12 19:58:46Z shonda $
# **********************************************************************

############################################################
# SCT
############################################################

#############
# Output
#############

output top_level {
	##Un-comment for stand alone testing
	#algorithm = SCT_WorstCaseSummary

	output InnerDetector {
		output SCT {
		       output Summary {
			      output BSErrVsLBs {
			      	      output RODLevel {
				      }
			      	      output LinkLevel {
				      }
			      	      output ChipLevel {
				      }
			      	      output WithSctFlag {
			      	      	     output RODLevel {
				      	     }
			      	      	     output LinkLevel {
				      	     }
			      	      	     output ChipLevel {
				      	     }
				      }
			      }
			      output Detail {
			       	     output RatioNoiseOccupancy {
				     }
			       	     output HitOccupancy {
				     }
				     output SPNoiseOccupancy {
				     }
			      }
		       }
			output _SCTB {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
			      	      	     output LinkLevel {
					     }
					     output ChipLevel {
				      	     }
				      }
				      output Layer0 {
				      }
				      output Layer1 {
				      }
				      output Layer2 {
				      }
				      output Layer3 {
				      }
				}
			       	output HitOccupancy {
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output SPNoise {
				}
				output _SCTB_Detail {
				      output Clusters {
				      }
				      output TBinTracks {
				      }
							output Lorentz {
							}
							output SPNoise {
							}
							output HitOccupancy {
							}
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      	    output ResidualMaps {
				      	    }
				      	    output PullMaps {
				      	    }
				      	    output ResidualRMS {
				      	    }
				      }
				}
			}
			output _SCTEA {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
			      	      	     output LinkLevel {
				      	     }
					     output ChipLevel {
				      	     }
				      }
				      output Disk0 {
				      }
				      output Disk1 {
				      }
				      output Disk2 {
				      }
				      output Disk3 {
				      }
				      output Disk4 {
				      }
				      output Disk5 {
				      }
				      output Disk6 {
				      }
				      output Disk7 {
				      }
				      output Disk8 {
				      }
				}
			       	output HitOccupancy {
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output SPNoise {
				}
				output _SCTEA_Detail {
				      output Clusters {
				      }
				      output TBinTracks {
				      }
							output SPNoise {
							}
							output HitOccupancy {
							}
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      	    output ResidualMaps {
				      	    }
				      	    output PullMaps {
				      	    }
				      	    output ResidualRMS {
				      	    }
				      }
				}
			}
			output _SCTEC {
				output Conf {
				}
				output Efficiency {
			       	      output EffVsLBs {
				      }
				      output Inefficiency {
				      }
				}
				output Errors {
				      output BSErrVsLBs {
			      	      	     output RODLevel {
				      	     }
			      	      	     output LinkLevel {
				      	     }
					     output ChipLevel {
				      	     }
				      }
				      output Disk0 {
				      }
				      output Disk1 {
				      }
				      output Disk2 {
				      }
				      output Disk3 {
				      }
				      output Disk4 {
				      }
				      output Disk5 {
				      }
				      output Disk6 {
				      }
				      output Disk7 {
				      }
				      output Disk8 {
				      }
				}
			       	output HitOccupancy {
				}
			       	output RatioNoise {
				}
				output HitMaps {
				}
				output TrackHitMaps {
				}
				output SPNoise {
				}
				output _SCTEC_Detail {
				      output Clusters {
				      }
				      output TBinTracks {
				      }
							output SPNoise {
							}
							output HitOccupancy {
							}
							output Tracks {
				      	    output ResidualSummaries {
				      	    }
				      	    output PullSummaries {
				      	    }
				      	    output ResidualMaps {
				      	    }
				      	    output PullMaps {
				      	    }
				      	    output ResidualRMS {
				      	    }
				      }
				}
			}
		}
	}
}

#######################
# Histogram Assessments
#######################

dir SCT {
	##Reference for directory structures
	reference = CentrallyManagedReferences

	##Default algorithm
	algorithm = SCT_GatherData

	##Default description
	description = https://twiki.cern.ch/twiki/bin/view/Atlas/SctDqHistograms#BCID

	dir GENERAL/Conf {
		############ CONFIGURATIONS
		hist SCTConfNew {
			algorithm = SCT_ModuleStatus_Test
			output = InnerDetector/SCT/Summary
		}
		hist SCTConfOutM {
			algorithm = SCT_OutModuleStatus_Test
			output = InnerDetector/SCT/Summary
		}
                hist NumberOfEventsVsLB {
			algorithm = SCT_GatherData
			#algorithm = SCT_NumEvents_Test
			output = InnerDetector/SCT/Summary
                }
                hist NumberOfSCTFlagErrorsVsLB {
			algorithm = SCT_GatherData
			#algorithm = SCT_SCTFlag_Test
			output = InnerDetector/SCT/Summary/Detail
                }
                hist FractionOfSCTFlagErrorsPerLB {
			algorithm = SCT_SCTFlag_Test
			output = InnerDetector/SCT/Summary
                }
		############ BYTE STREAM ERRORS
		hist SCT_ABCDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_ABCDErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_ABCDError_Chip0VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip0WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Chip1VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip1WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Chip2VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip2WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Chip3VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip3WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Chip4VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip4WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Chip5VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip5WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Error1VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error1WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Error2VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error2WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Error4VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error4WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_Error7VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error7WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_ABCDError_InvalidVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_ABCDError_InvalidWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_BCIDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_BCIDErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_ByteStreamParseErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_ByteStreamParseErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_FormatterErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_FormatterErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_HeaderTrailerLimitErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_HeaderTrailerLimitErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_LVL1IDErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_LVL1IDErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_MaskedLinkVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedLinkWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_MaskedRODVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_MaskedRODWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/RODLevel
		}
		hist SCT_MissingLinkHeaderErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_MissingLinkHeaderErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_PreambleErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_PreambleErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_ROBFragmentErrorVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_ROBFragmentErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/RODLevel
		}
		hist SCT_RODClockErrorVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_RODClockErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/RODLevel
		}
		hist SCT_RawErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_RawErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_TempMaskedChip0VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip0WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TempMaskedChip1VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip1WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TempMaskedChip2VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip2WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TempMaskedChip3VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip3WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TempMaskedChip4VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip4WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TempMaskedChip5VsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip5WithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/ChipLevel
		}
		hist SCT_TimeOutErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_TimeOutErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_TrailerErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_TrailerOverflowErrorVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerOverflowErrorWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/LinkLevel
		}
		hist SCT_TruncatedRODVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/RODLevel
		}
		hist SCT_TruncatedRODWithSctFlagVsLbs {
 			algorithm = SCT_GatherData
			#algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs/WithSctFlag/RODLevel
		}
		############ CATEGORIZED ERRORS
		hist SCT_LinksWithBadErrorsVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		hist SCT_LinksWithErrorsVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		hist SCT_LinksWithLinkLevelErrorsVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary
		}
		hist SCT_LinksWithMaskedLinkALLVsLbs {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		hist SCT_LinksWithRODLevelErrorsVsLbs {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/Summary
		}
		hist SCT_LinksWithMaskedChipALLVsLbs {
			algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		hist SCT_NumberOfMaskedChipALLVsLbs {
			algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/BSErrVsLBs
		}
		############
		hist SCTConf {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		hist SCTConfDetails {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		hist SCTModulesWithRODLevelErrorsCheck {
			algorithm = SCT_RODStatusCheck_Test
			output = InnerDetector/SCT/Summary/Detail
		}
	}

	dir GENERAL/noise {

		hist SCTNOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist barrelNOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist ECANOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist ECCNOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}

		hist NOTrigger_vsLB {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist NoisyModulesTrigger100_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist NoisyModulesTrigger1000_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
		hist NoisyModulesTrigger10000_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/SPNoiseOccupancy
		}
	}

	dir GENERAL/noise {

		hist SCTHOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist barrelHOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist ECAHOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist ECCHOdistributionTrigger {
			##TODO: KS test. Delayed until 20V-turn-on is resolved
			algorithm = SCT_Histogram_Not_Empty
			display = LogY,LogX
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}

		hist HOTrigger_vsLB {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist NoisyModulesWithHOTrigger100_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist NoisyModulesWithHOTrigger1000_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
		hist NoisyModulesWithHOTrigger10000_vsLB {
		     	algorithm = SCT_GatherData
			output = InnerDetector/SCT/Summary/Detail/HitOccupancy
		}
	}

	dir GENERAL/tracks {
		hist trackTriggersRate {
			algorithm = SCT_BinPrint
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist SCTTrackRate {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		hist tracksPerRegion {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary
		}
		hist totalBarrelResidual {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalBarrelPull {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapAResidual {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapAPull {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapCResidual {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist totalEndCapCPull {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			algorithm = SCT_GatherData_Ref
		}
		hist trk_pt {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_chi2 {
			algorithm = SCT_Chi2_KSTest
			display = LogY
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_phi {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_eta {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_z0 {
			algorithm = SCT_Histogram_Not_Empty
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_d0 {
			algorithm = SCT_Histogram_Not_Empty
			display = AxisRange(-20,20,"X")
			output = InnerDetector/SCT/Summary/Detail
		}
		hist trk_sct_hits {
			##TODO: SCT Odd/Even hit ratio
			##TODO: Hits above & below natural (cosmics or collisions) threshold
			algorithm = SCT_Histogram_WithRef
			output = InnerDetector/SCT/Summary
		}
	}

	dir GENERAL/hits {
		output = InnerDetector/SCT/Summary/Detail
		##NOTE: all vs_en histograms are empty
		hist clu_size {
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
	}

	dir GENERAL/eff {
		output = InnerDetector/SCT/Summary
		##NOTE: all vs_en histograms are empty
		hist SctTotalEff {
#			algorithm = SCT_GatherData
#			algorithm = SCT_BinPrint
			algorithm = SCT_SumEff_Total
			display = AxisRange(0.95,1.009,"Y")
		}
		hist SctTotalEffBCID {
#			algorithm = SCT_GatherData
#			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary
			algorithm = SCT_SumEff_TotalFBCID
			display = AxisRange(0.95,1.009,"Y")
		}
	}

	dir GENERAL/lorentz {
		output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Lorentz
		hist all_in_dir {
		}
	}

	dir GENERAL/tbin {
	    	hist TBinFracAll {
		     	output = InnerDetector/SCT/Summary
		}
	}

	dir GENERAL/RatioNoise {
		hist h_NO {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
		hist h_NOb {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
		hist h_NOEC {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/Summary/Detail/RatioNoiseOccupancy
		}
        }

	dir SCTB/RatioNoise {
		hist h_NOb_layer0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
		hist h_NOb_layer3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTB/RatioNoise
		}
	}

	dir SCTB/Conf {
		############ CONFIGURATIONS
		hist SCTConfBarrel {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		############ BYTE STREAM ERRORS
		hist SCT_ABCDErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ABCDError_Chip0VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip1VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip2VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip3VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip4VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip5VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error1VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error2VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error4VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error7VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_InvalidVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_BCIDErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ByteStreamParseErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_FormatterErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_HeaderTrailerLimitErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_LVL1IDErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedLinkVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedRODVsLbsBarrel {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_MissingLinkHeaderErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_PreambleErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ROBFragmentErrorVsLbsBarrel {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RODClockErrorVsLbsBarrel {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RawErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TempMaskedChip0VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip1VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip2VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip3VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip4VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip5VsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TimeOutErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerOverflowErrorVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TruncatedRODVsLbsBarrel {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs/RODLevel
		}
		############ CATEGORIZED ERRORS
		hist SCT_LinksWithBadErrorsVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithErrorsVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithLinkLevelErrorsVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithMaskedLinkALLVsLbsBarrel {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithRODLevelErrorsVsLbsBarrel {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTB/Errors/BSErrVsLBs
		}
		############ MAPPING
		hist modulemapB0_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB0_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB1_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB1_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB2_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB2_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB3_0 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
		hist modulemapB3_1 {
			output = InnerDetector/SCT/_SCTB/Conf
			algorithm = SCT_BinPrint
		}
	}
	dir SCTEA/Conf {
		############ CONFIGURATIONS
		hist SCTConfEndcapA {
			algorithm = SCT_BinPrint
			output = InnerDetector/SCT/Summary/Detail
		}
		############ BYTE STREAM ERRORS
		hist SCT_ABCDErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ABCDError_Chip0VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip1VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip2VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip3VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip4VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip5VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error1VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error2VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error4VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error7VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_InvalidVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_BCIDErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ByteStreamParseErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_FormatterErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_HeaderTrailerLimitErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_LVL1IDErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedLinkVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedRODVsLbsEndcapA {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_MissingLinkHeaderErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_PreambleErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ROBFragmentErrorVsLbsEndcapA {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RODClockErrorVsLbsEndcapA {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RawErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TempMaskedChip0VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip1VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip2VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip3VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip4VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip5VsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TimeOutErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerOverflowErrorVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TruncatedRODVsLbsEndcapA {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs/RODLevel
		}
		############ CATEGORIZED ERRORS
		hist SCT_LinksWithBadErrorsVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithErrorsVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithLinkLevelErrorsVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithMaskedLinkALLVsLbsEndcapA {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithRODLevelErrorsVsLbsEndcapA {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEA/Errors/BSErrVsLBs
		}
		############ MAPPING
		hist modulemapEA0_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA0_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA1_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA1_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA2_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA2_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA3_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA3_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA4_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA4_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA5_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA5_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA6_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA6_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA7_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA7_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA8_0 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEA8_1 {
			output = InnerDetector/SCT/_SCTEA/Conf
			algorithm = SCT_AnyErr
		}
	}
	dir SCTEC/Conf {
	    	############ CONFIGURATIONS
	    	hist SCTConfEndcapC {
			algorithm = SCT_AnyErr
			output = InnerDetector/SCT/Summary/Detail
		}
		############ BYTE STREAM ERRORS
		hist SCT_ABCDErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ABCDError_Chip0VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip1VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip2VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip3VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip4VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Chip5VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error1VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error2VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error4VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_Error7VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_ABCDError_InvalidVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_BCIDErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ByteStreamParseErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_FormatterErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_HeaderTrailerLimitErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_LVL1IDErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedLinkVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_MaskedRODVsLbsEndcapC {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_MissingLinkHeaderErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_PreambleErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_ROBFragmentErrorVsLbsEndcapC {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RODClockErrorVsLbsEndcapC {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/RODLevel
		}
		hist SCT_RawErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TempMaskedChip0VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip1VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip2VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip3VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip4VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TempMaskedChip5VsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/ChipLevel
		}
		hist SCT_TimeOutErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TrailerOverflowErrorVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/LinkLevel
		}
		hist SCT_TruncatedRODVsLbsEndcapC {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs/RODLevel
		}
		############ CATEGORIZED ERRORS
		hist SCT_LinksWithBadErrorsVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithErrorsVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithLinkLevelErrorsVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithMaskedLinkALLVsLbsEndcapC {
			algorithm = SCT_LinkStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs
		}
		hist SCT_LinksWithRODLevelErrorsVsLbsEndcapC {
			algorithm = SCT_RODStatus_Test
			output = InnerDetector/SCT/_SCTEC/Errors/BSErrVsLBs
		}
		############ MAPPING
		hist modulemapEC0_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC0_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC1_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC1_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC2_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC2_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC3_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC3_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC4_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC4_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC5_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC5_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC6_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC6_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC7_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC7_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC8_0 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
		hist modulemapEC8_1 {
			output = InnerDetector/SCT/_SCTEC/Conf
			algorithm = SCT_AnyErr
		}
	}

	dir SCTB/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeff {
			algorithm = SCT_SumEff_Barrel
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist summaryeffBCID {
			algorithm = SCT_SumEff_Barrel
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTB/Efficiency/EffVsLBs
                }
		hist eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.9,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency
		}
		hist ineff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
		hist ineff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.1,1.0,"Z")
			output = InnerDetector/SCT/_SCTB/Efficiency/Inefficiency
		}
	}
	dir SCTB/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTB/Efficiency/EffVsLBs
		hist eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}
	dir SCTEA/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeffp {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist summaryeffpBCID {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTEA/Efficiency/EffVsLBs
                }
		hist p_eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist p_eff_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency
		}
		hist ineffp_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
		hist ineffp_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEA/Efficiency/Inefficiency
		}
	}
	dir SCTEA/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTEA/Efficiency/EffVsLBs
		hist p_eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_4_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_4_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_5_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_5_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_6_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_6_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_7_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_7_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_8_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist p_eff_Lumi_8_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}
	dir SCTEC/eff {
		algorithm = SCT_Histogram_Not_Empty
		hist summaryeffm {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist summaryeffmBCID {
			algorithm = SCT_SumEff_EndCap
			#algorithm = SCT_Eff_BinContentComp
			display = AxisRange(0.95,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency
		}
                hist effLumiBlock {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
			output = InnerDetector/SCT/_SCTEC/Efficiency/EffVsLBs
                }
		hist m_eff_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist m_eff_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.90,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency
		}
		hist ineffm_0_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_0_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_1_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_1_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_2_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_2_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_3_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_3_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_4_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_4_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_5_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_5_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_6_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_6_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_7_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_7_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_8_0 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
		hist ineffm_8_1 {
			algorithm = SCT_HitEff
			display = AxisRange(0.10,1.0,"Z")
		     	output = InnerDetector/SCT/_SCTEC/Efficiency/Inefficiency
		}
	}
	dir SCTEC/eff/perLumiBlock {
		algorithm = SCT_Histogram_Not_Empty
		output = InnerDetector/SCT/_SCTEC/Efficiency/EffVsLBs
		hist m_eff_Lumi_0_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_0_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_1_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_1_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_2_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_2_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_3_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_3_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_4_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_4_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_5_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_5_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_6_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_6_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_7_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_7_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_8_0 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
		hist m_eff_Lumi_8_1 {
                        algorithm = SCT_EffVsLB
                        display = AxisRange(0.8,1.009,"Y")
		}
	}

	dir SCTB/errors {
		algorithm = SCT_AnyErr
		dir BCIDError {
			hist SCT_BCIDErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_BCIDErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_BCIDErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_BCIDErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_BCIDErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_BCIDErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_BCIDErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_BCIDErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir LVL1IDError {
			hist SCT_LVL1IDErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_LVL1IDErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_LVL1IDErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_LVL1IDErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_LVL1IDErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_LVL1IDErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_LVL1IDErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_LVL1IDErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir ROBFragmentError {
			hist SCT_ROBFragmentErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_ROBFragmentErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_ROBFragmentErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_ROBFragmentErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_ROBFragmentErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_ROBFragmentErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_ROBFragmentErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_ROBFragmentErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir TimeOutError {
			hist SCT_TimeOutErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_TimeOutErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_TimeOutErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_TimeOutErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_TimeOutErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_TimeOutErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_TimeOutErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_TimeOutErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir MaskedLinkALL {
			hist SCT_NumberOfMaskedLinkALLB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfMaskedLinkALLB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_NumberOfMaskedLinkALLB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfMaskedLinkALLB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_NumberOfMaskedLinkALLB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfMaskedLinkALLB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_NumberOfMaskedLinkALLB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_NumberOfMaskedLinkALLB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir MissingLinkHeaderError {
			hist SCT_MissingLinkHeaderErrorB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_MissingLinkHeaderErrorB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer0
			}
			hist SCT_MissingLinkHeaderErrorB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_MissingLinkHeaderErrorB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors/Layer1
			}
			hist SCT_MissingLinkHeaderErrorB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_MissingLinkHeaderErrorB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer2
			}
			hist SCT_MissingLinkHeaderErrorB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
			hist SCT_MissingLinkHeaderErrorB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors/Layer3
			}
		}
		dir Errors {
			algorithm = SCT_SumErr
			hist SCT_NumberOfErrorsB_0_0 {
				output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_0_1 {
				output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_1_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_1_1 {
				output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_2_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_2_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_3_0 {
			     	output = InnerDetector/SCT/_SCTB/Errors
			}
			hist SCT_NumberOfErrorsB_3_1 {
			     	output = InnerDetector/SCT/_SCTB/Errors
			}
		}
	}
	dir SCTEA/errors {
		output = InnerDetector/SCT/_SCTEA/Errors
		algorithm = SCT_AnyErr
		dir BCIDError {
			hist SCT_BCIDErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_BCIDErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_BCIDErrorEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_BCIDErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_BCIDErrorEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_BCIDErrorEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_BCIDErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_BCIDErrorEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
		}
		dir LVL1IDError {
			hist SCT_LVL1IDErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_LVL1IDErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_LVL1IDErrorEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_LVL1IDErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_LVL1IDErrorEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_LVL1IDErrorEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_LVL1IDErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_LVL1IDErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_LVL1IDErrorEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_LVL1IDErrorEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_LVL1IDErrorEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_LVL1IDErrorEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_LVL1IDErrorEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_LVL1IDErrorEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_LVL1IDErrorEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_LVL1IDErrorEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_LVL1IDErrorEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_LVL1IDErrorEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir ROBFragmentError {
			hist SCT_ROBFragmentErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_ROBFragmentErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_ROBFragmentErrorEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_ROBFragmentErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_ROBFragmentErrorEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_ROBFragmentErrorEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_ROBFragmentErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_ROBFragmentErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_ROBFragmentErrorEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_ROBFragmentErrorEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_ROBFragmentErrorEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_ROBFragmentErrorEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_ROBFragmentErrorEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_ROBFragmentErrorEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_ROBFragmentErrorEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_ROBFragmentErrorEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_ROBFragmentErrorEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_ROBFragmentErrorEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}

		}
		dir TimeOutError {
			hist SCT_TimeOutErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_TimeOutErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_TimeOutErrorEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_TimeOutErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_TimeOutErrorEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_TimeOutErrorEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_TimeOutErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_TimeOutErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_TimeOutErrorEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_TimeOutErrorEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_TimeOutErrorEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_TimeOutErrorEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_TimeOutErrorEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_TimeOutErrorEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_TimeOutErrorEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_TimeOutErrorEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_TimeOutErrorEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_TimeOutErrorEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir MaskedLinkALL {
			hist SCT_NumberOfMaskedLinkALLEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkALLEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkALLEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkALLEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkALLEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkALLEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkALLEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkALLEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkALLEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkALLEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkALLEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkALLEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkALLEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkALLEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkALLEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkALLEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkALLEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_NumberOfMaskedLinkALLEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir MissingLinkHeaderError {
			hist SCT_MissingLinkHeaderErrorEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_MissingLinkHeaderErrorEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk0
			}
			hist SCT_MissingLinkHeaderErrorEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_MissingLinkHeaderErrorEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors/Disk1
			}
			hist SCT_MissingLinkHeaderErrorEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_MissingLinkHeaderErrorEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk2
			}
			hist SCT_MissingLinkHeaderErrorEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_MissingLinkHeaderErrorEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk3
			}
			hist SCT_MissingLinkHeaderErrorEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_MissingLinkHeaderErrorEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk4
			}
			hist SCT_MissingLinkHeaderErrorEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_MissingLinkHeaderErrorEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk5
			}
			hist SCT_MissingLinkHeaderErrorEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_MissingLinkHeaderErrorEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk6
			}
			hist SCT_MissingLinkHeaderErrorEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_MissingLinkHeaderErrorEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk7
			}
			hist SCT_MissingLinkHeaderErrorEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
			hist SCT_MissingLinkHeaderErrorEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors/Disk8
			}
		}
		dir Errors {
			algorithm = SCT_SumErr
			hist SCT_NumberOfErrorsEA_0_0 {
				output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_0_1 {
				output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_1_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_1_1 {
				output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_2_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_2_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_3_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_3_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_4_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_4_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_5_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_5_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_6_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_6_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_7_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_7_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_8_0 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
			hist SCT_NumberOfErrorsEA_8_1 {
			     	output = InnerDetector/SCT/_SCTEA/Errors
			}
		}
	}
	dir SCTEC/errors {
		output = InnerDetector/SCT/_SCTEC/Errors
		algorithm = SCT_AnyErr
		dir BCIDError {
			hist SCT_BCIDErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_BCIDErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_BCIDErrorEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_BCIDErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_BCIDErrorEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_BCIDErrorEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_BCIDErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_BCIDErrorEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
		}
		dir LVL1IDError {
			hist SCT_LVL1IDErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_LVL1IDErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_LVL1IDErrorEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_LVL1IDErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_LVL1IDErrorEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_LVL1IDErrorEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_LVL1IDErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_LVL1IDErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_LVL1IDErrorEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_LVL1IDErrorEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_LVL1IDErrorEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_LVL1IDErrorEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_LVL1IDErrorEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_LVL1IDErrorEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_LVL1IDErrorEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_LVL1IDErrorEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_LVL1IDErrorEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_LVL1IDErrorEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir ROBFragmentError {
			hist SCT_ROBFragmentErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_ROBFragmentErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_ROBFragmentErrorEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_ROBFragmentErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_ROBFragmentErrorEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_ROBFragmentErrorEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_ROBFragmentErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_ROBFragmentErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_ROBFragmentErrorEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_ROBFragmentErrorEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_ROBFragmentErrorEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_ROBFragmentErrorEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_ROBFragmentErrorEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_ROBFragmentErrorEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_ROBFragmentErrorEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_ROBFragmentErrorEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_ROBFragmentErrorEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_ROBFragmentErrorEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}

		}
		dir TimeOutError {
			hist SCT_TimeOutErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_TimeOutErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_TimeOutErrorEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_TimeOutErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_TimeOutErrorEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_TimeOutErrorEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_TimeOutErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_TimeOutErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_TimeOutErrorEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_TimeOutErrorEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_TimeOutErrorEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_TimeOutErrorEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_TimeOutErrorEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_TimeOutErrorEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_TimeOutErrorEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_TimeOutErrorEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_TimeOutErrorEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_TimeOutErrorEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir MaskedLinkALL {
			hist SCT_NumberOfMaskedLinkALLEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkALLEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_NumberOfMaskedLinkALLEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkALLEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_NumberOfMaskedLinkALLEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkALLEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_NumberOfMaskedLinkALLEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkALLEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_NumberOfMaskedLinkALLEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkALLEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_NumberOfMaskedLinkALLEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkALLEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_NumberOfMaskedLinkALLEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkALLEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_NumberOfMaskedLinkALLEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkALLEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_NumberOfMaskedLinkALLEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_NumberOfMaskedLinkALLEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir MissingLinkHeaderError {
			hist SCT_MissingLinkHeaderErrorEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_MissingLinkHeaderErrorEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk0
			}
			hist SCT_MissingLinkHeaderErrorEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_MissingLinkHeaderErrorEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors/Disk1
			}
			hist SCT_MissingLinkHeaderErrorEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_MissingLinkHeaderErrorEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk2
			}
			hist SCT_MissingLinkHeaderErrorEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_MissingLinkHeaderErrorEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk3
			}
			hist SCT_MissingLinkHeaderErrorEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_MissingLinkHeaderErrorEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk4
			}
			hist SCT_MissingLinkHeaderErrorEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_MissingLinkHeaderErrorEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk5
			}
			hist SCT_MissingLinkHeaderErrorEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_MissingLinkHeaderErrorEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk6
			}
			hist SCT_MissingLinkHeaderErrorEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_MissingLinkHeaderErrorEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk7
			}
			hist SCT_MissingLinkHeaderErrorEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
			hist SCT_MissingLinkHeaderErrorEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors/Disk8
			}
		}
		dir Errors {
			algorithm = SCT_SumErr
			hist SCT_NumberOfErrorsEC_0_0 {
				output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_0_1 {
				output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_1_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_1_1 {
				output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_2_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_2_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_3_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_3_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_4_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_4_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_5_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_5_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_6_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_6_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_7_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_7_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_8_0 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
			hist SCT_NumberOfErrorsEC_8_1 {
			     	output = InnerDetector/SCT/_SCTEC/Errors
			}
		}
	}

	dir SCTB/Noise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  h_NallHitsTriggerBAR_vsLB {
			output = InnerDetector/SCT/_SCTB/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  h_NSPHitsTriggerBAR_vsLB {
			output = InnerDetector/SCT/_SCTB/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  BARNOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTB/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_0_0 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_0_1 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_1_0 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_1_1 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_2_0 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_2_1 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_3_0 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptrigger_3_1 {
			output = InnerDetector/SCT/_SCTB/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymap_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTB/Noise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  BARHOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			#display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_0_0 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_0_1 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_1_0 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_1_1 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_2_0 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_2_1 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_3_0 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptrigger_3_1 {
			output = InnerDetector/SCT/_SCTB/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymap_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTB/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapBar_0 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_1 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_2 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapBar_3 {
			output = InnerDetector/SCT/_SCTB/RatioNoise
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEA/Noise {
 	#algorithm = SCT_Histogram_Empty
 	#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  h_NallHitsTriggerECp_vsLB {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  h_NSPHitsTriggerECp_vsLB {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  ECANOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEA/Noise {
 	#algorithm = SCT_Histogram_Empty
 	#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  ECAHOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			#display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEA/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapECA_0 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_1 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_2 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_3 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_4 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_5 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_6 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_7 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECA_8 {
			output = InnerDetector/SCT/_SCTEA/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist h_NOECA_disk0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk4 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk5 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk6 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk7 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
		hist h_NOECA_disk8 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEA/RatioNoise
		}
	}

	dir SCTEC/Noise {
 	#algorithm = SCT_Histogram_Empty
 	#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  h_NallHitsTriggerECm_vsLB {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  h_NSPHitsTriggerECm_vsLB {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist  ECCNOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			#display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymaptriggerECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/SPNoise
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEC/Noise {
 	#algorithm = SCT_Histogram_Empty
 	#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist  ECCHOTrigger_vsLB {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			#display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymaptriggerECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
		hist hitoccupancymapECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/HitOccupancy
			display = AxisRange(0,150,"Z")
		}
	}

	dir SCTEC/RatioNoise {
		#algorithm = SCT_Histogram_Empty
		#algorithm = SCT_Noise_binsfromavg
		algorithm = SCT_Noise

		hist noiseoccupancymapECC_0 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_1 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_2 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_3 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_4 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_5 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_6 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_7 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist noiseoccupancymapECC_8 {
			output = InnerDetector/SCT/_SCTEC/RatioNoise
			display = AxisRange(0,150,"Z")
		}
		hist h_NOECC_disk0 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk1 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk2 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk3 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk4 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk5 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk6 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk7 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
		hist h_NOECC_disk8 {
			algorithm = SCT_Histogram_Not_Empty
			display = LogY
			output = InnerDetector/SCT/_SCTEC/RatioNoise
		}
	}

	##NOTE: A second call to the same directory will yield a failure - 20 Aug 2009
	##Outputs must be specified for histograms individually
	dir SCTB/hits {
		## Hit Maps
		hist hitsmap_0_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_0_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_1_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_1_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_2_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_2_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_3_0 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}
		hist hitsmap_3_1 {
			output = InnerDetector/SCT/_SCTB/HitMaps
		}

		## Cluster Size
		hist clusize_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusize_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
	}
	dir SCTEA/hits {
		## Hit Maps
		hist hitsmapECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}
		hist hitsmapECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/HitMaps
		}

		## Cluster Size
		hist clusizeECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
	}
	dir SCTEC/hits {
		## Hit Maps
		hist hitsmapECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}
		hist hitsmapECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/HitMaps
		}

		## Cluster Size
		hist clusizeECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
		hist clusizeECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
			algorithm = SCT_ClusterSize_KSTest
			display = LogY
		}
	}

	dir SCTB/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBin_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_2 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin_3 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TrackTimeBin {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
			display = LogY
		}
		hist TBinFrac_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
		hist TBinFrac_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/TBinTracks
		}
	}
	dir SCTEA/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBinECp_0 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_1 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_2 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_3 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_4 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_5 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_6 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_7 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp_8 {
			display = LogY
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TrackTimeBinECp {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
			display = LogY
		}
		hist TBinFracEA_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
		hist TBinFracEA_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/TBinTracks
		}
	}
	dir SCTEC/tbin/tracks {
		algorithm = SCT_Histogram_Not_Empty
		hist TrackTimeBinECm_0 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_1 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_2 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_3 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_4 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_5 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_6 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_7 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm_8 {
			display = LogY
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TrackTimeBinECm {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
		hist TBinFracEC_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/TBinTracks
		}
	}

	dir SCTB/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracks_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
		hist mapsOfHitsOnTracks_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTB/TrackHitMaps
		}
	}

	dir SCTB/hits {
		hist clusize_dist_B_0_0 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_0_1 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_1_0 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_1_1 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_2_0 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_2_1 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_3_0 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
		hist clusize_dist_B_3_1 {
		     	output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Clusters
		}
	}

	dir SCTEA/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracksECp_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_4_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_4_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_5_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_5_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_6_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_6_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_7_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_7_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_8_0 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECp_trackhitsmap_8_1 {
			output = InnerDetector/SCT/_SCTEA/TrackHitMaps
		}
	}

	dir SCTEA/hits {
		hist clusize_dist_EA_0_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_0_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_1_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_1_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_2_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_2_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_3_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_3_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_4_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_4_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_5_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_5_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_6_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_6_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_7_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_7_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_8_0 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
		hist clusize_dist_EA_8_1 {
		     	output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Clusters
		}
	}

	dir SCTEC/hits/mapsOfHitsOnTracks {
		algorithm = SCT_Histogram_Not_Empty
		hist mapsOfHitsOnTracksECm_trackhitsmap_0_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_0_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_1_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_1_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_2_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_2_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_3_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_3_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_4_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_4_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_5_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_5_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_6_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_6_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_7_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_7_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_8_0 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
		hist mapsOfHitsOnTracksECm_trackhitsmap_8_1 {
			output = InnerDetector/SCT/_SCTEC/TrackHitMaps
		}
	}

	dir SCTEC/hits {
		hist clusize_dist_EC_0_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_0_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_1_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_1_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_2_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_2_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_3_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_3_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_4_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_4_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_5_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_5_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_6_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_6_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_7_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_7_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_8_0 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
		hist clusize_dist_EC_8_1 {
		     	output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Clusters
		}
	}

	dir SCTB/tracks {
		#output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks
		#algorithm = SCT_GatherData

		hist residuals_0_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_0_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_1_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_1_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_2_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_2_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_3_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}
		hist residuals_3_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_Barrel_TrackResidual
			algorithm = SCT_Barrel_TrackResidual_KSTest
		}

		hist pulls_0_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_0_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_1_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_1_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_2_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_2_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_3_0_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}
		hist pulls_3_1_summary {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullSummaries
			#algorithm = SCT_Barrel_TrackPull
			algorithm = SCT_Barrel_TrackPull_KSTest
		}

		hist residuals_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}
		hist residuals_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualMaps
		}

		hist pulls_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}
		hist pulls_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/PullMaps
		}

		hist residualsRMS_0_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_0_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_1_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_1_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_2_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_2_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_3_0 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
		hist residualsRMS_3_1 {
			output = InnerDetector/SCT/_SCTB/_SCTB_Detail/Tracks/ResidualRMS
		}
	}
	dir SCTEA/tracks {
		#output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks
		algorithm = SCT_GatherData

		hist residualsECp_0_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_0_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_1_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_1_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_2_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_2_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_3_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_3_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_4_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_4_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_5_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_5_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_6_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_6_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_7_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_7_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_8_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECp_8_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}

		hist pullsECp_0_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_0_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_1_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_1_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_2_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_2_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_3_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_3_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_4_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_4_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_5_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_5_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_6_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_6_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_7_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_7_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_8_0_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECp_8_1_summary {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}

		hist residualsECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}
		hist residualsECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualMaps
		}

		hist pullsECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}
		hist pullsECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/PullMaps
		}

		hist residualsRMSECp_0_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_0_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_1_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_1_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_2_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_2_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_3_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_3_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_4_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_4_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_5_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_5_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_6_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_6_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_7_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_7_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_8_0 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECp_8_1 {
			output = InnerDetector/SCT/_SCTEA/_SCTEA_Detail/Tracks/ResidualRMS
		}
	}
	dir SCTEC/tracks {
		#output = InnerDetector/SCT/_SCTEC/Tracks
		algorithm = SCT_GatherData

		hist residualsECm_0_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_0_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_1_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_1_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_2_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_2_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_3_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_3_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_4_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_4_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_5_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_5_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_6_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_6_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_7_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_7_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_8_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}
		hist residualsECm_8_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualSummaries
			#algorithm = SCT_EndCap_TrackResidual
			algorithm = SCT_EndCap_TrackResidual_KSTest
		}

		hist pullsECm_0_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_0_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_1_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_1_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_2_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_2_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_3_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_3_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_4_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_4_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_5_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_5_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_6_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_6_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_7_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_7_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_8_0_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}
		hist pullsECm_8_1_summary {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullSummaries
			#algorithm = SCT_EndCap_TrackPull
			algorithm = SCT_EndCap_TrackPull_KSTest
		}

		hist residualsECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}
		hist residualsECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualMaps
		}

		hist pullsECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}
		hist pullsECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/PullMaps
		}

		hist residualsRMSECm_0_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_0_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_1_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_1_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_2_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_2_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_3_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_3_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_4_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_4_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_5_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_5_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_6_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_6_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_7_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_7_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_8_0 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
		hist residualsRMSECm_8_1 {
			output = InnerDetector/SCT/_SCTEC/_SCTEC_Detail/Tracks/ResidualRMS
		}
	}
}


#############
# Algorithms
#############

## Generic Algorithms

#algorithm SCT_WorstCaseSummary { ##Used for stand-alone testing only
#	libname = libdqm_summaries.so
#	name = WorstCaseSummary
#}

algorithm SCT_CorrectableSummary { ##Used for stand-alone testing only
	libname = libdqm_summaries.so
	name = WorstCaseYellow
}

algorithm SCT_Histogram_Not_Empty { ##Used for 1st and 2nd Hit errors, efficiency maps, hit maps
	libname = libdqm_algorithms.so
	name = Histogram_Not_Empty
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_Histogram_WithRef { ##Used for 1st and 2nd Hit errors, efficiency maps, hit maps
	libname = libdqm_algorithms.so
	name = GatherData
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_BinPrint { ##Used for SCTTrackRate, InnerDetector/SCT/SCT<All,B,EA,EC>/ModuleStatus
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 10 ##Print at most 10 entries
}

algorithm SCT_GatherData { ##Used for TrackHitMaps, Flags
	libname = libdqm_algorithms.so
	name = GatherData
	## USE NO REFERENCE
	## This algorithm is a useful placeholder
	## until some specific algorithm can be applied
}

algorithm SCT_GatherData_Ref { ##Used for TrackHitMaps, Flags
	libname = libdqm_algorithms.so
	name = GatherData
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

## Specific Algorithms

 algorithm SCT_ModuleStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 10 ##Print at most 10 entries
	 Publish = 6 ##Print all bins
	 TypePublish = 2 ##Print Values
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
	 thresholds = SCT_ModuleStatus_Threshold
	 reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
 }


 algorithm SCT_OutModuleStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 10 ##Print at most 10 entries
	 Publish = 6 ##Print all bins
	 TypePublish = 2 ##Print Values
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
	 thresholds = SCT_OutModuleStatus_Threshold
	 reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
 }

 algorithm SCT_RODStatus_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 2000 ##Print at most 100 entries
	 Publish = 2000
	 TypePublish = 1 ##Warnings and Errors
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
         thresholds = SCT_RODStatus_Threshold
 }

 algorithm SCT_RODStatusCheck_Test {
	 libname = libdqm_algorithms.so
	 name = BinThresh
	 UnMask_All = 2000 ##Print at most 100 entries
	 Publish = 2000
	 TypePublish = 1 ##Warnings and Errors
	 UseValue = 2 ##Greater than thresholds
	 TypeValue = 0
         thresholds = SCT_RODStatusCheck_Threshold
 }

 algorithm SCT_LinkStatus_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = 2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_LinkStatus_Threshold
}

algorithm SCT_NumEvents_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = -2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_NumEvents_Threshold
}

algorithm SCT_SCTFlag_Test {
        libname = libdqm_algorithms.so
        name = BinThresh
        UnMask_All = 2000 ##Print at most 100 entries
        Publish = 2000
        TypePublish = 1 ##Warnings and Errors
        UseValue = 2 ##Greater than thresholds
        TypeValue = 0
        thresholds = SCT_SCTFlag_Threshold
}

algorithm SCT_Chi2_KSTest {
	libname = libdqm_algorithms.so
	name = KolmogorovTest_MaxDist
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Chi2_KSTest_Thresh
	MinStat = 500
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm SCT_ClusterSize_KSTest {
	libname = libdqm_algorithms.so
	name = KolmogorovTest_MaxDist
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_ClusterSize_KSTest_Thresh
	MinStat = 500
	reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

#algorithm SCT_TBin_AnyHit {
#	reference = CentrallyManagedReferences
#	libname = libdqm_algorithms.so
#	name = BinThresh
#	Publish = 1
#	TypePublish = 1 ##Print Warnings
#	UseValue = -2 ##less than thresholds
#	TypeValue = 2 ##Use fraction of all entries
#	thresholds = SCT_TBin_AnyHit_Thresh
#	##Check bins (001~2), (010~3), (100~5)
#	Mask_1 = 1
#	Mask_4 = 1
#	Mask_6 = 1
#	Mask_7 = 1
#	Mask_8 = 1
#}

##Use custom Algorithm to print SCT timing characterizations
##Summary yields warning if there are any entries in 000
compositeAlgorithm SCT_TBinTrack_CompAlg { ##Include Hit Time measures
	libnames = libdqm_algorithms.so
	subalgs = BinThresh,SCTTrackTiming
}
#algorithm SCT_TBinTrack {
#	reference = CentrallyManagedReferences
#	name = SCT_TBinTrack_CompAlg
#	Publish = 3
#	TypePublish = 1 ##Print Warnings
#	UseValue = 2 ##Greater than thresholds
#	TypeValue = 1 ##Total entries in bin (should be integer)
#	thresholds = SCT_TBinTrack_Thresh
#}

##Only Print noisy modules
algorithm SCT_Noise {
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 10 ##Print at most 10 entries
	UseValue = 2 ##Print out noise for all bins above threshold
	TypeValue = 0 ##Bins entries are occupancies
	Value = 150 ##Units?
}
##Worst Case Summary of warning & error levels for each module
#algorithm SCT_Noise {
#  libname = libdqm_algorithms.so
#  name = BinThresh
#  UseValue = 2 ##Thresholds are occupancies
#  TypeValue = 0
#  Publish = 6 ##List at most 6
#  TypePublish = 0 ##Only list errors
#  thresholds = SCT_Noise_Thresh
#}

##List bins with non-zero Errors
algorithm SCT_AnyErr { ##Used for individual error types
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 24 ##Print at most 2 full SBC's errors
	UseValue = 2
	TypeValue = 0
	Value = 0.0
}
##PROBLEM: Attempting to combine BinPrint with Bins_GreaterThan_Threshold yields no check or printout!
##Set Summary by number of modules with errors
algorithm SCT_SumErr { ##Used for error summary
	libname = libdqm_algorithms.so
	name = Bins_GreaterThan_Threshold
	BinThreshold = 0.7 ##Count all modules with errors in more that 70% of events
	thresholds = SCT_SumErrThreshold
}

##Check RMS, display mean
compositeAlgorithm SCT_TrackResidual_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = CheckHisto_RMS,GatherData
}
#algorithm SCT_Barrel_TrackResidual {
#	name = SCT_TrackResidual_CompAlg
#	thresholds = SCT_Barrel_TrackResidual_Thresh_RMS_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}
#algorithm SCT_EndCap_TrackResidual {
#	name = SCT_TrackResidual_CompAlg
#	thresholds = SCT_EndCap_TrackResidual_Thresh_RMS_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}

##Look for changes, print mean & variance
compositeAlgorithm SCT_TrackResidual_KSTest_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = KolmogorovTest_MaxDist,GatherData
}
algorithm SCT_Barrel_TrackResidual_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Barrel_TrackResidual_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_Barrel_TrackPull_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_Barrel_TrackPull_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_EndCap_TrackResidual_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_EndCap_TrackResidual_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}
algorithm SCT_EndCap_TrackPull_KSTest {
	name = SCT_TrackResidual_KSTest_CompAlg
	## Methods:
	## _Prob - Assume both histograms are scaled
	## _MaxDist - Scale histograms first
	thresholds = SCT_EndCap_TrackPull_KSTest_Thresh_Loose
	MinStat = 500
	reference = CentrallyManagedReferences
}

##Check Mean, display RMS
compositeAlgorithm SCT_TrackPull_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = CheckHisto_Mean,GatherData
}
#algorithm SCT_Barrel_TrackPull {
#	name = SCT_TrackPull_CompAlg
#	thresholds = SCT_Barrel_TrackPull_Thresh_Mean_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}
#algorithm SCT_EndCap_TrackPull {
#	name = SCT_TrackPull_CompAlg
#	thresholds = SCT_EndCap_TrackPull_Thresh_Mean_Loose
#	MinStat = 100
#	reference = CentrallyManagedReferences
#}

##List Modules with low efficiency
algorithm SCT_HitEff {
	libname = libdqm_algorithms.so
	name = BinPrint
	UnMask_All = 24 ##Print at most 2 full SBC's errors
	UseValue = -2
	Value = 0.9
	UseMaskValue = -1
	MaskValue = 0.
	TypeValue = 0 ##Efficiency Fractions
}

##Set Summary by number of layers below threshold
#compositeAlgorithm SCT_Eff_CompAlg {
#  libnames = libdqm_algorithms.so
#  subalgs = Bins_LessThan_Threshold,BinPrint
#}
#algorithm SCT_SumEff_Barrel {
#  name = SCT_Eff_CompAlg
#  UnMask_All = 8 ##Print All
#  BinThreshold = 0.98
#  MinStat = 100
#  thresholds = SCT_SumEffThreshold_Barrel
#  reference = CentrallyManagedReferences
#}
#algorithm SCT_SumEff_EndCap {
#  name = SCT_Eff_CompAlg
#  UnMask_All = 18 ##Print All
#  BinThreshold = 0.80
#  MinStat = 100
#  thresholds = SCT_SumEffThreshold_EndCap
#  reference = CentrallyManagedReferences
#}

##Compare bin contents to thresholds.
##Print all bin contents & average of all bins
compositeAlgorithm SCT_SumEff_CompAlg {
	libnames = libdqm_algorithms.so
	subalgs = BinThresh,AveragePrint
}
algorithm SCT_EffVsLB {
	name = SCT_SumEff_CompAlg
	Publish = 2000 ##Print all layers
	TypePublish = 1 ##Warnings and Errors
	UseValue = -2 ##Print out efficiency for all bins above threshold
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Barrel
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_Barrel {
	name = SCT_SumEff_CompAlg
	Publish = 8 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Barrel
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_EndCap {
	name = SCT_SumEff_CompAlg
	Publish = 18 ##Print all disks
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_EndCap
	BinMinEntries = 50 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_Total {
	name = SCT_SumEff_CompAlg
	Publish = 3 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_Total
	BinMinEntries = 200 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}
algorithm SCT_SumEff_TotalFBCID {
	name = SCT_SumEff_CompAlg
	Publish = 3 ##Print all layers
	TypePublish = 2 ##Print Values
	UseValue = -2 ##Less than thresholds
	TypeValue = 0 ##Thresholds are for fractional distribution
	thresholds = SCT_SumEffThreshold_TotalFBCID
	BinMinEntries = 200 ##Do not check or print bins with fewer that 50 entries
	reference = CentrallyManagedReferences
}

## TEST

#compositeAlgorithm SCT_TrackResidual_TestAlg {
#  subalgs = CheckHisto_RMS,CheckHisto_Mean
#  libnames = libdqm_algorithms.so
#}
#algorithm SCT_Barrel_TrackPullTest {
#  name = SCT_TrackResidual_TestAlg
#  CheckHisto_RMS|thresholds = SCT_Barrel_TrackPull_Thresh_Mean
#  CheckHisto_Mean|thresholds = SCT_Barrel_TrackResidual_Thresh_RMS
#  MinStat = 100
#  reference = CentrallyManagedReferences
#}

#############
# Thresholds
#############

thresholds SCT_SumErrThreshold {
	limits NBins {
		warning = 40 #Any errors yields a warning
		error = 120 #>=10 generally indicates that a ROD is failing
	}
}

thresholds SCT_Chi2_KSTest_Thresh {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.09
		error = 0.27
	}
}

thresholds SCT_ClusterSize_KSTest_Thresh {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.045
		error = 0.135
	}
}

##NOTE: if N > NBins then the specified threshold pertains.
#thresholds SCT_SumEffThreshold_Barrel {
#	limits NBins {
#		warning = 0	##ANY Layer Side is below threshold
#		error = 7 ##ALL Layers & Sides are below threshold
#	}
#}
#thresholds SCT_SumEffThreshold_EndCap {
#	limits NBins {
#		warning = 6 ##Outer 3 disks might yield bad statistics
#		error = 9 ##If the inner 5 disks are all bad
#	}
#}

thresholds SCT_SumEffThreshold_Total {
	limits Value_All {
		##Using less than definitions
		warning = 0.98
		error = 0.97
	}
}
thresholds SCT_SumEffThreshold_TotalFBCID {
	limits Value_All {
		##Using less than definitions
		warning = 0.99
		error = 0.98
	}
}
thresholds SCT_SumEffThreshold_Barrel {
	limits Value_All {
		##Using less than definitions
		warning = 0.95
		error = 0.90
	}
}
thresholds SCT_SumEffThreshold_EndCap {
	limits Value_All {
		##Using less than definitions
		##Checking only first 4 bins
		warning = 0.95
		error = 0.90
	}
}

#thresholds SCT_Barrel_TrackResidual_Thresh_RMS {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.1 based on run 91808 Barrel Layer 0 Side 0
#		warning = 0.15
#		error = 0.2
#		##For HV = 50V expect 0.4 based on run 89956
#	}
#}
#thresholds SCT_Barrel_TrackPull_Thresh_Mean {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.04 based on run 91808 Layer 3 Side 0
#		warning = 0.02
#		error = 0.06
#	##For HV = 50V expect 0.08 based on run 89956
#	}
#}
#
#thresholds SCT_EndCap_TrackResidual_Thresh_RMS {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.12 based on run 92112
#		warning = 0.15
#		error = 0.2
#	}
#}
#thresholds SCT_EndCap_TrackPull_Thresh_Mean {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.1 based on run 91808 Layer 3 Side 0
#		warning = 0.1
#		error = 0.2
#	}
#}
#
##Adding looser criteria for when alginment is not ready
#
#thresholds SCT_Barrel_TrackResidual_Thresh_RMS_Loose {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.1 based on run 91808 Barrel Layer 0 Side 0
#		warning = 0.20
#		error = 0.25
#		##For HV = 50V expect 0.4 based on run 89956
#	}
#}
#thresholds SCT_Barrel_TrackPull_Thresh_Mean_Loose {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.04 based on run 91808 Layer 3 Side 0
#		warning = 0.04
#		error = 0.08
#		##For HV = 50V expect 0.08 based on run 89956
#	}
#}
#
#thresholds SCT_EndCap_TrackResidual_Thresh_RMS_Loose {
#	limits XRMS { #Limit for CheckHisto_RMS
#		##Expect 0.12 based on run 92112
#		warning = 0.20
#		error = 0.25
#	}
#}
#thresholds SCT_EndCap_TrackPull_Thresh_Mean_Loose {
#	limits AbsXMean { #Limit for CheckHisto_Mean, as absolute value
#		##Expect 0.1 based on run 91808 Layer 3 Side 0
#		warning = 0.2
#		error = 0.25
#	}
#}


thresholds SCT_Barrel_TrackPull_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.04
		error = 0.08
	}
}
thresholds SCT_Barrel_TrackResidual_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.05
		error = 0.1
	}
}

thresholds SCT_EndCap_TrackPull_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.09
		error = 0.18
	}
}
thresholds SCT_EndCap_TrackResidual_KSTest_Thresh_Loose {
	##Options:
	## Prob -> P
	## MaxDist -> MaxDist
	limits MaxDist {
		warning = 0.1
		error = 0.2
	}
}

#thresholds SCT_Noise_Thresh {
#	limits Value_All {
#		warning = 50
#		error = 100
#	}
#}
#
#thresholds SCT_TBin_AnyHit_Thresh {
#	##Using definitions for cosmics (majority of hits are noise)
#	limits Value_All { ##Applied only to bins 001, 010, 100
#		warning = 0.3 ##Warning if reduced by 1/10
#		error = 0.27 ##Error if reduced by 1/10 again
#	}
#}
#
#thresholds SCT_TBin_Error_Thresh {
#	limits Value_1 { ##000 should always be empty
#		warning = 0.0
#		error = 0.0 ##Warning == Error
#	}
#	limits Value_4 { ##011, wide hit range
#		warning = 0.02
#		error = 0.05
#	}
#	limits Value_7 { ##110, wide hit range
#		warning = 0.02
#		error = 0.05
#	}
#	limits Value_6 { ##101, not a hit pattern
#		warning = 0.001 ##Warning if more than a few entries
#		error = 0.02 ##Error if 100 or more
#	}
#	limits Value_8 { ##111, noise occupancy
#		warning = 0.05
#		error = 0.5 ##Stuck moduless will tend to dominate the hit distribution
#	}
#}
#
#thresholds SCT_TBinTrack_Thresh {
#	limits Value_1 { ##000 denotes a hole included as a hit
#		warning = 0.5
#		error = 0.5
#		##3 July 2009: Bin entries are supposed to be integers but rounding errors can occur.
#		##Therefore intermediate values must be used.
#	}
#}
#
#thresholds SCT_TBinTrack_WideHit_Thresh {
#	limits Value_1 { ##000 denotes a hole on a track
#		warning = 0
#		error = 0.001
#	}
#	limits Value_4 { ##011, wide hit range
#		warning = 0.2 ##Flat distribution among wide and narrow hits
#		error = 0.3
#	}
#	limits Value_7 { ##110, wide hit range
#		warning = 0.2
#		error = 0.3
#	}
#	limits Value_6 { ##101, not a hit pattern
#		warning = 0.001 ##Warning if more than a few entries
#		error = 0.02 ##Error if 100 or more
#	}
#	limits Value_8 { ##111, noise occupancy
#		warning = 0.05
#		error = 0.5 ##Noisey modules should be rare
#	}
#}

thresholds SCT_ModuleStatus_Threshold {
	limits Value_All {
		warning = 40
		error = 120
	}
}

thresholds SCT_OutModuleStatus_Threshold {
	limits Value_All {
		warning = 80
		error = 240
	}
}

thresholds SCT_RODStatus_Threshold {
	limits Value_All {
		warning = 1
		error = 300
	}
}

thresholds SCT_RODStatusCheck_Threshold {
	limits Value_All {
		warning = 0
		error = 300
	}
}

thresholds SCT_LinkStatus_Threshold {
        limits Value_All {
                warning = 80
                error = 300
        }
}

thresholds SCT_NumEvents_Threshold {
	limits Value_All {
		warning = 1
		error = -100
	}
}

thresholds SCT_SCTFlag_Threshold {
	limits Value_All {
		warning = 0.1
		error = 0.9
	}
}
