# **********************************************************************
# $Id: collisions_run.config 801053 2017-03-20 16:30:28Z trocme $
# **********************************************************************

############################################################
# LAr Calorimeter
############################################################

#############
# Output
#############


output top_level {

## notice NO ALGORITHM specified here

  output LAr {

    # GLOBAL

    output LAR_GLOBAL {
      output Baseline {
        output perBCID-EM {
        }
	output perBCID-HEC_FCal {
	}
      }
      output Data_Integrity {
	output DSP_Extra_Check {
	   algorithm = BinwiseSummary
	   weight = 0.
	}
      }
      output Run_Parameters {
      	output DSP_Thresholds {
	}
      }
      output Collisions-Bkg {
      }
      output Noise_Bursts {
      }
    }

    # Per Partition 

    output EMBA {
      output Detector_Status {
        output Coverage {
        }
      }
      output Data_Integrity {
      	  output DSP_Check {
	    algorithm = BinwiseSummary
	    weight = 1	
	  }
          output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
          algorithm = WorstCaseYellowLArMon 
          output Single_Cells {

 	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2 
             }
             output Presampler {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
                   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
           }
           output Noise_Burst {
           }
           output Mini_NB {
	   	  output All-FEBs {
		  }
           }
	   output DSP-Occupancy {
	   }
           
	   
      }
      output Timing {
          output Single_Cells {
	     algorithm = BinwiseSummary
          }
          output Partition {
          }
      }
    }

    output EMBC {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
          output DSP_Check {
	    algorithm = BinwiseSummary
	    weight = 1
	  }
          output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
       algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2 
             }
             output Presampler {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
	  output Mini_NB {
	   	  output All-FEBs {
		  }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
          output Single_Cells {
             algorithm = BinwiseSummary
           }
           output Partition {
           }
      }
    }

    output EMECA {
      output Detector_Status {
      	output Coverage {
        }
      }
      output Data_Integrity {
      	  output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1	
	  }
          output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
          algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary

             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
             }
             output Presampler {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
	  output Mini_NB {
	   	  output All-FEBs {
		  }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
          output Single_Cells {
             algorithm = BinwiseSummary
           }
           output Partition {
           }
      }
    }

    output EMECC {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
          output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1	
	  }
	  output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
         algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
             }
             output Presampler {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
	  output Mini_NB {
	   	  output All-FEBs {
		  }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
           output Single_Cells {
             algorithm = BinwiseSummary
           }
           output Partition {
           }
      }
    }

    output HECA {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
      	  output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1	
	  }  
          output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
        algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary

             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
             }
             output Sampling0 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }
             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
          output Single_Cells {
             algorithm = BinwiseSummary
          }
          output Partition {
          }
      }
    }

    output HECC {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
          output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1
	  }
	  output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
       algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
             }
             output Sampling0 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
                   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
          output Single_Cells {
             algorithm = BinwiseSummary
          }
          output Partition {
          }
      }
    }

    output FCALA {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
          output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1	
	  }
	  output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
	 algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
            }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
          output Single_Cells {
             algorithm = BinwiseSummary
           }
           output Partition {
           }
      }
    }

    output FCALC {
      output Detector_Status {
       output Coverage {
       }
      }
      output Data_Integrity {
      	  output DSP_Check {
	     algorithm = BinwiseSummary
	     weight = 1
	  }
          output PerFEB {
          }
	  output Digit_Saturation {
          }
      }	
      output Occupancy-Noise {
        algorithm = WorstCaseYellowLArMon
          output Single_Cells {

     	     algorithm = BinwiseSummary
             output Non_Gaussian_Noise {
                algorithm = BinwiseSummary
                weight = 2
            }
             output Sampling1 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling2 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
             output Sampling3 {
                algorithm = BinwiseSummary
                weight = 2
                output ExtraPlots {
                  algorithm = BinwiseSummary
		   weight = 0
                }
		output No_CSC_Veto {
                  algorithm = BinwiseSummary
		   weight = 0
                }

             }
          }
          output Noise_Burst {
          }
	  output DSP-Occupancy {
	  }
      }
      output Timing {
           output Single_Cells {
             algorithm = BinwiseSummary
           }
           output Partition {
           }
      }
    }
  }
}

#######################
# Histogram Assessments
#######################

dir LAr {

## FEBMon ##

    dir FEBMon {

      dir Summary { 

        algorithm = LAr_GatherData

        hist NbOfEventsVsLB {
             output = LAr/LAR_GLOBAL/Run_Parameters
             display = StatBox
        }
        hist YieldOfOneErrorEventsVsLB {
             output = LAr/LAR_GLOBAL/Data_Integrity
             display = StatBox
             algorithm = LAr_FEBMon_BinsGreaterThan001
        }
        hist YieldOfRejectedEventsVsLB {
             output = LAr/LAR_GLOBAL/Data_Integrity
             display = StatBox
             algorithm = LAr_FEBMon_BinsGreaterThan001
        }
        hist YieldOfRejectedEventsVsLBout {
             output = LAr/LAR_GLOBAL/Data_Integrity
             display = StatBox
             algorithm = LAr_FEBMon_BinsGreaterThan001
        }
        hist NbOfLArFEBMonErrors_dE { 
             output = LAr/LAR_GLOBAL/Data_Integrity
             display = StatBox
        }
        hist EventsRejectedYield {
             output = LAr/LAR_GLOBAL/Data_Integrity
	     display = StatBox	
             algorithm = LAr_FEBMon_BinDump
        }
        hist eventSizeVsLB {
             output = LAr/LAR_GLOBAL/Run_Parameters
             display = StatBox
        }
       
      }

      dir perPartition {	

        hist LArFEBMonErrorsEMBA {	
                output = LAr/EMBA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsEMBC {	
                output = LAr/EMBC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsEMECA {	
                output = LAr/EMECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsEMECC {	
                output = LAr/EMECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsHECA {	
                output = LAr/HECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsHECC {	
                output = LAr/HECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsFCalA {	
                output = LAr/FCALA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }
        hist LArFEBMonErrorsFCalC {	
                output = LAr/FCALC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan1
                display = SetGridx,SetGridy	
        }

	hist checkSumEMBA {
                output = LAr/EMBA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumEMBC {
                output = LAr/EMBC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumEMECA {
                output = LAr/EMECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumEMECC {
                output = LAr/EMECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumHECA {
                output = LAr/HECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumHECC {
                output = LAr/HECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumFCalA {
                output = LAr/FCALA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }
	hist checkSumFCalC {
                output = LAr/FCALC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
        }

       dir FebInErrors {

           algorithm = LAr_GatherData

           dir EMBA {
               output = LAr/EMBA/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1
               }
           }
           dir EMBC {
               output = LAr/EMBC/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir EMECA {
               output = LAr/EMECA/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir EMECC {
               output = LAr/EMECC/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir HECA {
               output = LAr/HECA/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir HECC {
               output = LAr/HECC/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir FCALA {
               output = LAr/FCALA/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }
           dir FCALC {
               output = LAr/FCALC/Data_Integrity/PerFEB
	       hist .* {
	           regex = 1		
               }
           }

       } # end FebInErrors	

      } # End perPartition

      dir perPartitionData {	

        hist NbOfSw2 {	
                output = LAr/LAR_GLOBAL/Run_Parameters/DSP_Thresholds
 	        algorithm = LAr_GatherData
                display = LogY
        } 

        hist NbOfEvts2d {	
                output = LAr/LAR_GLOBAL/Data_Integrity
 	        algorithm = LAr_GatherData
        }
        hist Eventtype {	
                output = LAr/LAR_GLOBAL/Run_Parameters
 	        algorithm = LAr_GatherData
                display = LogY,StatBox
        }
        hist NbOfSamples {	
                output = LAr/LAR_GLOBAL/Run_Parameters
 	        algorithm = LAr_GatherData
                display = LogY,StatBox
        }
        hist TriggerWord {	
                output = LAr/LAR_GLOBAL/Run_Parameters
 	        algorithm = LAr_GatherData
                display = StatBox
        }
        hist dspThresholdsADC {
                output = LAr/LAR_GLOBAL/Run_Parameters/DSP_Thresholds
 	        algorithm = LAr_GatherData
                display = StatBox
        }
        hist dspThresholds_qfactortime {
                output = LAr/LAR_GLOBAL/Run_Parameters/DSP_Thresholds
 	        algorithm = LAr_GatherData
                display = StatBox
        }

        hist NbOfSweet1PerFEBEMBA {	
                output = LAr/EMBA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBEMBC {	
                output = LAr/EMBC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBEMECA {	
                output = LAr/EMECA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBEMECC {	
                output = LAr/EMECC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBHECA {	
                output = LAr/HECA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBHECC {	
                output = LAr/HECC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBFCalA {	
                output = LAr/FCALA/Occupancy-Noise/DSP-Occupancy
		 algorithm = LAr_GatherData
         }
         hist NbOfSweet1PerFEBFCalC {	
                output = LAr/FCALC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }

         hist NbOfSweet2PerFEBEMBA {	
                output = LAr/EMBA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBEMBC {	
                output = LAr/EMBC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBEMECA {	
                output = LAr/EMECA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBEMECC {	
                output = LAr/EMECC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBHECA {	
                output = LAr/HECA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBHECC {	
                output = LAr/HECC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBFCalA {	
                output = LAr/FCALA/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }
         hist NbOfSweet2PerFEBFCalC {	
                output = LAr/FCALC/Occupancy-Noise/DSP-Occupancy
 	        algorithm = LAr_GatherData
         }

         hist nbOfFebBlocksEMBA {	
                output = LAr/EMBA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksEMBC {	
                output = LAr/EMBC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksEMECA {	
                output = LAr/EMECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksEMECC {	
                output = LAr/EMECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksHECA {	
                output = LAr/HECA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksHECC {	
                output = LAr/HECC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksFCalA {	
                output = LAr/FCALA/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }
         hist nbOfFebBlocksFCalC {	
                output = LAr/FCALC/Data_Integrity
 	        algorithm = LAr_FEBMon_BinsGreaterThan0
                display = LogY
         }

         hist nbOfEvtsEMBA {	
                output = LAr/EMBA/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsEMBC {	
                output = LAr/EMBC/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsEMECA {	
                output = LAr/EMECA/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsEMECC {	
                output = LAr/EMECC/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsHECA {	
                output = LAr/HECA/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsHECC {	
                output = LAr/HECC/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsFCalA {	
                output = LAr/FCALA/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }
         hist nbOfEvtsFCalC {	
                output = LAr/FCALC/Data_Integrity
 	        algorithm = LAr_GatherData
                display = SetGridx,SetGridy	
         }

      } # End perPartitionData

      dir perPartitionMisc {	

        algorithm = LAr_FEBMon_BinsGreaterThan10
        display = StatBox

        hist missingTriggerTypeEMBA {	
                output = LAr/EMBA/Data_Integrity
		algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeEMBC {	
                output = LAr/EMBC/Data_Integrity
		algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeEMECA {	
                output = LAr/EMECA/Data_Integrity
		algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeEMECC {	
               output = LAr/EMECC/Data_Integrity
	       algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeHECA {	
               output = LAr/HECA/Data_Integrity
	       algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeHECC {	
               output = LAr/HECC/Data_Integrity
	       algorithm = LAr_FEBMon_BinsGreaterThan0
        }
        hist missingTriggerTypeFCalA {	
               output = LAr/FCALA/Data_Integrity
	       algorithm = LAr_FEBMon_BinsGreaterThan0 
        }
        hist missingTriggerTypeFCalC {	
               output = LAr/FCALC/Data_Integrity
	       algorithm = LAr_FEBMon_BinsGreaterThan0
        }

     } # End perPartitionMisc
     
   } # End FebMon

## DSPMon ##

    dir DSPMonitoring {

        dir EMB {
                   
            hist Out_E_FT_vs_SLOT_EMBA {	
                output = LAr/EMBA/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_E_FT_vs_SLOT_EMBC {	
                output = LAr/EMBC/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_Q_FT_vs_SLOT_EMBA {	
                output = LAr/EMBA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_Q_FT_vs_SLOT_EMBC {	
                output = LAr/EMBC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_T_FT_vs_SLOT_EMBA {	
                output = LAr/EMBA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Out_T_FT_vs_SLOT_EMBC {	
                output = LAr/EMBC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Eon_VS_Eoff_EMBA {	
                output = LAr/EMBA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Eon_VS_Eoff_EMBC {	
                output = LAr/EMBC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
	    hist Qon_VS_Qoff_EMBA {	
                output = LAr/EMBA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Qon_VS_Qoff_EMBC {	
                output = LAr/EMBC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
        }

         dir Emec {
                   
            hist Out_E_FT_vs_SLOT_EMECA {	
                output = LAr/EMECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_E_FT_vs_SLOT_EMECC {	
                output = LAr/EMECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_Q_FT_vs_SLOT_EMECA {	
                output = LAr/EMECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_Q_FT_vs_SLOT_EMECC {	
                output = LAr/EMECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_T_FT_vs_SLOT_EMECA {	
                output = LAr/EMECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Out_T_FT_vs_SLOT_EMECC {	
                output = LAr/EMECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Eon_VS_Eoff_EMECA {	
                output = LAr/EMECA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Eon_VS_Eoff_EMECC {	
                output = LAr/EMECC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
	    hist Qon_VS_Qoff_EMECA {	
                output = LAr/EMECA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Qon_VS_Qoff_EMECC {	
                output = LAr/EMECC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
         }

         dir Hec {
    
            hist Out_E_FT_vs_SLOT_HECA {	
                output = LAr/HECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_E_FT_vs_SLOT_HECC {	
                output = LAr/HECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_T_FT_vs_SLOT_HECA {	
                output = LAr/HECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Out_T_FT_vs_SLOT_HECC {	
                output = LAr/HECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Out_Q_FT_vs_SLOT_HECA {	
                output = LAr/HECA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_Q_FT_vs_SLOT_HECC {	
                output = LAr/HECC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Eon_VS_Eoff_HECA {	
                output = LAr/HECA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Eon_VS_Eoff_HECC {	
                output = LAr/HECC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
	    hist Qon_VS_Qoff_HECA {	
                output = LAr/HECA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Qon_VS_Qoff_HECC {	
                output = LAr/HECC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
         }
 
         dir Fcal { 
            hist Out_E_FT_vs_SLOT_FcalA {	
                output = LAr/FCALA/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            }
            hist Out_E_FT_vs_SLOT_FcalC {	
                output = LAr/FCALC/Data_Integrity/DSP_Check
 	        algorithm = LAr_DSP_BinGreaterThan0_50
            } 
            hist Out_Q_FT_vs_SLOT_FcalA {	
                output = LAr/FCALA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            }
            hist Out_Q_FT_vs_SLOT_FcalC {	
                output = LAr/FCALC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
		weight = 0.
            } 
            hist Out_T_FT_vs_SLOT_FcalA {	
                output = LAr/FCALA/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Out_T_FT_vs_SLOT_FcalC {	
                output = LAr/FCALC/Data_Integrity/DSP_Check
 	        algorithm = LAr_GatherData
            }
            hist Eon_VS_Eoff_FcalA {	
                output = LAr/FCALA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Eon_VS_Eoff_FcalC {	
                output = LAr/FCALC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
	    hist Qon_VS_Qoff_FcalA {	
                output = LAr/FCALA/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
            hist Qon_VS_Qoff_FcalC {	
                output = LAr/FCALC/Data_Integrity/DSP_Check
		algorithm = LAr_GatherData
 	    }
        }

        dir Infos {

            hist EErrorsPerLB {	
                output = LAr/LAR_GLOBAL/Data_Integrity
 	        algorithm = LAr_DSP_BinGreaterThan0
            }
            hist TErrorsPerLB {	
                output = LAr/LAR_GLOBAL/Data_Integrity/DSP_Extra_Check
 	        algorithm = LAr_GatherData
            }
            hist QErrorsPerLB {	
                output = LAr/LAR_GLOBAL/Data_Integrity/DSP_Extra_Check
 	        algorithm = LAr_GatherData
            }
        }
     
    }


## Coverage ##

    dir Coverage {

	dir perPartition {

	    hist CoverageHWEMBA {	
                output = LAr/EMBA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0EMBA {	
                output = LAr/EMBA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1EMBA {	
                output = LAr/EMBA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2EMBA {	
                output = LAr/EMBA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3EMBA {	
                output = LAr/EMBA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWEMBC {	
                output = LAr/EMBC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0EMBC {
                output = LAr/EMBC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1EMBC {
                output = LAr/EMBC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2EMBC {
                output = LAr/EMBC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3EMBC {
                output = LAr/EMBC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWEMECA {	
                output = LAr/EMECA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0EMECA {
                output = LAr/EMECA/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1EMECA {
                output = LAr/EMECA/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2EMECA {
                output = LAr/EMECA/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3EMECA {
                output = LAr/EMECA/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWEMECC {	
                output = LAr/EMECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0EMECC {	
                output = LAr/EMECC/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1EMECC {	
                output = LAr/EMECC/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2EMECC {	
                output = LAr/EMECC/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3EMECC {	
                output = LAr/EMECC/Detector_Status/Coverage		
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWHECA {	
                output = LAr/HECA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0HECA {
                output = LAr/HECA/Detector_Status/Coverage			
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1HECA {
                output = LAr/HECA/Detector_Status/Coverage			
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2HECA {
                output = LAr/HECA/Detector_Status/Coverage			
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3HECA {
                output = LAr/HECA/Detector_Status/Coverage			
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWHECC {	
                output = LAr/HECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling0HECC {
                output = LAr/HECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1HECC {
                output = LAr/HECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2HECC {
                output = LAr/HECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3HECC {
                output = LAr/HECC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWFCALA {	
                output = LAr/FCALA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1FCALA {	
                output = LAr/FCALA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2FCALA {	
                output = LAr/FCALA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3FCALA {	
                output = LAr/FCALA/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverageHWFCALC {	
                output = LAr/FCALC/Detector_Status/Coverage
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling1FCALC {
                output = LAr/FCALC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling2FCALC {
                output = LAr/FCALC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }
	    hist CoverSampling3FCALC {
                output = LAr/FCALC/Detector_Status/Coverage	
	    	algorithm = LAr_GatherData
            }

	} #end perPartition
	
	dir BadChannels {
	    
	    hist DBBadChannelsBarrelA {
	    	 output = LAr/EMBA/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBBadChannelsBarrelC {
	    	 output = LAr/EMBC/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBBadChannelsEndcapA {
	    	 output = LAr/EMECA/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBBadChannelsEndcapC {
	    	 output = LAr/EMECC/Detector_Status
		 algorithm = LAr_GatherData
	    }

	    hist DBSuspiciousMNBFEBsBarrelA {
	    	 output = LAr/EMBA/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBSuspiciousMNBFEBsBarrelC {
	    	 output = LAr/EMBC/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBSuspiciousMNBFEBsEndcapA {
	    	 output = LAr/EMECA/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    hist DBSuspiciousMNBFEBsEndcapC {
	    	 output = LAr/EMECC/Detector_Status
		 algorithm = LAr_GatherData
	    }
	    
	}
    } # end Coverage

## Affected Regions ##

   dir AffectedRegions {

 	hist LArAffectedRegionsEMBAPS {
	    output = LAr/EMBA/Detector_Status	
	    algorithm = LAr_GatherData
        }
	hist LArAffectedRegionsEMBA {
	    output = LAr/EMBA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsEMBCPS {
	    output = LAr/EMBC/Detector_Status	
	    algorithm = LAr_GatherData
        }
	hist LArAffectedRegionsEMBC {
	    output = LAr/EMBC/Detector_Status	
	    algorithm = LAr_GatherData
        }
 	hist LArAffectedRegionsEMECAPS {
	    output = LAr/EMECA/Detector_Status	
	    algorithm = LAr_GatherData
        }
	hist LArAffectedRegionsEMECA {
	    output = LAr/EMECA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsEMECCPS {
	    output = LAr/EMECC/Detector_Status	
	    algorithm = LAr_GatherData
        }
	hist LArAffectedRegionsEMECC {
	    output = LAr/EMECC/Detector_Status	
	    algorithm = LAr_GatherData
        }
	hist LArAffectedRegionsHECA0 {
	    output = LAr/HECA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECA1 {
	    output = LAr/HECA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECA2 {
	    output = LAr/HECA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECA3 {
	    output = LAr/HECA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECC0 {
	    output = LAr/HECC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECC1 {
	    output = LAr/HECC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECC2 {
	    output = LAr/HECC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsHECC3 {
	    output = LAr/HECC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALA0 {
	    output = LAr/FCALA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALA1 {
	    output = LAr/FCALA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALA2 {
	    output = LAr/FCALA/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALC0 {
	    output = LAr/FCALC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALC1 {
	    output = LAr/FCALC/Detector_Status	
	    algorithm = LAr_GatherData
       	}
	hist LArAffectedRegionsFCALC2 {
	    output = LAr/FCALC/Detector_Status	
	    algorithm = LAr_GatherData 
       	}
   } # end AffectedRegions

## HV Correction ##

   dir HVCorrection {

     hist LArHVCorrectionEMBA {
	output = LAr/EMBA/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsEMBA {
	output = LAr/EMBA/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionEMBC {
	output = LAr/EMBC/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsEMBC {
	output = LAr/EMBC/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionEMECA {
	output = LAr/EMECA/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsEMECA {
	output = LAr/EMECA/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionEMECC {
	output = LAr/EMECC/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsEMECC {
	output = LAr/EMECC/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionHECA {
	output = LAr/HECA/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsHECA {
	output = LAr/HECA/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionHECC {
	output = LAr/HECC/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsHECC {
	output = LAr/HECC/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionFCALA {
	output = LAr/FCALA/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsFCALA {
	output = LAr/FCALA/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
     hist LArHVCorrectionFCALC {
	output = LAr/FCALC/Detector_Status	
	algorithm = LAr_GatherData
     }
     hist NDeviatingChannelsFCALC {
	output = LAr/FCALC/Detector_Status	
	algorithm = LArHV_BinNotEmpty
     }
  
   } # end HV correction

## NoisyRO ##
  
   dir NoisyRO {
       
        hist NoisyFEB {	
           output = LAr/LAR_GLOBAL/Noise_Bursts
 	   algorithm = LAr_GatherData
           display = LogY,StatBox
        }

        dir Barrel {
            hist NoisyEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
            hist NoisyEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

	    #Saturated histogramms	
	    hist SaturatedNoisyEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }	    
	    hist SaturatedNoisyEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist NoisyFEBFracPerEvt_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_GatherData
               display = StatBox
            }

            hist NoisyEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist NoisyEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    
	    #Saturated histogramms
	    hist SaturatedNoisyEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist SaturatedNoisyEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist NoisyFEBFracPerEvt_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_GatherData
               display = StatBox
            }
	    # Mini noise bursts
	    hist CandidateMNBLooseEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTightEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTight_PsVetoEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBLooseEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTightEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTight_PsVetoEvent_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoEvent_TimeVeto_EMBC {	
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoFEBFracPerEvt_EMBC {
               output = LAr/EMBC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBLooseEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTightEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTight_PsVetoEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBLooseEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTightEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTight_PsVetoEvent_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoEvent_TimeVeto_EMBA {	
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoFEBFracPerEvt_EMBA {
               output = LAr/EMBA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    

        } #end barrel

        dir EMEC {

            hist NoisyEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
            hist NoisyEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    #Saturated histogramms	
	    hist SaturatedNoisyEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }	    
	    hist SaturatedNoisyEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist NoisyFEBFracPerEvt_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_GatherData
               display = StatBox
            }
            hist NoisyEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
            hist NoisyEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    #Saturated histogramms	
	    hist SaturatedNoisyEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    
	    hist SaturatedNoisyEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }

            hist NoisyFEBFracPerEvt_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Noise_Burst
 	       algorithm = LAr_GatherData
               display = StatBox
            }

	    # Mini noise bursts
	    hist CandidateMNBLooseEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTightEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTight_PsVetoEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBLooseEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTightEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTight_PsVetoEvent_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoEvent_TimeVeto_EMECC {	
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoFEBFracPerEvt_EMECC {
               output = LAr/EMECC/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBLooseEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBLooseFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTightEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTightFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist CandidateMNBTight_PsVetoEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist CandidateMNBTight_PsVetoFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB/All-FEBs
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBLooseEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBLooseFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTightEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTightFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
	    hist MNBTight_PsVetoEvent_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoEvent_TimeVeto_EMECA {	
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_RawChannels_BinsGreaterThan01
               display = StatBox , Draw=HIST
            }
	    hist MNBTight_PsVetoFEBFracPerEvt_EMECA {
               output = LAr/EMECA/Occupancy-Noise/Mini_NB
 	       algorithm = LAr_GatherData
               display = StatBox
	    }
        } #end emec
         
   } # end NoisyRO
   
## DigitMon ##

    dir Digits {

     hist summaryGain {	
        output = LAr/LAR_GLOBAL/Data_Integrity
 	algorithm = LAr_GatherData
        display = LogZ,StatBox
        }


     dir Barrel {

	hist OutOfRange_BarrelA {
       	  output = LAr/EMBA/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist AvePosMaxDig_BarrelA {
         output = LAr/EMBA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist SignShape_BarrelA {
         output = LAr/EMBA/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_BarrelC {
         output = LAr/EMBC/Timing/Partition                  
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
 	hist MaxSample_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
	hist ChanVSFEB_BarrelA {
         output = LAr/EMBA/Timing/Single_Cells                  
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_BarrelA {
         output = LAr/EMBA/Timing/Partition                  
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_BarrelA {
         output = LAr/EMBA/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_BarrelA {
         output = LAr/EMBA/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_BarrelA {
         output = LAr/EMBA/Data_Integrity/Digit_Saturation          
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_BarrelA {
         output = LAr/EMBA/Data_Integrity/Digit_Saturation          
         algorithm = LAr_Digits_BinsGreaterThan05
        }

	hist OutOfRange_BarrelC {
	  output = LAr/EMBC/Timing/Partition          
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_BarrelC {
	  output = LAr/EMBC/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_BarrelC {
         output = LAr/EMBC/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_BarrelC {
         output = LAr/EMBC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_BarrelC {
         output = LAr/EMBC/Data_Integrity/Digit_Saturation          
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_BarrelC {
         output = LAr/EMBC/Data_Integrity/Digit_Saturation          
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_BarrelC {
         output = LAr/EMBC/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_BarrelC {
         output = LAr/EMBC/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }

    } # end barrel

    dir EMEC {
	hist OutOfRange_EmecA {
	  output = LAr/EMECA/Timing/Partition 
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_EmecA {
	  output = LAr/EMECA/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_EmecA {
         output = LAr/EMECA/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_EmecA {
         output = LAr/EMECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_EmecA {
         output = LAr/EMECA/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_EmecA {
         output = LAr/EMECA/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_EmecA {
         output = LAr/EMECA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_EmecA {
         output = LAr/EMECA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }

	hist OutOfRange_EmecC {
	  output = LAr/EMECC/Timing/Partition 
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_EmecC {
	  output = LAr/EMECC/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_EmecC {
         output = LAr/EMECC/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_EmecC {
         output = LAr/EMECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_EmecC {
         output = LAr/EMECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_EmecC {
         output = LAr/EMECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_EmecC {
         output = LAr/EMECC/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_EmecC {
         output = LAr/EMECC/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
     } # end emec

    dir HEC {
	hist OutOfRange_HecA {
	  output = LAr/HECA/Timing/Partition 
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_HecA {
	  output = LAr/HECA/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_HecA {
         output = LAr/HECA/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist OutOfRange_HecC {
	  output = LAr/HECC/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist TriggerWord_HecA {
         output = LAr/HECA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_HecA {
         output = LAr/HECA/Data_Integrity/Digit_Saturation 
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_HecA {
         output = LAr/HECA/Data_Integrity/Digit_Saturation 
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_HecA {
         output = LAr/HECA/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_HecA {
         output = LAr/HECA/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }

	hist AvePosMaxDig_HecC {
	  output = LAr/HECC/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_HecC {
         output = LAr/HECC/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_HecC {
         output = LAr/HECC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_HecC {
         output = LAr/HECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_HecC {
         output = LAr/HECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_HecC {
         output = LAr/HECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_HecC {
         output = LAr/HECC/Data_Integrity/Digit_Saturation
         algorithm = LAr_Digits_BinsGreaterThan05
        }
     } # end hec

     dir FCAL {
	hist OutOfRange_FcalA {
	  output = LAr/FCALA/Timing/Partition 
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_FcalA {
	  output = LAr/FCALA/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_FcalA {
         output = LAr/FCALA/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_FcalA {
         output = LAr/FCALA/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_FcalA {
         output = LAr/FCALA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_FcalA {
         output = LAr/FCALA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_FcalA {
         output = LAr/FCALA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_FcalA {
         output = LAr/FCALA/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }

	hist OutOfRange_FcalC {
	  output = LAr/FCALC/Timing/Partition 
          algorithm = LAr_GatherData
        }
	hist AvePosMaxDig_FcalC {
	  output = LAr/FCALC/Timing/Partition 
          algorithm = LAr_GatherData
        }
 	hist SignShape_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
	hist SignShapeAllStream_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist EnVsTime_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxSample_PerStream_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist MaxVsTime_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
  	hist MaxVsTimeAllStream_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist ChanVSFEB_FcalC {
         output = LAr/FCALC/Timing/Single_Cells         
         algorithm = LAr_GatherData
        }
 	hist TriggerWord_FcalC {
         output = LAr/FCALC/Timing/Partition         
         algorithm = LAr_GatherData
        }
 	hist NullDigitChan_FcalC {
         output = LAr/FCALC/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
 	hist NullDigit_FcalC {
         output = LAr/FCALC/Data_Integrity/Digit_Saturation         
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist SaturationChan_FcalC {
         output = LAr/FCALC/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
	hist Saturation_FcalC {
         output = LAr/FCALC/Data_Integrity/Digit_Saturation        
         algorithm = LAr_Digits_BinsGreaterThan05
        }
    } # end FCAL

 } # end Digits

## LArCollisiontime ##
 
 dir LArClusterCollTime {

    hist LArCollTime {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
      display = LogY,StatBox
    }
    hist LArCollTime_vs_LB {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
      display = LogZ
    }
    hist LArCollTime_vs_BCID {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
      display = LogZ
    }
    hist LArCollAvgTime {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
      display = LogY,StatBox
    }
    hist LArCollAvgTime_vs_LB {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
      display = LogZ
    }
    hist LArCollTimeLumiBlockTimeCut {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_CollTime_BinsGreaterThan0
    }
    hist LArCollTimeLumiBlockSingleBeamTimeCut {
      output = LAr/LAR_GLOBAL/Collisions-Bkg
      algorithm = LAr_GatherData
    }

 } # end LArCollisionTime

## RawChannels ##

  dir RawChannel { 

    hist bcid_occupancy {
      algorithm = LAr_GatherData
      output = LAr/LAR_GLOBAL/Collisions-Bkg
    }

    dir EMBA {
      hist EMBA_acceptance_AVG {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMBA_noise_acceptance_AVG {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMBA_signal_AVG {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist EMBA_quality_AVG {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist EMBA_quality_nChannel_burst {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBA_noise_fraction {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist EMBA_noise_fraction_NoLArNoisyRO {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBA_noise_fraction_W {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBA_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBA_burst {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBA_timeVetoBurst {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBA_pedestal_evolution {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan10
      }
      hist EMBA_E_v_BC {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMBA_sumE_vs_BCID {
        output = LAr/EMBA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMBA_mean_feb_time {
        output = LAr/EMBA/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      
    }

   dir EMBC {
      hist EMBC_acceptance_AVG {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMBC_noise_acceptance_AVG {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMBC_signal_AVG {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist EMBC_quality_AVG {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist EMBC_quality_nChannel_burst {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBC_noise_fraction {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist EMBC_noise_fraction_NoLArNoisyRO {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBC_noise_fraction_W {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBC_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMBC_burst {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBC_timeVetoBurst {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMBC_pedestal_evolution {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan10
      }
      hist EMBC_E_v_BC {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMBC_sumE_vs_BCID {
        output = LAr/EMBC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMBC_mean_feb_time {
        output = LAr/EMBC/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir EMECA {
      hist EMECA_acceptance_AVG {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMECA_noise_acceptance_AVG {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMECA_signal_AVG {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist EMECA_quality_AVG {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist EMECA_quality_nChannel_burst {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECA_noise_fraction {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist EMECA_noise_fraction_NoLArNoisyRO {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECA_noise_fraction_W {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECA_noise_fraction_TimeVetoLArNoisyRO  {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECA_burst {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECA_timeVetoBurst {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECA_pedestal_evolution {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan10
      }
      hist EMECA_E_v_BC {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMECA_sumE_vs_BCID {
        output = LAr/EMECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMECA_mean_feb_time {
        output = LAr/EMECA/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir EMECC {
      hist EMECC_acceptance_AVG {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMECC_noise_acceptance_AVG {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist EMECC_signal_AVG {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist EMECC_quality_AVG {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist EMECC_quality_nChannel_burst {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECC_noise_fraction {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist EMECC_noise_fraction_NoLArNoisyRO {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECC_noise_fraction_W {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECC_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist EMECC_burst {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECC_timeVetoBurst {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist EMECC_pedestal_evolution {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan10
      }
      hist EMECC_E_v_BC {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMECC_sumE_vs_BCID {
        output = LAr/EMECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist EMECC_mean_feb_time {
        output = LAr/EMECC/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir HECA {
      hist HECA_acceptance_AVG {
        output = LAr/HECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist HECA_noise_acceptance_AVG {
        output = LAr/HECA/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist HECA_signal_AVG {
        output = LAr/HECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist HECA_quality_AVG {
        output = LAr/HECA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist HECA_quality_nChannel_burst {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECA_noise_fraction {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist HECA_noise_fraction_NoLArNoisyRO {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist HECA_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist HECA_burst {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECA_timeVetoBurst {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECA_pedestal_evolution {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan40
      }
      hist HECA_E_v_BC {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist HECA_sumE_vs_BCID {
        output = LAr/HECA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist HECA_mean_feb_time {
        output = LAr/HECA/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir HECC {
      hist HECC_acceptance_AVG {
        output = LAr/HECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist HECC_noise_acceptance_AVG {
        output = LAr/HECC/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist HECC_signal_AVG {
        output = LAr/HECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist HECC_quality_AVG {
        output = LAr/HECC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist HECC_quality_nChannel_burst {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECC_noise_fraction {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist HECC_noise_fraction_NoLArNoisyRO {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist HECC_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove1
        display = LogY,StatBox
      }
      hist HECC_burst {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECC_timeVetoBurst {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist HECC_pedestal_evolution {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan40
      }
      hist HECC_E_v_BC {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist HECC_sumE_vs_BCID {
        output = LAr/HECC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist HECC_mean_feb_time {
        output = LAr/HECC/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir FCALA {
      hist FCALA_acceptance_AVG {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist FCALA_noise_acceptance_AVG {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist FCALA_signal_AVG {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist FCALA_quality_AVG {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist FCALA_quality_nChannel_burst {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALA_noise_fraction {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist FCALA_noise_fraction_NoLArNoisyRO {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove2
        display = LogY,StatBox
      }
      hist FCALA_noise_fraction_TimeVetoLArNoisyRO  {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove2
        display = LogY,StatBox
      }
      hist FCALA_burst {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALA_timeVetoBurst {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALA_pedestal_evolution {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan20
      }
      hist FCALA_E_v_BC {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist FCALA_sumE_vs_BCID {
        output = LAr/FCALA/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist FCALA_mean_feb_time {
        output = LAr/FCALA/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

    dir FCALC {
      hist FCALC_acceptance_AVG {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells
 	algorithm = LAr_RawChannels_BinsGreaterThan5
     }
      hist FCALC_noise_acceptance_AVG {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells
        algorithm = LAr_RawChannels_BinsGreaterThan5
      }
      hist FCALC_signal_AVG {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan100
      }
      hist FCALC_quality_AVG {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells
	algorithm = LAr_RawChannels_BinsGreaterThan1
      }
      hist FCALC_quality_nChannel_burst {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALC_noise_fraction {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
      hist FCALC_noise_fraction_NoLArNoisyRO {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove2
        display = LogY,StatBox
      }
      hist FCALC_noise_fraction_TimeVetoLArNoisyRO {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_EntriesAbove2
        display = LogY,StatBox
      }
      hist FCALC_burst {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALC_timeVetoBurst {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
        algorithm = LAr_RawChannels_BinsGreaterThan0
      }
      hist FCALC_pedestal_evolution {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_RawChannels_AbsoluteValueGreaterThan20
      }
      hist FCALC_E_v_BC {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist FCALC_sumE_vs_BCID {
        output = LAr/FCALC/Occupancy-Noise/Noise_Burst
	algorithm = LAr_GatherData
      }
      hist FCALC_mean_feb_time {
        output = LAr/FCALC/Timing/Partition
	algorithm = LAr_GatherData
        display = LogY,StatBox
      }
    }

  } # End Raw Channels

} #end LAr

## CaloMonitoring ##

dir CaloMonitoring {
  dir CaloBaseline {
    algorithm = LAr_GatherData
    dir General {
       hist h1BCID_pedestalMon {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist h1BCID_BCIDToolMon {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist nEvtsRejectByDifferentTool {
          output = LAr/LAR_GLOBAL/Baseline
	  }
    }

    dir AllCaloHLT_noalg_cosmiccalo_L1RD1_EMPTY {
       hist hprof1d_pedestalMonEM_AllEta {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_pedestalMonHEC+FCal_AllEta {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_pedestalMon_EM_LB {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_pedestalMon_HEC+FCal_LB {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_pedestalMon_EM_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta1 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta2 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta3 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta4 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta5 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta6 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta7 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta8 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta9 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta10 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta11 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta12 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta13 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta14 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_EM_eta15 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta1 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta2 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta3 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta4 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta5 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta6 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta7 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta8 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta9 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta10 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta11 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta12 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta13 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta14 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta15 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta16 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta17 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_pedestalMon_HEC+FCal_eta18 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
    }
     
    dir AllCaloHLT_noalg_zb_L1ZB {

       hist hprof1d_bcidtoolMon_EM_AllEta {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_AllEta {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_bcidtoolMon_EM_LB {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_LB {
          output = LAr/LAR_GLOBAL/Baseline
	  }
       hist hprof1d_bcidtoolMon_EM_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta1 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta2 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta3 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta4 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta5 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta6 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta7 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta8 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta9 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta10 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta11 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta12 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta13 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta14 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_EM_eta15 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-EM
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta0 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta1 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta2 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta3 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta4 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta5 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta6 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta7 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta8 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta9 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta10 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta11 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta12 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta13 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta14 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta15 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta16 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta17 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
       hist hprof1d_bcidtoolMon_HEC+FCal_eta18 {
          output = LAr/LAR_GLOBAL/Baseline/perBCID-HEC_FCal
	  }
    }
  }

  dir LArCellMon_NoTrigSel {	

    dir Sporadic.* {
      dir EMBA {
         hist .*EN {
  	   regex = 1
           output = LAr/EMBA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
         }
         hist .*ENLB {
  	   regex = 1
           output = LAr/EMBA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/EMBA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/EMBA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir EMBC {
        hist .*EN {
	   regex = 1
           output = LAr/EMBC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
        }
         hist .*ENLB {
  	   regex = 1
           output = LAr/EMBC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/EMBC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/EMBC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir EMECA {
        hist .*EN {
	   regex = 1
           output = LAr/EMECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
        }
         hist .*ENLB {
  	   regex = 1
           output = LAr/EMECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/EMECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/EMECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir EMECC {
         hist .*EN {
	   regex = 1
           output = LAr/EMECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
         }
         hist .*ENLB {
  	   regex = 1
           output = LAr/EMECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/EMECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/EMECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir HECA {
        hist .*EN {
	   regex = 1
           output = LAr/HECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20
        }       
         hist .*ENLB {
  	   regex = 1
           output = LAr/HECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/HECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/HECA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }
       
      dir HECC {
         hist .*EN {
 	   regex = 1
           output = LAr/HECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
         }
         hist .*ENLB {
  	   regex = 1
           output = LAr/HECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/HECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/HECC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir FCALA {
        hist .*EN {
	   regex = 1
           output = LAr/FCALA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_EntriesAbove20       
        }
         hist .*ENLB {
  	   regex = 1
           output = LAr/FCALA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/FCALA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/FCALA/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

      dir FCALC {
          hist .*EN {
	    regex = 1
            output = LAr/FCALC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
            display = LogY,StatBox
            algorithm = LAr_CaloCells_EntriesAbove20       
         }
         hist .*ENLB {
  	   regex = 1
           output = LAr/FCALC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = LogY,StatBox
           algorithm = LAr_CaloCells_BinNotEmpty
         }
         hist .*Quality {
  	   regex = 1
           output = LAr/FCALC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_CaloCells_SideBand4000
         }
         hist Nsporadic.* {
  	   regex = 1
           output = LAr/FCALC/Occupancy-Noise/Single_Cells/Non_Gaussian_Noise
           display = StatBox
           algorithm = LAr_GatherData   
         }
      }

    } # end Sporadic

    dir Energy {

      # DB Normalized Energy Distribution (with random triggers only, if possible)
      #EMBA

      hist DBNoiseNormalizedEnergy_EMBPA {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EMP
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB1A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB2A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB3A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #EMBC

      hist DBNoiseNormalizedEnergy_EMBPC {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EMP
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB1C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB2C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMB3C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      #EMECA

      hist DBNoiseNormalizedEnergy_EMECPA {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EMP
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC1A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC2A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC3A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #EMECC

      hist DBNoiseNormalizedEnergy_EMECPC {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EMP
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC1C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC2C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_EMEC3C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_EM3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #HECA

      hist DBNoiseNormalizedEnergy_HEC0A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC1A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC2A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC3A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #HECC

      hist DBNoiseNormalizedEnergy_HEC0C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC1C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC2C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_HEC3C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_HEC
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #FCALA

      hist DBNoiseNormalizedEnergy_FCAL1A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_FCAL2A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_FCAL3A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }

      #FCALC

      hist DBNoiseNormalizedEnergy_FCAL1C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL1
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_FCAL2C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL2
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      hist DBNoiseNormalizedEnergy_FCAL3C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL3
        weight = 0 # Remove once RNDM trigger TA is reliable            
      }
      # Full Energy Distribution
      #EMBA

      hist CellEnergy_EMBPA {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB1A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB2A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB3A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }

      #EMBC

      hist CellEnergy_EMBPC {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB1C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB2C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMB3C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      #EMECA

      hist CellEnergy_EMECPA {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC1A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC2A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC3A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }

      #EMECC

      hist CellEnergy_EMECPC {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC1C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC2C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_EMEC3C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }

      #HECA

      hist CellEnergy_HEC0A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC1A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC2A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC3A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }

      #HECC

      hist CellEnergy_HEC0C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC1C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC2C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_HEC3C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      #FCALA

      hist CellEnergy_FCAL1A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_FCAL2A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_FCAL3A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      #FCALC

      hist CellEnergy_FCAL1C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_FCAL2C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
      hist CellEnergy_FCAL3C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = LAr_GatherData
        display = LogX-LogY
      }
    }
    


    dir 2d_Occupancy {

      #5 Sigma Threhold:
      #EMBA

      hist CellOccupancyVsEtaPhi_EMBPA_5Sigma {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_EMB1A_5Sigma {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_EMB2A_5Sigma {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_EMB3A_5Sigma {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #EMBC

      hist CellOccupancyVsEtaPhi_EMBPC_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_EMB1C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_EMB2C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_EMB3C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #EMECA

      hist CellOccupancyVsEtaPhi_EMECPA_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_EMEC1A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_EMEC2A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_EMEC3A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #EMECC

      hist CellOccupancyVsEtaPhi_EMECPC_5Sigma {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_EMEC1C_5Sigma {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_EMEC2C_5Sigma {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_EMEC3C_5Sigma {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #HECA
      hist CellOccupancyVsEtaPhi_HEC3A_5Sigma {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_HEC0A_5Sigma {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_HEC1A_5Sigma {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_HEC2A_5Sigma {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #HECC

      hist CellOccupancyVsEtaPhi_HEC3C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      }
      hist CellOccupancyVsEtaPhi_HEC0C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_HEC1C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_HEC2C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #FCALA
      hist CellOccupancyVsEtaPhi_FCAL1A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_FCAL2A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_FCAL3A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #FCALC

      hist CellOccupancyVsEtaPhi_FCAL1C_5Sigma {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
        display = LogZ	
      } 
      hist CellOccupancyVsEtaPhi_FCAL2C_5Sigma {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
 	display = LogZ
      } 
      hist CellOccupancyVsEtaPhi_FCAL3C_5Sigma {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
      } 

      #Medium Threshold

      #EMBA

      hist CellOccupancyVsEtaPhi_EMBPA_medEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1A_medEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2A_medEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3A_medEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #EMBC

      hist CellOccupancyVsEtaPhi_EMBPC_medEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1C_medEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2C_medEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3C_medEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #EMECA

      hist CellOccupancyVsEtaPhi_EMECPA_medEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1A_medEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2A_medEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3A_medEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #EMECC

      hist CellOccupancyVsEtaPhi_EMECPC_medEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1C_medEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2C_medEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3C_medEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #HECA

      hist CellOccupancyVsEtaPhi_HEC3A_medEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0A_medEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1A_medEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2A_medEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #HECC

      hist CellOccupancyVsEtaPhi_HEC3C_medEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0C_medEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1C_medEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2C_medEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #FCALA

      hist CellOccupancyVsEtaPhi_FCAL1A_medEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2A_medEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3A_medEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #FCALC

      hist CellOccupancyVsEtaPhi_FCAL1C_medEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2C_medEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3C_medEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsGreaterThanPercentage_2D
	display = LogZ
	weight = 1.25
      } 

      #High Threshold

      #EMBA

      hist CellOccupancyVsEtaPhi_EMBPA_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMBC

      hist CellOccupancyVsEtaPhi_EMBPC_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMECA

      hist CellOccupancyVsEtaPhi_EMECPA_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMECC

      hist CellOccupancyVsEtaPhi_EMECPC_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #HECA

      hist CellOccupancyVsEtaPhi_HEC3A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #HECC

      hist CellOccupancyVsEtaPhi_HEC3C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #FCALA

      hist CellOccupancyVsEtaPhi_FCAL1A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #FCALC

      hist CellOccupancyVsEtaPhi_FCAL1C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #High Threshold with noVeto 

      #EMBA

      hist CellOccupancyVsEtaPhi_EMBPA_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMBC

      hist CellOccupancyVsEtaPhi_EMBPC_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMB1C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB2C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMB3C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMECA

      hist CellOccupancyVsEtaPhi_EMECPA_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #EMECC

      hist CellOccupancyVsEtaPhi_EMECPC_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_EMEC1C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC2C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_EMEC3C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #HECA

      hist CellOccupancyVsEtaPhi_HEC3A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #HECC

      hist CellOccupancyVsEtaPhi_HEC3C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      }
      hist CellOccupancyVsEtaPhi_HEC0C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC1C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_HEC2C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #FCALA

      hist CellOccupancyVsEtaPhi_FCAL1A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

      #FCALC

      hist CellOccupancyVsEtaPhi_FCAL1C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL2C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 
      hist CellOccupancyVsEtaPhi_FCAL3C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_BinsDiffFromStripMedian
	display = LogZ
	weight = 1.25
      } 

    } # end 2D occupancy

    dir 2d_PoorQualityFraction {

      hist fractionOverQthVsEtaPhi_EMBPA_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler
         algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB1A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB2A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB3A_hiEth {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMBC

      hist fractionOverQthVsEtaPhi_EMBPC_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB1C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB2C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB3C_hiEth {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMECA

      hist fractionOverQthVsEtaPhi_EMECPA_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC1A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC2A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC3A_hiEth {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMECC

      hist fractionOverQthVsEtaPhi_EMECPC_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC1C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC2C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC3C_hiEth {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #HECA

      hist fractionOverQthVsEtaPhi_HEC3A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC0A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC1A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC2A_hiEth {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #HECC

      hist fractionOverQthVsEtaPhi_HEC3C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC0C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC1C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC2C_hiEth {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #FCALA

      hist fractionOverQthVsEtaPhi_FCAL1A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL2A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL3A_hiEth {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #FCALC

      hist fractionOverQthVsEtaPhi_FCAL1C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL2C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL3C_hiEth {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold 
	weight = 0
      }

#           hiEth_noVeto
      hist fractionOverQthVsEtaPhi_EMBPA_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
         algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB1A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
        algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB2A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB3A_hiEth_noVeto {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMBC

      hist fractionOverQthVsEtaPhi_EMBPC_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB1C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB2C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMB3C_hiEth_noVeto {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMECA

      hist fractionOverQthVsEtaPhi_EMECPA_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC1A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC2A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC3A_hiEth_noVeto {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #EMECC

      hist fractionOverQthVsEtaPhi_EMECPC_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC1C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC2C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_EMEC3C_hiEth_noVeto {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #HECA

      hist fractionOverQthVsEtaPhi_HEC3A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC0A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC1A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC2A_hiEth_noVeto {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #HECC

      hist fractionOverQthVsEtaPhi_HEC3C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC0C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC1C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_HEC2C_hiEth_noVeto {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #FCALA

      hist fractionOverQthVsEtaPhi_FCAL1A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL2A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL3A_hiEth_noVeto {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }

      #FCALC

      hist fractionOverQthVsEtaPhi_FCAL1C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL2C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold
	weight = 0
      }
      hist fractionOverQthVsEtaPhi_FCAL3C_hiEth_noVeto {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3/No_CSC_Veto
	algorithm = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold 
	weight = 0
      }

    }
    
    dir Summary {

      hist nEvtsRejectByDifferentTool {
                output = LAr/LAR_GLOBAL/Run_Parameters
                algorithm = LAr_GatherData
                display = LogY,StatBox
        }
      } #Summary

    dir EnergyVsTime {

      hist CellEnergyVsTime_EMBPA {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      
      hist CellEnergyVsTime_EMBPA_1000 {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMB1A {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB1A_1000 {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMB2A {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB2A_3000 {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMB3A {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB3A_1500 {
        output = LAr/EMBA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      #EMBC

      hist CellEnergyVsTime_EMBPC {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMBPC_1000 {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMB1C {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB1C_1000 {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      hist CellEnergyVsTime_EMB2C {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB2C_3000 {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMB3C {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMB3C_1500 {
        output = LAr/EMBC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      #EMECA

      hist CellEnergyVsTime_EMECPA {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMECPA_1500 {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMEC1A {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC1A_1000 {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMEC2A {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC2A_3000 {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      hist CellEnergyVsTime_EMEC3A {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC3A_2000 {
        output = LAr/EMECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      #EMECC

      hist CellEnergyVsTime_EMECPC {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMECPC_1500 {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMEC1C {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC1C_1000 {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_EMEC2C {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC2C_3000 {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      
      hist CellEnergyVsTime_EMEC3C {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_EMEC3C_2000 {
        output = LAr/EMECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      #HECA

      hist CellEnergyVsTime_HEC3A {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC3A_3500 {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC0A {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC0A_3500 {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC1A {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC1A_3500 {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC2A {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }

      hist CellEnergyVsTime_HEC2A_3500 {
        output = LAr/HECA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      #HECC

      hist CellEnergyVsTime_HEC3C {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC3C_3500 {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC0C {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC0C_3500 {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC1C {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_HEC1C_3500 {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_HEC2C {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }

      hist CellEnergyVsTime_HEC2C_3500 {
        output = LAr/HECC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      #FCALA

      hist CellEnergyVsTime_FCAL1A {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL1A_1000 {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_FCAL2A {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL2A_1000 {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
     hist CellEnergyVsTime_FCAL3A {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL3A_1000 {
        output = LAr/FCALA/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }

      #FCALC

      hist CellEnergyVsTime_FCAL1C {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL1C_1000 {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_FCAL2C {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL2C_1000 {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
      hist CellEnergyVsTime_FCAL3C {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY-LogZ
      }
      hist CellEnergyVsTime_FCAL3C_1000 {
        output = LAr/FCALC/Timing/Single_Cells
        algorithm = LAr_GatherData
	display = LogY
	weight = 1.0
      }
    }

         

    dir DatabaseNoise {

      #EMBA

      hist DatabaseNoiseVsEtaPhi_EMBPA {
        output = LAr/EMBA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB1A {
        output = LAr/EMBA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB2A {
        output = LAr/EMBA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB3A {
        output = LAr/EMBA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #EMBC
      
      hist DatabaseNoiseVsEtaPhi_EMBPC {
        output = LAr/EMBC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB1C {
        output = LAr/EMBC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB2C {
        output = LAr/EMBC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMB3C {
        output = LAr/EMBC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #EMECA

      hist DatabaseNoiseVsEtaPhi_EMECPA {
        output = LAr/EMECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC1A {
        output = LAr/EMECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC2A {
        output = LAr/EMECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC3A {
        output = LAr/EMECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #EMECC
      
      hist DatabaseNoiseVsEtaPhi_EMECPC {
        output = LAr/EMECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC1C {
        output = LAr/EMECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC2C {
        output = LAr/EMECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_EMEC3C {
        output = LAr/EMECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #HECA

      hist DatabaseNoiseVsEtaPhi_HEC3A {
        output = LAr/HECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC0A {
        output = LAr/HECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC1A {
        output = LAr/HECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC2A {
        output = LAr/HECA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #HECC
      
      hist DatabaseNoiseVsEtaPhi_HEC3C {
        output = LAr/HECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC0C {
        output = LAr/HECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC1C {
        output = LAr/HECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }
      hist DatabaseNoiseVsEtaPhi_HEC2C {
        output = LAr/HECC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogY
      }

      #FCALA

      hist DatabaseNoiseVsEtaPhi_FCAL1A {
        output = LAr/FCALA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }
      hist DatabaseNoiseVsEtaPhi_FCAL2A {
        output = LAr/FCALA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }
      hist DatabaseNoiseVsEtaPhi_FCAL3A {
        output = LAr/FCALA/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }

      #FCALC
      
      hist DatabaseNoiseVsEtaPhi_FCAL1C {
        output = LAr/FCALC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }
      hist DatabaseNoiseVsEtaPhi_FCAL2C {
        output = LAr/FCALC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }
      hist DatabaseNoiseVsEtaPhi_FCAL3C {
        output = LAr/FCALC/Detector_Status
        algorithm = LAr_GatherData
	#display = LogZ
      }
    }
   dir KnownBadChannels {

      #EMBA

      hist KnownBadChannelsVsEtaPhi_EMBPA {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB1A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB2A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB3A {
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }

      #EMBC

      hist KnownBadChannelsVsEtaPhi_EMBPC {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB1C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB2C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMB3C {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      #EMECA

      hist KnownBadChannelsVsEtaPhi_EMECPA {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC1A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC2A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC3A {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }

      #EMECC

      hist KnownBadChannelsVsEtaPhi_EMECPC {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC1C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC2C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_EMEC3C {
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
     #HECA

      hist KnownBadChannelsVsEtaPhi_HEC3A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC0A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC1A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC2A {
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }

      #HECC

      hist KnownBadChannelsVsEtaPhi_HEC3C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC0C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC1C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_HEC2C {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      #FCALA

      hist KnownBadChannelsVsEtaPhi_FCAL1A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_FCAL2A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_FCAL3A {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }

      #FCALC

      hist KnownBadChannelsVsEtaPhi_FCAL1C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_FCAL2C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
      hist KnownBadChannelsVsEtaPhi_FCAL3C {
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3/ExtraPlots
        algorithm = PassInput_Mask
        display = LogZ
      }
    }




    dir 2d_AvgEnergy {
# 5Sigma
      #EMBA

      hist CellAvgEnergyVsEtaPhi_EMBPA_5Sigma {     
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Presampler
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMB1A_5Sigma {     
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMB2A_5Sigma {     
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMB3A_5Sigma {     
        output = LAr/EMBA/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      #EMBC

      hist CellAvgEnergyVsEtaPhi_EMBPC_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Presampler
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMB1C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMB2C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMB3C_5Sigma {
        output = LAr/EMBC/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
     #EMECA

      hist CellAvgEnergyVsEtaPhi_EMECPA_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Presampler
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMEC1A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMEC2A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_EMEC3A_5Sigma {
        output = LAr/EMECA/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      #EMECC

      hist CellAvgEnergyVsEtaPhi_EMECPC_5Sigma {     
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Presampler
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMEC1C_5Sigma {     
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMEC2C_5Sigma {     
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_EMEC3C_5Sigma {     
        output = LAr/EMECC/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      #HECA

      hist CellAvgEnergyVsEtaPhi_HEC3A_5Sigma {     
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_HEC0A_5Sigma {     
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling0
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_HEC1A_5Sigma {     
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_HEC2A_5Sigma {     
        output = LAr/HECA/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      #HECC

      hist CellAvgEnergyVsEtaPhi_HEC3C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_HEC0C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling0
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_HEC1C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_HEC2C_5Sigma {
        output = LAr/HECC/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
     #FCALA
        
      hist CellAvgEnergyVsEtaPhi_FCAL1A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_FCAL2A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
      hist CellAvgEnergyVsEtaPhi_FCAL3A_5Sigma {
        output = LAr/FCALA/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }
     #FCALC

      hist CellAvgEnergyVsEtaPhi_FCAL1C_5Sigma {     
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling1
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_FCAL2C_5Sigma {     
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling2
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      } 
      hist CellAvgEnergyVsEtaPhi_FCAL3C_5Sigma {     
        output = LAr/FCALC/Occupancy-Noise/Single_Cells/Sampling3
        algorithm = LAr_CaloCells_BinsDiffFromStripMedian 
      }


    }
  }
}


##############
# Algorithms
##############

# Composite algorithms

compositeAlgorithm AbsoluteValueGreaterThan {
  libnames = libdqm_algorithms.so
  subalgs = Bins_GreaterThan_Threshold,Bins_LessThan_Threshold
}

# Summary makers

algorithm BinwiseSummary {
  libname = libdqm_summaries.so
  name = BinwiseSummary
}

# Helper algorithms

algorithm PassInput_Mask {
  libname = libdqm_algorithms.so
  name = PassInput
  Role--Mask = 1
}

# LAr algorithms 

algorithm LArHV_BinNotEmpty {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0
  PublishBins = 1
  MaxPublish = 1000
  thresholds = LArHV_BinNotEmpty
}

algorithm LAr_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
}
          
algorithm LAr_Digits_BinsGreaterThan05 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0.05
  PublishBins = 1	
  thresholds = LAr_Digits_BinsGreaterThan05
}

algorithm LAr_FEBMon_BinDump {
  libname = libdqm_algorithms.so 
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0
  PublishBins = 1
  thresholds = LAr_FEBMon_BinDump
}

algorithm LAr_FEBMon_BinsGreaterThan0 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0
  PublishBins = 1	
  MaxPublish = 1000
  thresholds = LAr_FEBMon_BinsGreaterThan0
}

algorithm LAr_FEBMon_BinsGreaterThan1 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 1
  PublishBins = 1
  MaxPublish = 1000
  thresholds = LAr_FEBMon_BinsGreaterThan1
}

algorithm LAr_FEBMon_BinsGreaterThan001 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0.001
  PublishBins = 1
  MaxPublish = 1000
  thresholds = LAr_FEBMon_BinsGreaterThan1
}



algorithm LAr_FEBMon_BinsGreaterThan10 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 10
  PublishBins = 1
  MaxPublish = 1000
  thresholds = LAr_FEBMon_BinsGreaterThan10
}


algorithm LAr_RawChannels_EntriesAbove1 {
  libname = libdqm_algorithms.so
  name = SideBand_Absolute
  UseUnderFlow = 0
  UseOverFlow = 1
  Min = 0.
  Max = 1.0
  MinStat = 1000
  thresholds = LAr_RawChannels_EntriesAbove1Thres
}

algorithm LAr_RawChannels_EntriesAbove2 {
  libname = libdqm_algorithms.so
  name = SideBand_Absolute
  UseUnderFlow = 0
  UseOverFlow = 1
  Min = 0.
  Max = 2.0
  MinStat = 1000
  thresholds = LAr_RawChannels_EntriesAbove2Thres
}

algorithm LAr_RawChannels_BinsGreaterThan0 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.
  PublishBins = 1
  MaxPublish = 500
  thresholds = LAr_RawChannels_BinsGreaterThan0
}

algorithm LAr_RawChannels_BinsGreaterThan05 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.5
  PublishBins = 1
  MaxPublish = 500
  thresholds = LAr_RawChannels_BinsGreaterThan0
}

#algorithm LAr_RawChannels_BinsGreaterThan3 {
#  libname = libdqm_algorithms.so
#  name =  Bins_GreaterThan_Threshold
#  BinThreshold = 3.
#  PublishBins = 1
#  thresholds = LAr_RawChannels_BinsGreaterThan0
#}

algorithm LAr_RawChannels_BinsGreaterThan01 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.001
  PublishBins = 1
  MaxPublish = 500
  thresholds = LAr_RawChannels_BinsGreaterThan0
}

algorithm LAr_RawChannels_BinsGreaterThan1 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 1.5
  PublishBins = 1
  MinStat = 1000
  thresholds = LAr_RawChannels_BinsGreaterThan1
}

algorithm LAr_RawChannels_BinsGreaterThan5 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 5.
  PublishBins = 1
  thresholds = LAr_RawChannels_BinsGreaterThan5
}

algorithm LAr_RawChannels_AbsoluteValueGreaterThan10 {
  libname = libdqm_algorithms.so
  name = AbsoluteValueGreaterThan
  Bins_GreaterThan_Threshold|BinThreshold = 10000
  Bins_LessThan_Threshold|BinThreshold = -10000
  PublishBins = 1
#  MinStat = 1000
  thresholds = LAr_RawChannels_AbsoluteValueGreaterThanAny
}

algorithm LAr_RawChannels_AbsoluteValueGreaterThan20 {
  libname = libdqm_algorithms.so
  name = AbsoluteValueGreaterThan
  Bins_GreaterThan_Threshold|BinThreshold = 20000
  Bins_LessThan_Threshold|BinThreshold = -20000
  PublishBins = 1
#  MinStat = 1000
  thresholds = LAr_RawChannels_AbsoluteValueGreaterThanAny
}

algorithm LAr_RawChannels_AbsoluteValueGreaterThan40 {
  libname = libdqm_algorithms.so
  name = AbsoluteValueGreaterThan
  Bins_GreaterThan_Threshold|BinThreshold = 40000
  Bins_LessThan_Threshold|BinThreshold = -40000
  PublishBins = 1
#  MinStat = 1000
  thresholds = LAr_RawChannels_AbsoluteValueGreaterThanAny
}

algorithm LAr_RawChannels_AbsoluteValueGreaterThan100 {
  libname = libdqm_algorithms.so
  name = AbsoluteValueGreaterThan
  Bins_GreaterThan_Threshold|BinThreshold = 100
  Bins_LessThan_Threshold|BinThreshold = -100
  PublishBins = 1
  MinStat = 1000
  thresholds = LAr_RawChannels_AbsoluteValueGreaterThan100
}
 
algorithm LAr_CollTime_BinsGreaterThan0 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.
  PublishBins = 1
  MaxPublish = 500
  thresholds = LAr_CollTime_BinsGreaterThan0
}

algorithm LAr_DSP_BinGreaterThan0 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.
  PublishBins = 5
  MaxPublish = 1000
  thresholds = LAr_DSP_BinsGreaterThan0
}

algorithm LAr_DSP_BinGreaterThan0_50 {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  BinThreshold = 0.
  PublishBins = 5
  MaxPublish = 1000
  thresholds = LAr_DSP_BinsGreaterThan50
}

#algorithm LAr_DSP_BinGreaterThan100 {
#  libname = libdqm_algorithms.so
#  name =  Bins_GreaterThan_Threshold
#  BinThreshold = 100.
#  PublishBins = 0
#  #MaxPublish = 500
#  thresholds = LAr_DSP_BinsGreaterThan100
#}

algorithm LAr_CaloCells_BinNotEmpty {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  BinThreshold = 0
  PublishBins = 1
  MaxPublish = 1000
  thresholds = LAr_CaloCells_BinNotEmpty
}

algorithm LAr_CaloCells_SideBand4000 {
  libname = libdqm_algorithms.so
  name = SideBand_Relative
  UseUnderFlow = 0
  UseOverFlow = 1
  Min = 0.
  Max = 4000
  thresholds = LAr_CaloCells_SideBand4000Thres
}

algorithm LAr_CaloCells_EntriesAbove20 {
  libname = libdqm_algorithms.so
  name = SideBand_Absolute
  UseUnderFlow = 0
  UseOverFlow = 1
  Min = -9999.
  Max = 5000.
  thresholds = LAr_CaloCells_EntriesAbove20Thres
}


algorithm LAr_CaloCells_BinsGreaterThanPercentage_2D {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  #All The Same Settings as with LArRawChannels:
  thresholds = LAr_CaloCells_BinsGreaterThanPercentage_2D
  BinThreshold = 1.5
  PublishBins = 1
  MinStat = 1000
}

algorithm LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold {
  libname = libdqm_algorithms.so
  name =  Bins_GreaterThan_Threshold
  thresholds = LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold_thres 
  BinThreshold = 0.4
  PublishBins = 1
  SuppressFactor = 0.0
  SuppressRedFactor = 0.0
  MaxPublish = 20000	
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_EMP {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 30000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_EM1 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 270000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_EM2 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 150000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_EM3 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 100000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL1 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 10000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL2 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 5000
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_FCAL3 {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 2500
  MinSignificance = 5
}

algorithm LAr_CaloCells_SimpleGausFit_NormEnergy_HEC {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  thresholds = LAr_CaloCells_NormalizedEnergyThreshold
  MinStat = 7000
  MinSignificance = 5
}
algorithm WorstCaseYellowLArMon {
  libname = libdqm_summaries.so
  name = WorstCaseYellow
} 
#algorithm LArMon_bins_diff_fromavg {
#  libname = libdqm_algorithms.so
#  #xmin = -3.2
#  #xmax = 3.2
#  name = Bins_Diff_FromAvg
#  NSigma = 5 
#  PublishBins = 1
#  thresholds = LArMon_bins_diff_fromavg_thres
#}
algorithm LAr_CaloCells_BinsDiffFromStripMedian {
  libname = libdqm_algorithms.so
  name = BinsDiffFromStripMedian
  thresholds = LAr_CaloCells_BinsDiffFromStripMedian_threshold 
  SuppressFactor = 0.0
  SuppressRedFactor = 0.0
  MaxPublish = 20000
}

##############
# Thresholds
##############

#thresholds LArMon_bins_diff_fromavg_thres {
#  limits NBins {
#    warning = 2 
#    error = 10
#  }
#}

thresholds LArHV_BinNotEmpty {
  limits NBins {
    warning = 0.
    error = 5.
  }
}

thresholds LAr_FEBMon_BinDump {
   limits NBins {
    warning = 3.
    error = 10.
  }
}

thresholds LAr_FEBMon_BinsGreaterThan0 {
  limits NBins {
    warning = 1
    error = 5
  }
}

thresholds LAr_FEBMon_BinsGreaterThan1 {
  limits NBins {
    warning = 0
    error = 5
  }
}

thresholds LAr_FEBMon_BinsGreaterThan10 {
  limits NBins {
    warning = 0
    error = 5
  }
}

thresholds LAr_Digits_BinsGreaterThan05 {
  limits NBins {
    warning = 0
    error = 4
  }
}

thresholds LAr_RawChannels_EntriesAbove1Thres {
  limits Threshold {
    warning = 0
    error = 100
  }
}

thresholds LAr_RawChannels_EntriesAbove2Thres {
  limits Threshold {
    warning = 0
    error = 100
  }
}

thresholds LAr_RawChannels_BinsGreaterThan0 { 
  limits NBins {
    warning = 0
    error = 10
  }
}

thresholds LAr_RawChannels_BinsGreaterThan1 { 
  limits NBins {
    warning = 0
    error = 64
  }
}

thresholds LAr_RawChannels_BinsGreaterThan5 { 
  limits NBins {
    warning = 0
    error = 64
  }
}

thresholds LAr_RawChannels_AbsoluteValueGreaterThanAny { 
  limits NBins {
    warning = 0
    error = 10
  }
}

thresholds LAr_RawChannels_AbsoluteValueGreaterThan100 { 
  limits NBins {
    warning = 0
    error = 64
  }
}

thresholds LAr_CollTime_BinsGreaterThan0 {
  limits NBins {
    warning = 2000
    error = 2500
  }
}

thresholds LAr_DSP_BinsGreaterThan0 {
  limits NBins {
    warning = 0
    error = 5
  }
}

thresholds LAr_DSP_BinsGreaterThan50 {
  limits NBins {
    warning = 0
    error = 50
  }
}

thresholds LAr_CaloCells_BinNotEmpty {
  limits NBins {
    warning = 0.
    error = 100.
  }
}

thresholds LAr_CaloCells_EntriesAbove20Thres {
  limits Threshold {
    warning = 0
    error = 500
  }
}

thresholds LAr_CaloCells_SideBand4000Thres {
  limits Threshold {
    warning = 0.
    error = 0.1
  }
}

thresholds LAr_CaloCells_NormalizedEnergyThreshold {
  limits Sigma {
    warning = 1.05
    error = 1.25
  }
}

thresholds LAr_CaloCells_BinsGreaterThanPercentage_2D { 
  limits NBins {
    warning = 0
    error = 64
  }
}
thresholds LAr_CaloCells_fractionOverQthVsEtaPhi_Bins_GreaterThan_Threshold_thres {
  limits NBins {
    warning = 0
    error = 64
  }
}

thresholds LAr_CaloCells_BinsDiffFromStripMedian_threshold {
  limits MaxDeviation {
    warning = 30 
    error = 200
  }
}
