# **********************************************************************
# $Id: collisions_run.config 769830 2016-08-24 10:17:02Z tlenz $
# **********************************************************************

#######################
# Histogram Assessments
#######################

dir JetTagging {

    reference = CentrallyManagedReferences

  ##################################################################
  ###  Quality_Control
  ##################################################################
  hist DQ_Cutflow {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Quality_Control
  }
  hist Jet_Cutflow {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_n {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_pt {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_eta {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_phi {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_hits_SCT {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_hits_Pixel {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist jet_tracks_hits_BLayer {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist track_selector_eff {
    algorithm = JetTag_GatherData
    output = JetTagging/Quality_Control
  }
  hist track_selector_suspect {
    algorithm = JetTag_GatherData
    output = JetTagging/Quality_Control
  }
  hist track_selector_all {
    algorithm = JetTag_GatherData
    output = JetTagging/Quality_Control
  }
  hist global_BLayerHits {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist global_PixelHits {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist global_SiHits {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist global_nPrimVtx {
    algorithm = KolTest
    output = JetTagging/Quality_Control
  }
  hist tag_SV1IP3D_w {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_pT10_20 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_pT20_50 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_pT50_100 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_pT100_200 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_pT200 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_eta0_05 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_eta05_10 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_eta10_15 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_eta15_20 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_eta20_25 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi0_07 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi07_14 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi14_21 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi21_28 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi28 {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_sum85OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_sum77OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_sum70OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_sumAll {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_frac85OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_frac77OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_frac70OP {
    ###display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_phi_frac50OP { #switch to 60OP?
   ### display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_SV1IP3D_w_sj {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_sj {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Quality_Control
  }

  ####### NEW: 2018 DQ ###############

  hist jet_MV_top {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Quality_Control
  }
  hist n_smt_jet {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Quality_Control
  }
  hist smt_jet_MV_w {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_mu0_30 {
    algorithm = KolTest
    display = LogY
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_mu30_50 {
    algorithm = KolTest
    display = LogY
    weight = 0.8
    output = JetTagging/Quality_Control
  }
  hist tag_MV_w_mu50_70 {
    algorithm = KolTest
    display = LogY
    weight = 0.8
    output = JetTagging/Quality_Control
  }

  ##################################################################
  ###  Diagnostics
  ##################################################################
  hist trigPassed {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist jet_n {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist NTrackParticle {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist priVtx_trks {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist global_xPrimVtx {
    algorithm = KolTest_Koord
    display = LogY
    output = JetTagging/Diagnostics
  }
  hist global_yPrimVtx {
    algorithm = KolTest_Koord
    display = LogY
    output = JetTagging/Diagnostics
  }
  hist global_zPrimVtx {
    algorithm = KolTest_Koord
    output = JetTagging/Diagnostics
  }
  hist global_TRTHits {
    algorithm = KolTest
    display = LogY
    output = JetTagging/Diagnostics
  }
  hist global_SCTHits {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
 ### hist tag_IP2D_n {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_IP2D_b {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_IP2D_u {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ###  }
 ### hist tag_IP2D_c {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ###  }
  hist tag_IP2D_llr {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist tag_IP3D_n {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
 ### hist tag_IP3D_b {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_IP3D_u {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_IP3D_c {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
  hist tag_IP3D_llr {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
 ### hist tag_SV1_b {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_SV1_u {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
 ### hist tag_SV1_c {
 ###   algorithm = KolTest
 ###   output = JetTagging/Diagnostics
 ### }
  hist tag_SV1_llr {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist tag_SV0_sig3d {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist tag_JetFitter_llr {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist tag_JFCNN_llr {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist n_iso_el {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist n_iso_mu {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist jet_top_eff {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist jet_pt_top {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist jet_pt_top_tagged {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist jet_pt_top_eff {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist n_mu {
    algorithm = KolTest
    output = JetTagging/Diagnostics
  }
  hist tag_MV_w {
    display = LogY
    algorithm =  KolTest
    weight = 0.8
    output = JetTagging/Diagnostics
  }

  ##################################################################
  ###  Diagnostics/ImpactParameters
  ##################################################################

  ##################################################################
  ###  Diagnostics/JetInformation
  ##################################################################
  hist jet_phi {
    algorithm = KolTest
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_et {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_eta {
    algorithm = KolTest
    output = JetTagging/Diagnostics/JetInformation
  }
  hist sv1ip3d_tag_neg_rate_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist sv1ip3d_tag_pos_rate_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist mv_tag_60_rate_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist mv_tag_70_rate_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist mv_tag_80_rate_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_jvt {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_kinematic {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_good {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_all {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_quality {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }
  hist jet_2D_suspect {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/JetInformation
  }

  ##################################################################
  ###  Diagnostics/TrackInformation
  ##################################################################
  hist tracks_all_2D {
    algorithm = JetTag_GatherData
    output = JetTagging/Diagnostics/TrackInformation
  }
  hist tracks_pTMin_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation
  }
  hist jet_tracks_d0 {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics/TrackInformation
  } 
  hist jet_tracks_z0 {
    display = LogY
    algorithm = KolTest
    output = JetTagging/Diagnostics/TrackInformation
  } 

  ##################################################################
  ###  Diagnostics/TrackInformation/TracksWithFailedCuts
  ##################################################################
  hist tracks_d0Max_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_z0Max_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_sigd0Max_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_sigz0Max_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  ###hist tracks_etaMax_2D {
  ###  algorithm = JetTag_BinsDiffFromStripMedian
  ###  output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  ###}
  hist tracks_nHitBLayer_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_deadBLayer_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_nHitPix_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_nHitSct_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_nHitSi_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_nHitTrt_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_nHitTrtHighE_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_fitChi2_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_fitProb_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
  hist tracks_fitChi2OnNdfMax_2D {
    algorithm = JetTag_BinsDiffFromStripMedian
    output = JetTagging/Diagnostics/TrackInformation/TracksWithFailedCuts
  }
}

###########################
# Algorithms and Thresholds
###########################

algorithm KolmogorovTest_MaxDistPlusNorm {
  	libname = libdqm_algorithms.so
  	name = KolmogorovTest_MaxDistPlusNorm
thresholds = KVT_Maxdist
reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

#algorithm GatherData {
#  	libname = libdqm_algorithms.so
#  	name = GatherData
#}

#algorithm BinsFilledOutRange {
#  	libname = libdqm_algorithms.so
#  	name = BinsFilledOutRange
#	xmin = 0
#	xmax = 1000
#	thresholds = OutOfRangeThres
#}

algorithm Simple_pol1_Fit {
  	libname = libdqm_algorithms.so
  	name = Simple_pol1_Fit
	thresholds = LinFitThres
}

algorithm Simple_gaus_Fit {
  	libname = libdqm_algorithms.so
  	name = Simple_gaus_Fit
	thresholds = GausFitThres
}


####
## Composited algorithms to extend Kolgomorov tests
####

####
##Simple KolTest just to check histograms
####
compositeAlgorithm KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty {
subalgs = KolmogorovTest_MaxDistPlusNorm,GatherData,Histogram_Not_Empty
libname = libdqm_algorithms.so
}

algorithm KolTest {
  name = KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  KolmogorovTest_MaxDistPlusNorm|thresholds = KVT_Maxdist
}

compositeAlgorithm KolmogorovTest_MaxDistPlusNorm&GatherData {
subalgs = KolmogorovTest_MaxDistPlusNorm,GatherData,Histogram_Not_Empty
libname = libdqm_algorithms.so
}

algorithm KolTest_Koord {
  name = KolmogorovTest_MaxDistPlusNorm&GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
KolmogorovTest_MaxDistPlusNorm|thresholds = KVT_Maxdist_Koord
}

####
##KolTest with added gaus fit. For primary vertex shapes
####
compositeAlgorithm Simple_gaus_Fit&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty {
	subalgs = Simple_gaus_Fit,KolmogorovTest_MaxDistPlusNorm,GatherData,Histogram_Not_Empty
	libname = libdqm_algorithms.so
}

algorithm KolTestPlusGaus {
  	name = Simple_gaus_Fit&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  	KolmogorovTest_MaxDistPlusNorm|thresholds = KVT_Maxdist
	Simple_gaus_Fit|thresholds = GausFitThres
}

####
##KolTest with a check how much bins out of a given range will be filled.
##Also with linear fit to check if a distrubution around 0 is more or less 0
####
compositeAlgorithm Simple_pol1_Fit&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty {
	subalgs = KolmogorovTest_MaxDistPlusNorm,GatherData,Histogram_Not_Empty,Simple_pol1_Fit
	libname = libdqm_algorithms.so
}

algorithm KolTestPlusLinear {
  	name = Simple_pol1_Fit&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  	KolmogorovTest_MaxDistPlusNorm|thresholds = KVT_Maxdist
	Simple_pol1_Fit|thresholds = LinFitThres
}

#compositeAlgorithm BinsFilledOutRange&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty {
#  subalgs = KolmogorovTest_MaxDistPlusNorm,GatherData,Histogram_Not_Empty,BinsFilledOutRange
#  libname = libdqm_algorithms.so
#}

#algorithm KolTestPlusBinsOutOfRange {
#	libname = libdqm_algorithms.so
#	name = BinsFilledOutRange&KolmogorovTest_MaxDistPlusNorm&GatherData&Histogram_Not_Empty
# 	KolmogorovTest_MaxDistPlusNorm|thresholds = KVT_Maxdist
#	BinsFilledOutRange|xmin = 0
#	BinsFilledOutRange|xmax = 1000
#	BinsFilledOutRange|thresholds = OutOfRangeThres
#}

##Gather data and non empty test
#compositeAlgorithm Histogram_Not_Empty&GatherData {
#subalgs = Histogram_Not_Empty,GatherData
#libname = libdqm_algorithms.so
#name = KolmogorovTest_MaxDistPlusNorm&GatherData
#}

algorithm JetTag_GatherData {
  name = Histogram_Not_Empty&GatherData
}

##Gather data and non empty test with over-/underflow information
compositeAlgorithm No_UnderFlows&No_OverFlows&Histogram_Not_Empty&GatherData {
subalgs = No_UnderFlows,No_OverFlows,Histogram_Not_Empty,GatherData
libname = libdqm_algorithms.so
}

algorithm JetTag_GatherDataPlusOverUnder {
  name = No_UnderFlows&No_OverFlows&Histogram_Not_Empty&GatherData
}

algorithm JetTag_BinsDiffFromStripMedian {
  libname = libdqm_algorithms.so
  name = BinsDiffFromStripMedian
  thresholds = JetTag_BinsDiffFromStripMedian_threshold 
}

######################

thresholds JetTag_BinsDiffFromStripMedian_threshold {
  limits MaxDeviation {
    warning = 3 
    error = 5
  }
}

thresholds th_CSC_KSTest_JetTag {
  limits P {
    warning = 0.4
    error = 0.1
  }

}

thresholds KVT_Maxdist {
limits MaxDist {
warning = 0.15
error = 0.3
}
}

thresholds KVT_Maxdist_Koord {
limits MaxDist {
warning = 0.3
error = 0.6
}
}

thresholds OutOfRangeThres {
limits NBins {
warning = 100
error = 1000
}
}

thresholds LinFitThres {
limits pol1[1] {
warning = 1
error = 2
}
}

thresholds GausFitThres {
limits Mean {
warning = 1
error = 2
}
}

 ##############
 # Output
 ##############
    output top_level {
    algorithm = WorstCaseSummary

    output JetTagging {

    output Quality_Control {
        set_weight = 1
        weight = 1
    #output ShiftersPan {
    #    set_weight = 0
    #    weight = 0
    #}
    #output ShiftersPan2D {
    #    set_weight = 0
    #    weight = 0
    #}

}
    output Diagnostics {
    set_weight = 0.0
    weight = 0.0
    output JetInformation {
        set_weight = 0.8
        weight = 0.8
    }
    output TrackInformation {
        set_weight = 0.8
        weight = 0.8
        output TracksWithFailedCuts {
            set_weight = 0
            weight = 0
    }
   }
   ### output ImpactParameters {
   ### set_weight = 0
   ### weight = 0
   ### }

  }


 }
}
