# **********************************************************************
# $Id: cosmics_run.config 
# **********************************************************************

#######################
# HLT
#######################

#######################
# Reference
#######################


##reference HLTglobal_Ref {
##  file = /eos/atlas/atlastier0/rucio/data15_cos/express_express/00261456/data15_cos.00261456.express_express.merge.HIST.x316_h17/data15_cos.00261456.express_express.merge.HIST.x316_h17._0001.1
##  path = run_261456
##  name = same_name
##}

#######################
# Output
#######################

output top_level {

    output HLT {
       output TRHLT {
          output AllChains {
          }
	  output Electrons {
          }
          output Gamma {
          }
          output Muons {
          }
          output MinBias {
          }
          output MissingET {
          }
          output Taus {
          }
          output Jets {
          }
       }
    }
}

#######################
# Histogram Assessments
#######################

dir HLT {
   algorithm = HLT_Histogram_Not_Empty&GatherData

   dir ResultMon { 
       output = HLT/TRHLT

       hist ConfigConsistency_HLT { 
##	 regex = 1
##	 algorithm = HLT_PassInput
         algorithm = HLT_Histogram_Empty
##	 reference = CentrallyManagedReferences
         description = All bins should be empty. If any bin is filled, inform the Trigger ONLINE Expert IMMEDIATELY.
       }

       hist HLTResultHLT { 
##	 regex = 1
##	 algorithm = HLT_PassInput
	 algorithm = HLT_Histogram_Not_Empty&GatherData
	 reference = CentrallyManagedReferences
##         reference = HLTglobal_Ref
       }

       hist L1Events { 
         algorithm = HLT_Histogram_Not_Empty&GatherData
##	 reference = CentrallyManagedReferences
       }

##       hist all_in_dir { 
##         algorithm = HLT_Histogram_Not_Empty&GatherData
##         reference = CentrallyManagedReferences
##       }

       dir AllChains {
 	output = HLT/TRHLT/AllChains
	hist HLT.*P[ST] {
	  regex = 1
          algorithm = HLT_Histogram_Not_Empty&GatherData
##	  algorithm = HLT_PassInput
	}
	hist HLT_AllChainsRAW {
	  regex = 1
          algorithm = HLT_Histogram_Not_Empty&GatherData
##	  algorithm = HLT_PassInput
	}
	hist AllChainsRoIs {
	  regex = 1
          algorithm = HLT_Histogram_Not_Empty&GatherData
##	  algorithm = HLT_PassInput
	}
##	hist [^L].*R[oA][IW].* {
##	  regex = 1
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
##	}
       }
       dir Electrons {
 	output = HLT/TRHLT/Electrons
	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_ElectronsRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}

	hist ElectronsRoIs {
	  regex = 1
	  algorithm = HLT_PassInput 
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Gamma {
 	output = HLT/TRHLT/Gamma

	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}

	hist HLT_GammaRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}

	hist GammaRoIs {
	  regex = 1
	  algorithm = HLT_PassInput 
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Jets {
 	output = HLT/TRHLT/Jets
	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_JetsRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist JetsRoIs {
	  regex = 1
	  algorithm = HLT_PassInput
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir MinBias {
 	output = HLT/TRHLT/MinBias
	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_MinBiasRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist .*RoIs {			# have RoIs just pass for now since they are empty
	  regex = 1
	  algorithm = HLT_PassInput
	}
       }

       dir MissingET {
 	output = HLT/TRHLT/MissingET
	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_MissingETRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist MissingETRoIs {
	  regex = 1
	  algorithm = HLT_PassInput
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Muons {
 	output = HLT/TRHLT/Muons

	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_MuonsRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist MuonsRoIs {
	  regex = 1
	  algorithm = HLT_PassInput
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }

       dir Taus {
 	output = HLT/TRHLT/Taus
	hist HLT.*P[ST] {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist HLT_TausRAW {
	  regex = 1
	  algorithm = HLT_PassInput
	}
	hist TausRoIs {
	  regex = 1
	  algorithm = HLT_PassInput
##	  algorithm = HLT_Histogram_Not_Empty&GatherData
	}
       }


   }
}


##############
# Algorithms
##############

compositeAlgorithm HLT_Histogram_Not_Empty&GatherData {
  subalgs = GatherData,Histogram_Not_Empty
  libnames = libdqm_algorithms.so
}
algorithm HLT_Histogram_Not_Empty&GatherData {
  name = HLT_Histogram_Not_Empty&GatherData
}
algorithm HLT_Histogram_Not_Empty_with_Ref&GatherData {
  name = HLT_Histogram_Not_Empty&GatherData
  #reference = CentrallyManagedReferences
  reference = stream=physics_Main:CentrallyManagedReferences_TriggerMain;CentrallyManagedReferences_Trigger
}
algorithm HLT_PassInput {
  libname = libdqm_algorithms.so
  name = PassInput
}

algorithm HLT_Histogram_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Empty
}

###############
# Thresholds
###############
