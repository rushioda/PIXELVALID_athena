# **********************************************************************
# $Id: heavyions_run.config 786284 2016-11-24 12:52:32Z cheny $
# **********************************************************************

#######################
# HLTmuon
#######################

#######################
# References
#######################

# reference CentrallyManagedReferences {
#    file = ./data.00209254.TRMUO_exp.root
#    path = run_209254
#    name = same_name
# }

#reference HLTmuonShiftES20thr_Ref {
#   location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
#   file = MuonSliceOfflineReference_ES20thr_20110824.root
#   path = run_180636
#   name = same_name
#}

#reference HLTmuonShift2012thr_HI_Ref {
#  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
#  file = MuonSliceOfflineReference_2015HIthr_20151104.root 
  #file = /afs/cern.ch/user/c/cheny/public/MuonSliceOfflineReference_2015HIthr_20151104.root
#  path = run_999999
#  name = same_name
#}

#######################
# Output
#######################

output top_level {
  algorithm = TRMUO_WorstCaseSummary
#tomoe added 2011.1.22
  output HLT {
    output TRMUO {
#Shift
      output Shift {
        algorithm = TRMUO_WorstCaseSummary
        output ES_muChain1 {
          algorithm = TRMUO_WorstCaseSummary
        }
	output ES_muChain2 {
          algorithm = TRMUO_WorstCaseSummary
        }
        output ES_muChainMSonly1 {
          algorithm = TRMUO_WorstCaseSummary
	}
        output muChainEFFS1 {
          algorithm = TRMUO_WorstCaseSummary
        }
        output Etaphi {
          algorithm = TRMUO_WorstCaseSummary
        }
	output JpsiTP {
	  algorithm = TRMUO_WorstCaseSummary
        }
      }
#Expert
      output Expert {
        algorithm = TRMUO_AlwaysGreenSummary

	output etaphi {
	  algorithm = TRMUO_SimpleSummary
        }

        output L2MuonSA {
          algorithm = TRMUO_WorstCaseSummary
        }
        output muComb {
          algorithm = TRMUO_WorstCaseSummary
        }
        output TileMu {
          algorithm = TRMUO_WorstCaseSummary
        }
        output MuonEF {
          algorithm = TRMUO_WorstCaseSummary
        }
        output L2MuonSA_forID {
          algorithm = TRMUO_WorstCaseSummary
        }
	output ES_muChain1 {
          algorithm = TRMUO_WorstCaseSummary
          output idtrk {
            algorithm = TRMUO_SimpleSummary
            output wrtUpstream {
              algorithm = TRMUO_SimpleSummary
            }
            output wrtOffline {
              algorithm = TRMUO_SimpleSummary
            }
          }
        }
        output muChain1 {
          algorithm = TRMUO_WorstCaseSummary
          output wrtOffline {
            algorithm = TRMUO_SimpleSummary
            output TakenByMSonly {
              algorithm = TRMUO_SimpleSummary
            }
          }
          output wrtUpstream {
            algorithm = TRMUO_SimpleSummary
            output TakenByMSonly {
              algorithm = TRMUO_SimpleSummary
            }
          }
          output etaphi {
            algorithm = TRMUO_SimpleSummary
          }
          output muonType {
            algorithm = TRMUO_SimpleSummary
          }
        }

        output ES_muChain2 {
          algorithm = TRMUO_WorstCaseSummary
          output idtrk {
            algorithm = TRMUO_SimpleSummary
            output wrtUpstream {
              algorithm = TRMUO_SimpleSummary
            }
            output wrtOffline {
              algorithm = TRMUO_SimpleSummary
            }
          }
        }
        output muChain2 {
          algorithm = TRMUO_WorstCaseSummary
          output wrtOffline {
            algorithm = TRMUO_SimpleSummary
            output TakenByMSonly {
              algorithm = TRMUO_SimpleSummary
            }
          }
          output wrtUpstream {
            algorithm = TRMUO_SimpleSummary
            output TakenByMSonly {
              algorithm = TRMUO_SimpleSummary
            }
          }
          output etaphi {
            algorithm = TRMUO_SimpleSummary
          }
          output muonType {
            algorithm = TRMUO_SimpleSummary
          }
        }
        output ES_muChainMSonly1 {
          algorithm = TRMUO_WorstCaseSummary
          output muCombTag {
            algorithm = TRMUO_SimpleSummary
            output wrtUpstream {
              algorithm = TRMUO_SimpleSummary
            }
            output wrtOffline {
              algorithm = TRMUO_SimpleSummary
            }
          }
        }
        output muChainMSonly1 {
          algorithm = TRMUO_WorstCaseSummary
          output wrtOffline {
            algorithm = TRMUO_SimpleSummary
          }
          output wrtUpstream {
            algorithm = TRMUO_SimpleSummary
          }
          output etaphi {
            algorithm = TRMUO_SimpleSummary
          }
        }
        output muChainEFFS1 {
          algorithm = TRMUO_WorstCaseSummary
        }

        output JpsiTP {
          algorithm = TRMUO_WorstCaseSummary

          output muChain1 {
            algorithm = TRMUO_SimpleSummary
            weight = 0
            output L1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EF {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2wrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
          }

          output muChain2 {
            algorithm = TRMUO_SimpleSummary
            weight = 0
            output L1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EF {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2wrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
          }
          output muChainMSonly1 {
            algorithm = TRMUO_SimpleSummary
            weight = 0
            output L1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EF {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output L2wrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL1 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
            output EFwrtL2 {
              algorithm = TRMUO_SimpleSummary
              weight = 0
            }
          }

        }
      }
    }
  }
}

#######################
# Histogram Assessments
#######################

dir HLT {
  algorithm = HLT_Histogram_Not_Empty&GatherData

  dir MuonMon {
    algorithm = Muon_Bins_LessThan_Threshold&GatherData
    output = HLT/TRMUO
# L2MuonSA
    dir L2MuonSA {
      hist L2MuonSA_MDT_Mid_residual_barrel {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = alg_L2MuonSA_residual_barrel
        weight = 0.0
      }
      hist L2MuonSA_MDT_Mid_residual_endcap {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = alg_L2MuonSA_residual_endcap
        weight = 0.0
      }
      hist L2MuonSA_eta_vs_phi {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = alg_eta_vs_phi
      }
      hist L2MuonSA_eta_vs_phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
      }
      hist L2MuonSA_proc_flow {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_pt {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_eta {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_phi {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_phi_barrel {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_phi_barrel@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_phi_endcap {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_phi_endcap@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_MDT_Mid_residual_barrel_OffMatch {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_MDT_Mid_residual_endcap_OffMatch {
        output = HLT/TRMUO/Expert/L2MuonSA
        algorithm = TRMUO_GatherData
      }
# L2MuonSA for ID
      hist L2MuonSA_forID_dR_toRecMuonCB_mu6 {
        output = HLT/TRMUO/Expert/L2MuonSA_forID
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_forID_deta_vs_eta_toRecMuonCB_mu6 {
        output = HLT/TRMUO/Expert/L2MuonSA_forID
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_forID_dphi_vs_eta_toRecMuonCB_mu6 {
        output = HLT/TRMUO/Expert/L2MuonSA_forID
        algorithm = TRMUO_GatherData
      }

    }
# muComb
    dir muComb {
      hist muComb_ptratio_toMF {
        output = HLT/TRMUO/Expert/muComb
        algorithm = alg_muComb_ptratio
        weight = 0.0
      }
      hist muComb_eta_vs_phi {
        output = HLT/TRMUO/Expert/muComb
        algorithm = alg_eta_vs_phi
      }
      hist muComb_eta_vs_phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muComb_dR_toMF {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist muComb_pt {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist muComb_eta {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist muComb_phi {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist muComb_eta_vs_phi_MCmatching_success {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist muComb_eta_vs_phi_OFFmatching_failure {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
      hist L2MuonSA_eta_vs_phi_MCmatching_failure {
        output = HLT/TRMUO/Expert/muComb
        algorithm = TRMUO_GatherData
      }
    }
# TileMu
    dir TileMu {
      hist TileMu_Ene {
        output = HLT/TRMUO/Expert/TileMu
        algorithm = TRMUO_GatherData
        weight = 0.0
      }
      hist TileMu_Eta_Phi {
        output = HLT/TRMUO/Expert/TileMu
        algorithm = TRMUO_GatherData
      }
      hist TileMu_N {
        output = HLT/TRMUO/Expert/TileMu
        algorithm = TRMUO_GatherData
        display = LogY
      }
    }
# MuonEF
    dir MuonEF {
      hist EFMS_eta_vs_phi {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = alg_eta_vs_phi
      }
      hist EFSA_eta_vs_phi {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = alg_eta_vs_phi
      }
      hist EFCB_eta_vs_phi {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = alg_eta_vs_phi
      }
      hist EFCB_eta_vs_phi@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
      }
      hist EFMS_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
        weight = 0.0
      }
      hist EFSA_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
        weight = 0.0
      }
      hist EFCB_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
        weight = 0.0
      }
      hist EFMS_signed_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
      }
      hist EFSA_signed_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
      }
      hist EFCB_signed_pt {
        output = HLT/TRMUO/Expert/MuonEF
        algorithm = TRMUO_GatherData
      }
    }
#Efficiency
    dir Efficiency {

#====
### ES mu10
# top level
      hist muChain1_highpt_effsummary_by_ESid {
        output = HLT/TRMUO/Expert/ES_muChain1
        algorithm = TRMUO_GatherDataNoRef
	##description = check history efficiencies <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CEF+algorithm&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">EF algorithm</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CMuComb&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png" >MuComb</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CL2MuonSA&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">L2MuonSA</a>
        ## need to put reference and compare!
      }
      hist muChain1_highpt_effsummary_by_ESid@shifter {
        output = HLT/TRMUO/Shift/ES_muChain1
        algorithm = effalgmin_3bins
        description = muChain1 corresponds to chain HLT_mu15_L1MU10. Shifters could click on the link (BinContentDump) on bottom right to see the history efficiencies for each bin.
	#description = check history efficiencies <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CEF+algorithm&error=BinContentDump%7CEF+algorithmError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">EF algorithm</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CMuComb&error=BinContentDump%7CMuCombError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png" >MuComb</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain1%2Fmu8_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CL2MuonSA&error=BinContentDump%7CL2MuonSAError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">L2MuonSA</a>
        ## need to put reference and compare!
      }

# ESid/wrtUpstream
      hist muChain1_ESid_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_ESid_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_ESid_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
      hist muChain1_ESid_L2MuonSA_Turn_On_Curve_wrt_L1_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain1
        algorithm = TRMUO_fermi_fit_mu10_ESid_L2MuonSA_upstream_Fit
      }
      hist muChain1_ESid_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain1
        algorithm = TRMUO_fermi_fit_mu10_ESid_muComb_upstream_Fit
      }
      hist muChain1_ESid_EFmuon_Turn_On_Curve_wrt_MuComb_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain1
        algorithm = TRMUO_fermi_fit_mu10_ESid_MuonEFCB_upstream_Fit
      }
# ESid/wrtOffline
      hist muChain1_ESid_L1_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_Fit
      }
      hist muChain1_ESid_L1_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_barrel_Fit
      }
      hist muChain1_ESid_L1_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_endcap_Fit
      }
      hist muChain1_ESid_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_ESid_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_ESid_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain1/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }

### mu10 (all ES and bulk)
# top level histograms
      hist muChain1_highptL1plateau_wrtOffline {
        output = HLT/TRMUO/Expert/muChain1
        algorithm = TRMUO_GatherDataNoRef
	description = the L1 item for muChain1 (HLT_mu15_L1MU10) is L1MU10. For express stream, efficiencies measured with Jpsi T&P method are biased due to stream prescales, thus significantly larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+30-100+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Barrel 30-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+30-100+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Endcap 30-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+30-100+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Barrel 30-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+30-100+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Endcap 30-100 GeV Z T&P</a>
        ## need to put reference and compare!
      }
      hist muChain1_highptL1plateau_wrtOffline@shifter {
        output = HLT/TRMUO/Shift/JpsiTP
        algorithm = effalgmin_3bins
	description = the L1 item for muChain1 (HLT_mu15_L1MU10) is L1MU10. For express stream, efficiencies measured with Jpsi T&P method are biased due to stream prescales, thus significantly larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+30-100+GeV+Z+T%26P&error=BinContentDump%7CBarrel+30-100+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.55&high_y=1.01&outputtype=png">Barrel 30-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+30-100+GeV+Z+T%26P&error=BinContentDump%7CEndcap+30-100+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=1.01&outputtype=png">Endcap 30-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+30-100+GeV+Z+T%26P&error=BinContentDump%7CBarrel+30-100+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.55&high_y=0.80&outputtype=png">Barrel 30-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highptL1plateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+30-100+GeV+Z+T%26P&error=BinContentDump%7CEndcap+30-100+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=0.95&outputtype=png">Endcap 30-100 GeV Z T&P</a>
        ## need to put reference and compare!
      }
      hist muChain1_highpt3bins_effwrtL1 {
        output = HLT/TRMUO/Expert/muChain1
        algorithm = TRMUO_GatherDataNoRef
	description = muChain1 corresponds to chain HLT_mu15_L1MU10. For express stream, efficiencies measured with Z T&P method are biased due to stream prescales, thus expected to be larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a>
        ## need to put reference and compare!
      }
      hist muChain1_highpt3bins_effwrtL1@shifter {
        output = HLT/TRMUO/Shift/JpsiTP
        algorithm = effalgmin_2bins
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu8_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a>
        ## need to put reference and compare!
      }

# etaphi: in the etaphi2d section

# muonType: in the etaphi2d section

# wrtUpstream
      hist muChain1_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
      hist muChain1_L2MuonSA_Turn_On_Curve_wrt_L1_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MuComb_Turn_On_Curve_wrt_L2MuonSA_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_EFmuon_Turn_On_Curve_wrt_MuComb_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
      hist muChain1_L2MuonSA_Turn_On_Curve_wrt_L1_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MuComb_Turn_On_Curve_wrt_L2MuonSA_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_EFmuon_Turn_On_Curve_wrt_MuComb_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
# wrtUpstream/TakenByMSonly
      hist muChain1_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
      hist muChain1_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }
      hist muChain1_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit
      }
      hist muChain1_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_upstream_Fit
      }
      hist muChain1_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit
      }

# wrtOffline
      hist muChain1_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }
      hist muChain1_L2MuonSA_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MuComb_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_EFmuon_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }
      hist muChain1_L2MuonSA_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MuComb_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_EFmuon_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }
# wrtOffline/TakenByMSonly
      hist muChain1_MSb_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MSb_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_MSb_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }
      hist muChain1_MSb_L2MuonSA_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MSb_MuComb_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_MSb_EFmuon_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }
      hist muChain1_MSb_L2MuonSA_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_L2MuonSA_Fit
      }
      hist muChain1_MSb_MuComb_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_muComb_Fit
      }
      hist muChain1_MSb_EFmuon_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain1/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu10_MuonEFCB_Fit
      }

#mu10 end
#====

#====
### ES mu14
# top level
      hist muChain2_highpt_effsummary_by_ESid {
        output = HLT/TRMUO/Expert/ES_muChain2
        algorithm = TRMUO_GatherDataNoRef
        description = muChain2 corresponds to chain HLT_mu14. Shifters could click on the link (BinContentDump) on bottom right to see the history efficiencies for each bin. 
	#description = check history efficiencies <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CEF+algorithm&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">EF algorithm</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CMuComb&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png" >MuComb</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CL2MuonSA&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">L2MuonSA</a>
        ## need to put reference and compare!
      }
      hist muChain2_highpt_effsummary_by_ESid@shifter {
        output = HLT/TRMUO/Shift/ES_muChain2
        algorithm = effalgmin_3bins
        description = muChain2 corresponds to chain HLT_mu14. Shifters could click on the link (BinContentDump) on bottom right to see the history efficiencies for each bin. 
#	description = check history efficiencies <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CEF+algorithm&error=BinContentDump%7CEF+algorithmError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">EF algorithm</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CMuComb&error=BinContentDump%7CMuCombError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png" >MuComb</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FES_muChain2%2Fmu6_highpt_effsummary_by_ESid%40shifter&result=BinContentDump%7CL2MuonSA&error=BinContentDump%7CL2MuonSAError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.85&high_y=1.05&outputtype=png">L2MuonSA</a>
        ## need to put reference and compare!
      }

# ESid/wrtUpstream
      hist muChain2_ESid_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_ESid_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_ESid_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
      hist muChain2_ESid_L2MuonSA_Turn_On_Curve_wrt_L1_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain2
        algorithm = TRMUO_fermi_fit_mu14_ESid_L2MuonSA_upstream_Fit
      }
      hist muChain2_ESid_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain2
        algorithm = TRMUO_fermi_fit_mu14_ESid_muComb_upstream_Fit
      }
      hist muChain2_ESid_EFmuon_Turn_On_Curve_wrt_MuComb_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChain2
        algorithm = TRMUO_fermi_fit_mu14_ESid_MuonEFCB_upstream_Fit
      }
# ESid/wrtOffline
      hist muChain2_ESid_L1_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_Fit
      }
      hist muChain2_ESid_L1_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_barrel_Fit
      }
      hist muChain2_ESid_L1_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_endcap_Fit
      }
      hist muChain2_ESid_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_ESid_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_ESid_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/ES_muChain2/idtrk/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }

### mu14 (all ES and bulk)
# top level histograms
      hist muChain2_highptL1plateau_wrtOffline {
        output = HLT/TRMUO/Expert/muChain2
        algorithm = TRMUO_GatherDataNoRef
        ## need to put reference and compare!
      }
      hist muChain2_highpt3bins_effwrtL1 {
        output = HLT/TRMUO/Expert/muChain2
        algorithm = TRMUO_GatherDataNoRef
	description = muChain2 corresponds to chain HLT_mu14. For express stream, efficiencies measured with Jpsi T&P method are biased due to stream prescales, thus expected to be larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C100-300+GeV+MSonly_barrel-tagged&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">100-300 GeV MSonly_barrel-tagged</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C100-300+GeV+MSonly_barrel-tagged&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">100-300 GeV MSonly_barrel-tagged</a>
        ## need to put reference and compare!
      }
      hist muChain2_highpt3bins_effwrtL1@shifter {
        output = HLT/TRMUO/Shift/JpsiTP
        algorithm = effalgmin_2bins
	description = muChain2 corresponds to chain HLT_mu14. For express stream, efficiencies measured with Jpsi T&P method are biased due to stream prescales, thus expected to be larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=0.90&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.01&outputtype=png">50-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C100-300+GeV+MSonly_barrel-tagged&error=BinContentDump%7C100-300+GeV+MSonly_barrel-taggedError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.01&outputtype=png">100-300 GeV MSonly_barrel-tagged</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=0.90&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.01&outputtype=png">50-100 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu6_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C100-300+GeV+MSonly_barrel-tagged&error=BinContentDump%7C100-300+GeV+MSonly_barrel-taggedError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.90&high_y=1.01&outputtype=png">100-300 GeV MSonly_barrel-tagged</a>
        ## need to put reference and compare!
      }

# etaphi: in the etaphi2d section

# muonType: in the etaphi2d section

# wrtUpstream
      hist muChain2_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
      hist muChain2_L2MuonSA_Turn_On_Curve_wrt_L1_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MuComb_Turn_On_Curve_wrt_L2MuonSA_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_EFmuon_Turn_On_Curve_wrt_MuComb_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
      hist muChain2_L2MuonSA_Turn_On_Curve_wrt_L1_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MuComb_Turn_On_Curve_wrt_L2MuonSA_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_EFmuon_Turn_On_Curve_wrt_MuComb_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
# wrtUpstream/TakenByMSonly
      hist muChain2_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
      hist muChain2_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }
      hist muChain2_MSb_L2MuonSA_Turn_On_Curve_wrt_L1_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit
      }
      hist muChain2_MSb_MuComb_Turn_On_Curve_wrt_L2MuonSA_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_upstream_Fit
      }
      hist muChain2_MSb_EFmuon_Turn_On_Curve_wrt_MuComb_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtUpstream/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit
      }

# wrtOffline
      hist muChain2_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }
      hist muChain2_L2MuonSA_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MuComb_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_EFmuon_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }
      hist muChain2_L2MuonSA_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MuComb_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_EFmuon_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }
# wrtOffline/TakenByMSonly
      hist muChain2_MSb_L2MuonSA_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MSb_MuComb_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_MSb_EFmuon_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }
      hist muChain2_MSb_L2MuonSA_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MSb_MuComb_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_MSb_EFmuon_Barrel_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }
      hist muChain2_MSb_L2MuonSA_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_L2MuonSA_Fit
      }
      hist muChain2_MSb_MuComb_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_muComb_Fit
      }
      hist muChain2_MSb_EFmuon_Endcap_Turn_On_Curve_wrt_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChain2/wrtOffline/TakenByMSonly
        algorithm = TRMUO_fermi_fit_mu14_MuonEFCB_Fit
      }

#mu14 end
#====



#----
### ES mu15_MSonly
# top level

      hist muChainMSonly1_highpt_effsummary_by_EStag {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1
        algorithm = TRMUO_GatherDataNoRef
      }
      hist muChainMSonly1_highpt_effsummary_by_EStag@shifter {
        output = HLT/TRMUO/Shift/ES_muChainMSonly1
        algorithm = effalgmin_2bins
      }
# EStag/wrtUpstream
      hist muChainMSonly1_EStag_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit
      }
      hist muChainMSonly1_EStag_MuonEFSA_Turn_On_Curve_wrt_L2MuonSA_Fit {
      	output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtUpstream
      	algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit
      }
      hist muChainMSonly1_EStag_L2MuonSA_Turn_On_Curve_wrt_L1_Fit@shifter {
        output = HLT/TRMUO/Shift/ES_muChainMSonly1
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit
        description = muChainMSonly1 corresponds to chain HLT_mu15_msonly.
      }
      hist muChainMSonly1_EStag_MuonEFSA_Turn_On_Curve_wrt_L2MuonSA_Fit@shifter {
      	output = HLT/TRMUO/Shift/ES_muChainMSonly1
      	algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit
      	description = muChainMSonly1 corresponds to chain HLT_mu15_msonly.
      }
# EStag/wrtOffline
      hist muChainMSonly1_EStag_L1_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_Fit
      }
      hist muChainMSonly1_EStag_L1_Barrel_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_barrel_Fit
      }
      hist muChainMSonly1_EStag_L1_Endcap_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtOffline
        algorithm = TRMUO_fermi_fit_L1MU0_endcap_Fit
      }
      hist muChainMSonly1_EStag_L2MuonSA_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_Fit
      }
      hist muChainMSonly1_EStag_MuonEFSA_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/ES_muChainMSonly1/muCombTag/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_Fit
      }


### mu15_MSonly (all ES and bulk)
# top level histograms
      hist muChainMSonly1_highpt3bins_effwrtL1 {
        output = HLT/TRMUO/Expert/muChainMSonly1
        algorithm = TRMUO_GatherDataNoRef
	description = muChainMSonly1 corresponds to chain HLT_mu15_msonly. For express stream, efficiencies measured with Z T&P method are biased due to stream prescales, thus expected to be larger than reference. For physics stream, no such bias. Shifters should check the efficiencies carefully for physics stream.
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a>
        ## need to put reference and compare!
      }
#      hist mu10_MSonly_highpt3bins_effwrtL1@shifter {
#        output = HLT/TRMUO/Shift/ZTP
#        algorithm = effalgmin_2bins
#	description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C30-50+GeV+Z+T%26P&error=BinContentDump%7C30-50+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">30-50 GeV Z T&P</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2FZTP%2Fmu10_MSonly_highpt3bins_effwrtL1%40shifter&result=BinContentDump%7C50-100+GeV+Z+T%26P&error=BinContentDump%7C50-100+GeV+Z+T%26PError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201000&high_run=&low_y=0.75&high_y=1.05&outputtype=png">50-100 GeV Z T&P</a>
        ## need to put reference and compare!
#      }

# etaphi: in the etaphi2d section

# wrtUpstream
      hist muChainMSonly1_L2MuonSA_Turn_On_Curve_wrt_L1_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit
      }
      hist muChainMSonly1_MuonEFSA_Turn_On_Curve_wrt_L2MuonSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit
      }
      hist muChainMSonly1_L2MuonSA_Turn_On_Curve_wrt_L1_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit
      }
      hist muChainMSonly1_MuonEFSA_Turn_On_Curve_wrt_L2MuonSA_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit
      }
      hist muChainMSonly1_L2MuonSA_Turn_On_Curve_wrt_L1_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit
      }
      hist muChainMSonly1_MuonEFSA_Turn_On_Curve_wrt_L2MuonSA_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtUpstream
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit
      }

# wrtOffline
      hist muChainMSonly1_L2MuonSA_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_Fit
      }
      hist muChainMSonly1_MuonEFSA_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_Fit
      }
      hist muChainMSonly1_L2MuonSA_Barrel_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_Fit
      }
      hist muChainMSonly1_MuonEFSA_Barrel_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_Fit
      }
      hist muChainMSonly1_L2MuonSA_Endcap_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_Fit
      }
      hist muChainMSonly1_MuonEFSA_Endcap_Turn_On_Curve_wrt_MuidSA_Fit {
        output = HLT/TRMUO/Expert/muChainMSonly1/wrtOffline
        algorithm = TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_Fit
      }

#mu15_msonly end
#
#mu4_mu4noL1 start
      hist muChainEFFS_tagEFFSpre_Turn_On_Curve_wrt_probe_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChainEFFS1
        algorithm = TRMUO_fermi_fit_mu4_mu4noL1_Fit
      }

      hist muChainEFFS_tagEFFSpre_Turn_On_Curve_wrt_probe_MuidCB_Barrel_Fit {
        output = HLT/TRMUO/Expert/muChainEFFS1
        algorithm = TRMUO_fermi_fit_mu4_mu4noL1_Fit
      }

      hist muChainEFFS_tagEFFSpre_Turn_On_Curve_wrt_probe_MuidCB_Endcap_Fit {
        output = HLT/TRMUO/Expert/muChainEFFS1
        algorithm = TRMUO_fermi_fit_mu4_mu4noL1_Fit
      }

      hist muChainEFFS_EFplateau_wrtOffline {
        output = HLT/TRMUO/Expert/muChainEFFS1
        algorithm = effalgmin_2bins
      }

      hist EFFSpre_dimuonTP_Turn_On_Curve_wrt_probe_MuidCB_Fit {
        output = HLT/TRMUO/Expert/muChainEFFS1
        algorithm = TRMUO_fermi_fit_L1MU0_Fit
      }

##mu4_mu4noL1 end

#mu4_mu4noL1 for shifter start
      hist muChainEFFS_tagEFFSpre_Turn_On_Curve_wrt_probe_MuidCB_Fit@shifter {
        output = HLT/TRMUO/Shift/muChainEFFS1
        algorithm = TRMUO_fermi_fit_mu4_mu4noL1_Fit
	description = muChainEFFS1 corresponds to chain HLT_mu4_mu4noL1.
#	description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+10-100+GeV&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Barrel 10-100 GeV</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+10-100+GeV&error=&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Endcap 10-100 GeV</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+10-100+GeV&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Barrel 10-100 GeV</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+10-100+GeV&error=&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=-0.05&high_y=1.05&outputtype=png">Endcap 10-100 GeV</a>
      }

      hist muChainEFFS_EFplateau_wrtOffline@shifter {
        output = HLT/TRMUO/Shift/muChainEFFS1
        algorithm = effalgmin_2bins
	description = muChainEFFS corresponds to chain HLT_mu4_mu4noL1 
	#description = check history efficiencies: <br> express_express: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+10-100+GeV&error=BinContentDump%7CBarrel+10-100+GeVError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=0.90&high_y=1.01&outputtype=png">Barrel 10-100 GeV</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+10-100+GeV&error=BinContentDump%7CEndcap+10-100+GeVError&stream=express_express&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=0.90&high_y=1.01&outputtype=png">Endcap 10-100 GeV</a> <br> physics_Muons: <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CBarrel+10-100+GeV&error=BinContentDump%7CBarrel+10-100+GeVError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=0.90&high_y=1.01&outputtype=png">Barrel 10-100 GeV</a> <a href="https://atlasdqm.cern.ch/dqmfquery/query?histogram=HLT%2FTRMUO%2FShift%2F2mu2_EFFS_L1MU0%2F2mu2_EFFS_L1MU0_EFplateau_wrtOffline%40shifter&result=BinContentDump%7CEndcap+10-100+GeV&error=BinContentDump%7CEndcap+10-100+GeVError&stream=physics_Muons&period_type=run&source=tier0&proc_ver=1&low_run=201255&high_run=&low_y=0.90&high_y=1.01&outputtype=png">Endcap 10-100 GeV</a>
      }
#mu4_mu4noL1 for shifter end

    }    
#----


#etaphi2D Efficiency
    dir etaphi2D {

      hist L1RoI_etaphi {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
      }
#~~~~
## mu10/etaphi
      hist muChain1_L2MuonSA_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain1_L2MuonSA_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain1_L2MuonSA_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain1_MuComb_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain1_EFmuon_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
#      hist muChain1_L2MuonSA_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }
#      hist muChain1_MuComb_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }
#      hist muChain1_EFmuon_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }

## muChain1/muonType
      hist muChain1_EFMuonType_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
        ## need to develop algorithm!
      }
      hist muChain1_allEFMuons_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_allEFMuons_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_allEFMuons_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
#~~~~


#~~~~
## mu10/etaphi
      hist muChain1_L2MuonSA_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain1_L2MuonSA_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = TRMUO_GatherData
      }
#1D shifter for various checks
      hist muChain1_L2MuonSA_eta_wrt_MuidCB@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain1_L2MuonSA_phi_wrt_MuidCB@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain1_L2MuonSA_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain1_MuComb_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain1_EFmuon_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/etaphi
        algorithm = alg_eta_vs_phi
      }
# coarse 1d histos
      hist muChain1_L2MuonSA_etaphi_coarse1d_wrt_MuidCB {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
      }
# Shifter
#      hist muChain1_L2MuonSA_etaphi_coarse1d_wrt_MuidCB@Shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = coarse1dcomp_muChain1_L2MuonSA
#        display = TCanvas(900,490)
#        description = The histograms on this page appear to be not normalised, but it is normalised when they compare. For normalised comparison, please see the histogram next to this histogram in the parent directory. The criteria is to observe data points > 3 sigma below the reference. If such points are >=3, it gives yellow. >=10 is red. It requires minimum 200000 entries. This check is not expected to work all the times to find problems. If it gives red, please take investigate the 2d histograms, whether there is any hole or not, before flagging. 
#      }
# Shifter2
      hist muChain1_L2MuonSA_etaphi_coarse1d_wrt_MuidCB@Shifter2 {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
        description = Normalised version of the coarsely divided 2d histogram serialised in 1d.
     }

      hist muChain1_MuComb_etaphi_coarse1d_wrt_MuidCB {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
      }
      hist muChain1_EFmuon_etaphi_coarse1d_wrt_MuidCB {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
      }
      hist muChain1_L2MuonSA_etaphi_wrt_MuidCB@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
# TLine test
	display = TLine(-1.050,-2.880,-1.008,-2.822),TLine(-1.050,-2.822,-1.008,-2.880), TLine(-1.050,-2.814,-1.008,-2.757),TLine(-1.050,-2.757,-1.008,-2.814), TLine(-1.050,-2.749,-1.008,-2.691),TLine(-1.050,-2.691,-1.008,-2.749), TLine(-1.050,-2.683,-1.008,-2.626),TLine(-1.050,-2.626,-1.008,-2.683), TLine(-1.050,-2.094,-1.008,-2.037),TLine(-1.050,-2.037,-1.008,-2.094), TLine(-1.050,-2.029,-1.008,-1.971),TLine(-1.050,-1.971,-1.008,-2.029), TLine(-1.050,-1.963,-1.008,-1.906),TLine(-1.050,-1.906,-1.008,-1.963), TLine(-1.050,-1.898,-1.008,-1.841),TLine(-1.050,-1.841,-1.008,-1.898), TLine(-1.050,-1.309,-1.008,-1.252),TLine(-1.050,-1.252,-1.008,-1.309), TLine(-1.050,-1.244,-1.008,-1.186),TLine(-1.050,-1.186,-1.008,-1.244), TLine(-1.050,-1.178,-1.008,-1.121),TLine(-1.050,-1.121,-1.008,-1.178), TLine(-1.050,-1.113,-1.008,-1.055),TLine(-1.050,-1.055,-1.008,-1.113), TLine(-1.050,-0.524,-1.008,-0.466),TLine(-1.050,-0.466,-1.008,-0.524), TLine(-1.050,-0.458,-1.008,-0.401),TLine(-1.050,-0.401,-1.008,-0.458), TLine(-1.050,-0.393,-1.008,-0.335),TLine(-1.050,-0.335,-1.008,-0.393), TLine(-1.050,-0.327,-1.008,-0.270),TLine(-1.050,-0.270,-1.008,-0.327), TLine(-1.050, 0.262,-1.008, 0.319),TLine(-1.050, 0.319,-1.008, 0.262), TLine(-1.050, 0.327,-1.008, 0.385),TLine(-1.050, 0.385,-1.008, 0.327), TLine(-1.050, 0.393,-1.008, 0.450),TLine(-1.050, 0.450,-1.008, 0.393), TLine(-1.050, 0.458,-1.008, 0.516),TLine(-1.050, 0.516,-1.008, 0.458), TLine(-1.050, 1.047,-1.008, 1.105),TLine(-1.050, 1.105,-1.008, 1.047), TLine(-1.050, 1.113,-1.008, 1.170),TLine(-1.050, 1.170,-1.008, 1.113), TLine(-1.050, 1.178,-1.008, 1.236),TLine(-1.050, 1.236,-1.008, 1.178), TLine(-1.050, 1.244,-1.008, 1.301),TLine(-1.050, 1.301,-1.008, 1.244), TLine(-1.050, 1.309,-1.008, 1.366),TLine(-1.050, 1.366,-1.008, 1.309), TLine(-1.050, 1.833,-1.008, 1.890),TLine(-1.050, 1.890,-1.008, 1.833), TLine(-1.050, 1.898,-1.008, 1.955),TLine(-1.050, 1.955,-1.008, 1.898), TLine(-1.050, 1.963,-1.008, 2.021),TLine(-1.050, 2.021,-1.008, 1.963), TLine(-1.050, 2.029,-1.008, 2.086),TLine(-1.050, 2.086,-1.008, 2.029), TLine(-1.050, 2.618,-1.008, 2.675),TLine(-1.050, 2.675,-1.008, 2.618), TLine(-1.050, 2.683,-1.008, 2.741),TLine(-1.050, 2.741,-1.008, 2.683), TLine(-1.050, 2.749,-1.008, 2.806),TLine(-1.050, 2.806,-1.008, 2.749), TLine(-1.050, 2.814,-1.008, 2.872),TLine(-1.050, 2.872,-1.008, 2.814), TLine(-1.000,-2.094,-0.958,-2.037),TLine(-1.000,-2.037,-0.958,-2.094), TLine(-1.000,-2.029,-0.958,-1.971),TLine(-1.000,-1.971,-0.958,-2.029), TLine(-1.000,-1.963,-0.958,-1.906),TLine(-1.000,-1.906,-0.958,-1.963), TLine(-1.000,-1.898,-0.958,-1.841),TLine(-1.000,-1.841,-0.958,-1.898), TLine(-1.000,-1.309,-0.958,-1.252),TLine(-1.000,-1.252,-0.958,-1.309), TLine(-1.000,-1.244,-0.958,-1.186),TLine(-1.000,-1.186,-0.958,-1.244), TLine(-1.000,-1.178,-0.958,-1.121),TLine(-1.000,-1.121,-0.958,-1.178), TLine(-1.000,-1.113,-0.958,-1.055),TLine(-1.000,-1.055,-0.958,-1.113), TLine(-0.800,-2.094,-0.758,-2.037),TLine(-0.800,-2.037,-0.758,-2.094), TLine(-0.800,-2.029,-0.758,-1.971),TLine(-0.800,-1.971,-0.758,-2.029), TLine(-0.800,-1.963,-0.758,-1.906),TLine(-0.800,-1.906,-0.758,-1.963), TLine(-0.800,-1.898,-0.758,-1.841),TLine(-0.800,-1.841,-0.758,-1.898), TLine(-0.800,-1.833,-0.758,-1.775),TLine(-0.800,-1.775,-0.758,-1.833), TLine(-0.800,-1.767,-0.758,-1.710),TLine(-0.800,-1.710,-0.758,-1.767), TLine(-0.800,-1.702,-0.758,-1.644),TLine(-0.800,-1.644,-0.758,-1.702), TLine(-0.800,-1.636,-0.758,-1.579),TLine(-0.800,-1.579,-0.758,-1.636), TLine(-0.800,-1.571,-0.758,-1.513),TLine(-0.800,-1.513,-0.758,-1.571), TLine(-0.800,-1.505,-0.758,-1.448),TLine(-0.800,-1.448,-0.758,-1.505), TLine(-0.800,-1.440,-0.758,-1.382),TLine(-0.800,-1.382,-0.758,-1.440), TLine(-0.800,-1.374,-0.758,-1.317),TLine(-0.800,-1.317,-0.758,-1.374), TLine(-0.800,-1.309,-0.758,-1.252),TLine(-0.800,-1.252,-0.758,-1.309), TLine(-0.800,-1.244,-0.758,-1.186),TLine(-0.800,-1.186,-0.758,-1.244), TLine(-0.800,-1.178,-0.758,-1.121),TLine(-0.800,-1.121,-0.758,-1.178), TLine(-0.800,-1.113,-0.758,-1.055),TLine(-0.800,-1.055,-0.758,-1.113), TLine(-0.750,-2.094,-0.708,-2.037),TLine(-0.750,-2.037,-0.708,-2.094), TLine(-0.750,-2.029,-0.708,-1.971),TLine(-0.750,-1.971,-0.708,-2.029), TLine(-0.750,-1.963,-0.708,-1.906),TLine(-0.750,-1.906,-0.708,-1.963), TLine(-0.750,-1.898,-0.708,-1.841),TLine(-0.750,-1.841,-0.708,-1.898), TLine(-0.750,-1.833,-0.708,-1.775),TLine(-0.750,-1.775,-0.708,-1.833), TLine(-0.750,-1.767,-0.708,-1.710),TLine(-0.750,-1.710,-0.708,-1.767), TLine(-0.750,-1.702,-0.708,-1.644),TLine(-0.750,-1.644,-0.708,-1.702), TLine(-0.750,-1.636,-0.708,-1.579),TLine(-0.750,-1.579,-0.708,-1.636), TLine(-0.750,-1.571,-0.708,-1.513),TLine(-0.750,-1.513,-0.708,-1.571), TLine(-0.750,-1.505,-0.708,-1.448),TLine(-0.750,-1.448,-0.708,-1.505), TLine(-0.750,-1.440,-0.708,-1.382),TLine(-0.750,-1.382,-0.708,-1.440), TLine(-0.750,-1.374,-0.708,-1.317),TLine(-0.750,-1.317,-0.708,-1.374), TLine(-0.750,-1.309,-0.708,-1.252),TLine(-0.750,-1.252,-0.708,-1.309), TLine(-0.750,-1.244,-0.708,-1.186),TLine(-0.750,-1.186,-0.708,-1.244), TLine(-0.750,-1.178,-0.708,-1.121),TLine(-0.750,-1.121,-0.708,-1.178), TLine(-0.750,-1.113,-0.708,-1.055),TLine(-0.750,-1.055,-0.708,-1.113), TLine(-0.500,-2.094,-0.458,-2.037),TLine(-0.500,-2.037,-0.458,-2.094), TLine(-0.500,-2.029,-0.458,-1.971),TLine(-0.500,-1.971,-0.458,-2.029), TLine(-0.500,-1.963,-0.458,-1.906),TLine(-0.500,-1.906,-0.458,-1.963), TLine(-0.500,-1.898,-0.458,-1.841),TLine(-0.500,-1.841,-0.458,-1.898), TLine(-0.500,-1.309,-0.458,-1.252),TLine(-0.500,-1.252,-0.458,-1.309), TLine(-0.500,-1.244,-0.458,-1.186),TLine(-0.500,-1.186,-0.458,-1.244), TLine(-0.500,-1.178,-0.458,-1.121),TLine(-0.500,-1.121,-0.458,-1.178), TLine(-0.500,-1.113,-0.458,-1.055),TLine(-0.500,-1.055,-0.458,-1.113), TLine(-0.450,-2.094,-0.408,-2.037),TLine(-0.450,-2.037,-0.408,-2.094), TLine(-0.450,-2.029,-0.408,-1.971),TLine(-0.450,-1.971,-0.408,-2.029), TLine(-0.450,-1.963,-0.408,-1.906),TLine(-0.450,-1.906,-0.408,-1.963), TLine(-0.450,-1.898,-0.408,-1.841),TLine(-0.450,-1.841,-0.408,-1.898), TLine(-0.450,-1.309,-0.408,-1.252),TLine(-0.450,-1.252,-0.408,-1.309), TLine(-0.450,-1.244,-0.408,-1.186),TLine(-0.450,-1.186,-0.408,-1.244), TLine(-0.450,-1.178,-0.408,-1.121),TLine(-0.450,-1.121,-0.408,-1.178), TLine(-0.450,-1.113,-0.408,-1.055),TLine(-0.450,-1.055,-0.408,-1.113), TLine(-0.400,-2.094,-0.358,-2.037),TLine(-0.400,-2.037,-0.358,-2.094), TLine(-0.400,-2.029,-0.358,-1.971),TLine(-0.400,-1.971,-0.358,-2.029), TLine(-0.400,-1.963,-0.358,-1.906),TLine(-0.400,-1.906,-0.358,-1.963), TLine(-0.400,-1.898,-0.358,-1.841),TLine(-0.400,-1.841,-0.358,-1.898), TLine(-0.400,-1.309,-0.358,-1.252),TLine(-0.400,-1.252,-0.358,-1.309), TLine(-0.400,-1.244,-0.358,-1.186),TLine(-0.400,-1.186,-0.358,-1.244), TLine(-0.400,-1.178,-0.358,-1.121),TLine(-0.400,-1.121,-0.358,-1.178), TLine(-0.400,-1.113,-0.358,-1.055),TLine(-0.400,-1.055,-0.358,-1.113), TLine( 1.000,-2.880, 1.042,-2.822),TLine( 1.000,-2.822, 1.042,-2.880), TLine( 1.000,-2.814, 1.042,-2.757),TLine( 1.000,-2.757, 1.042,-2.814), TLine( 1.000,-2.749, 1.042,-2.691),TLine( 1.000,-2.691, 1.042,-2.749), TLine( 1.000,-2.683, 1.042,-2.626),TLine( 1.000,-2.626, 1.042,-2.683), TLine( 1.000,-2.094, 1.042,-2.037),TLine( 1.000,-2.037, 1.042,-2.094), TLine( 1.000,-2.029, 1.042,-1.971),TLine( 1.000,-1.971, 1.042,-2.029), TLine( 1.000,-1.963, 1.042,-1.906),TLine( 1.000,-1.906, 1.042,-1.963), TLine( 1.000,-1.898, 1.042,-1.841),TLine( 1.000,-1.841, 1.042,-1.898), TLine( 1.000,-1.309, 1.042,-1.252),TLine( 1.000,-1.252, 1.042,-1.309), TLine( 1.000,-1.244, 1.042,-1.186),TLine( 1.000,-1.186, 1.042,-1.244), TLine( 1.000,-1.178, 1.042,-1.121),TLine( 1.000,-1.121, 1.042,-1.178), TLine( 1.000,-1.113, 1.042,-1.055),TLine( 1.000,-1.055, 1.042,-1.113), TLine( 1.000,-0.524, 1.042,-0.466),TLine( 1.000,-0.466, 1.042,-0.524), TLine( 1.000,-0.458, 1.042,-0.401),TLine( 1.000,-0.401, 1.042,-0.458), TLine( 1.000,-0.393, 1.042,-0.335),TLine( 1.000,-0.335, 1.042,-0.393), TLine( 1.000,-0.327, 1.042,-0.270),TLine( 1.000,-0.270, 1.042,-0.327), TLine( 1.000, 0.262, 1.042, 0.319),TLine( 1.000, 0.319, 1.042, 0.262), TLine( 1.000, 0.327, 1.042, 0.385),TLine( 1.000, 0.385, 1.042, 0.327), TLine( 1.000, 0.393, 1.042, 0.450),TLine( 1.000, 0.450, 1.042, 0.393), TLine( 1.000, 0.458, 1.042, 0.516),TLine( 1.000, 0.516, 1.042, 0.458), TLine( 1.000, 1.047, 1.042, 1.105),TLine( 1.000, 1.105, 1.042, 1.047), TLine( 1.000, 1.113, 1.042, 1.170),TLine( 1.000, 1.170, 1.042, 1.113), TLine( 1.000, 1.178, 1.042, 1.236),TLine( 1.000, 1.236, 1.042, 1.178), TLine( 1.000, 1.244, 1.042, 1.301),TLine( 1.000, 1.301, 1.042, 1.244), TLine( 1.000, 1.309, 1.042, 1.366),TLine( 1.000, 1.366, 1.042, 1.309), TLine( 1.000, 1.833, 1.042, 1.890),TLine( 1.000, 1.890, 1.042, 1.833), TLine( 1.000, 1.898, 1.042, 1.955),TLine( 1.000, 1.955, 1.042, 1.898), TLine( 1.000, 1.963, 1.042, 2.021),TLine( 1.000, 2.021, 1.042, 1.963), TLine( 1.000, 2.029, 1.042, 2.086),TLine( 1.000, 2.086, 1.042, 2.029), TLine( 1.000, 2.618, 1.042, 2.675),TLine( 1.000, 2.675, 1.042, 2.618), TLine( 1.000, 2.683, 1.042, 2.741),TLine( 1.000, 2.741, 1.042, 2.683), TLine( 1.000, 2.749, 1.042, 2.806),TLine( 1.000, 2.806, 1.042, 2.749), TLine( 1.000, 2.814, 1.042, 2.872),TLine( 1.000, 2.872, 1.042, 2.814), TLine( 0.950,-2.094, 0.992,-2.037),TLine( 0.950,-2.037, 0.992,-2.094), TLine( 0.950,-2.029, 0.992,-1.971),TLine( 0.950,-1.971, 0.992,-2.029), TLine( 0.950,-1.963, 0.992,-1.906),TLine( 0.950,-1.906, 0.992,-1.963), TLine( 0.950,-1.898, 0.992,-1.841),TLine( 0.950,-1.841, 0.992,-1.898), TLine( 0.950,-1.309, 0.992,-1.252),TLine( 0.950,-1.252, 0.992,-1.309), TLine( 0.950,-1.244, 0.992,-1.186),TLine( 0.950,-1.186, 0.992,-1.244), TLine( 0.950,-1.178, 0.992,-1.121),TLine( 0.950,-1.121, 0.992,-1.178), TLine( 0.950,-1.113, 0.992,-1.055),TLine( 0.950,-1.055, 0.992,-1.113), TLine( 0.750,-2.094, 0.792,-2.037),TLine( 0.750,-2.037, 0.792,-2.094), TLine( 0.750,-2.029, 0.792,-1.971),TLine( 0.750,-1.971, 0.792,-2.029), TLine( 0.750,-1.963, 0.792,-1.906),TLine( 0.750,-1.906, 0.792,-1.963), TLine( 0.750,-1.898, 0.792,-1.841),TLine( 0.750,-1.841, 0.792,-1.898), TLine( 0.750,-1.833, 0.792,-1.775),TLine( 0.750,-1.775, 0.792,-1.833), TLine( 0.750,-1.767, 0.792,-1.710),TLine( 0.750,-1.710, 0.792,-1.767), TLine( 0.750,-1.702, 0.792,-1.644),TLine( 0.750,-1.644, 0.792,-1.702), TLine( 0.750,-1.636, 0.792,-1.579),TLine( 0.750,-1.579, 0.792,-1.636), TLine( 0.750,-1.571, 0.792,-1.513),TLine( 0.750,-1.513, 0.792,-1.571), TLine( 0.750,-1.505, 0.792,-1.448),TLine( 0.750,-1.448, 0.792,-1.505), TLine( 0.750,-1.440, 0.792,-1.382),TLine( 0.750,-1.382, 0.792,-1.440), TLine( 0.750,-1.374, 0.792,-1.317),TLine( 0.750,-1.317, 0.792,-1.374), TLine( 0.750,-1.309, 0.792,-1.252),TLine( 0.750,-1.252, 0.792,-1.309), TLine( 0.750,-1.244, 0.792,-1.186),TLine( 0.750,-1.186, 0.792,-1.244), TLine( 0.750,-1.178, 0.792,-1.121),TLine( 0.750,-1.121, 0.792,-1.178), TLine( 0.750,-1.113, 0.792,-1.055),TLine( 0.750,-1.055, 0.792,-1.113), TLine( 0.700,-2.094, 0.742,-2.037),TLine( 0.700,-2.037, 0.742,-2.094), TLine( 0.700,-2.029, 0.742,-1.971),TLine( 0.700,-1.971, 0.742,-2.029), TLine( 0.700,-1.963, 0.742,-1.906),TLine( 0.700,-1.906, 0.742,-1.963), TLine( 0.700,-1.898, 0.742,-1.841),TLine( 0.700,-1.841, 0.742,-1.898), TLine( 0.700,-1.833, 0.742,-1.775),TLine( 0.700,-1.775, 0.742,-1.833), TLine( 0.700,-1.767, 0.742,-1.710),TLine( 0.700,-1.710, 0.742,-1.767), TLine( 0.700,-1.702, 0.742,-1.644),TLine( 0.700,-1.644, 0.742,-1.702), TLine( 0.700,-1.636, 0.742,-1.579),TLine( 0.700,-1.579, 0.742,-1.636), TLine( 0.700,-1.571, 0.742,-1.513),TLine( 0.700,-1.513, 0.742,-1.571), TLine( 0.700,-1.505, 0.742,-1.448),TLine( 0.700,-1.448, 0.742,-1.505), TLine( 0.700,-1.440, 0.742,-1.382),TLine( 0.700,-1.382, 0.742,-1.440), TLine( 0.700,-1.374, 0.742,-1.317),TLine( 0.700,-1.317, 0.742,-1.374), TLine( 0.700,-1.309, 0.742,-1.252),TLine( 0.700,-1.252, 0.742,-1.309), TLine( 0.700,-1.244, 0.742,-1.186),TLine( 0.700,-1.186, 0.742,-1.244), TLine( 0.700,-1.178, 0.742,-1.121),TLine( 0.700,-1.121, 0.742,-1.178), TLine( 0.700,-1.113, 0.742,-1.055),TLine( 0.700,-1.055, 0.742,-1.113), TLine( 0.650,-1.178, 0.692,-1.121),TLine( 0.650,-1.121, 0.692,-1.178), TLine( 0.600,-1.178, 0.642,-1.121),TLine( 0.600,-1.121, 0.642,-1.178), TLine( 0.550,-1.178, 0.592,-1.121),TLine( 0.550,-1.121, 0.592,-1.178), TLine( 0.500,-1.178, 0.542,-1.121),TLine( 0.500,-1.121, 0.542,-1.178), TLine( 0.650,-1.113, 0.692,-1.055),TLine( 0.650,-1.055, 0.692,-1.113), TLine( 0.600,-1.113, 0.642,-1.055),TLine( 0.600,-1.055, 0.642,-1.113), TLine( 0.550,-1.113, 0.592,-1.055),TLine( 0.550,-1.055, 0.592,-1.113), TLine( 0.500,-1.113, 0.542,-1.055),TLine( 0.500,-1.055, 0.542,-1.113), TLine( 0.450,-2.094, 0.492,-2.037),TLine( 0.450,-2.037, 0.492,-2.094), TLine( 0.450,-2.029, 0.492,-1.971),TLine( 0.450,-1.971, 0.492,-2.029), TLine( 0.450,-1.963, 0.492,-1.906),TLine( 0.450,-1.906, 0.492,-1.963), TLine( 0.450,-1.898, 0.492,-1.841),TLine( 0.450,-1.841, 0.492,-1.898), TLine( 0.450,-1.309, 0.492,-1.252),TLine( 0.450,-1.252, 0.492,-1.309), TLine( 0.450,-1.244, 0.492,-1.186),TLine( 0.450,-1.186, 0.492,-1.244), TLine( 0.450,-1.178, 0.492,-1.121),TLine( 0.450,-1.121, 0.492,-1.178), TLine( 0.450,-1.113, 0.492,-1.055),TLine( 0.450,-1.055, 0.492,-1.113), TLine( 0.400,-2.094, 0.442,-2.037),TLine( 0.400,-2.037, 0.442,-2.094), TLine( 0.400,-2.029, 0.442,-1.971),TLine( 0.400,-1.971, 0.442,-2.029), TLine( 0.400,-1.963, 0.442,-1.906),TLine( 0.400,-1.906, 0.442,-1.963), TLine( 0.400,-1.898, 0.442,-1.841),TLine( 0.400,-1.841, 0.442,-1.898), TLine( 0.400,-1.309, 0.442,-1.252),TLine( 0.400,-1.252, 0.442,-1.309), TLine( 0.400,-1.244, 0.442,-1.186),TLine( 0.400,-1.186, 0.442,-1.244), TLine( 0.400,-1.178, 0.442,-1.121),TLine( 0.400,-1.121, 0.442,-1.178), TLine( 0.400,-1.113, 0.442,-1.055),TLine( 0.400,-1.055, 0.442,-1.113), TLine( 0.350,-2.094, 0.392,-2.037),TLine( 0.350,-2.037, 0.392,-2.094), TLine( 0.350,-2.029, 0.392,-1.971),TLine( 0.350,-1.971, 0.392,-2.029), TLine( 0.350,-1.963, 0.392,-1.906),TLine( 0.350,-1.906, 0.392,-1.963), TLine( 0.350,-1.898, 0.392,-1.841),TLine( 0.350,-1.841, 0.392,-1.898), TLine( 0.350,-1.309, 0.392,-1.252),TLine( 0.350,-1.252, 0.392,-1.309), TLine( 0.350,-1.244, 0.392,-1.186),TLine( 0.350,-1.186, 0.392,-1.244), TLine( 0.350,-1.178, 0.392,-1.121),TLine( 0.350,-1.121, 0.392,-1.178), TLine( 0.350,-1.113, 0.392,-1.055),TLine( 0.350,-1.055, 0.392,-1.113), TLine(-0.050,-3.142,-0.008,-3.084),TLine(-0.050,-3.084,-0.008,-3.142), TLine(-0.050,-3.076,-0.008,-3.019),TLine(-0.050,-3.019,-0.008,-3.076), TLine(-0.050,-3.011,-0.008,-2.953),TLine(-0.050,-2.953,-0.008,-3.011), TLine( 0.000,-3.142, 0.042,-3.084),TLine( 0.000,-3.084, 0.042,-3.142), TLine( 0.000,-3.076, 0.042,-3.019),TLine( 0.000,-3.019, 0.042,-3.076), TLine( 0.000,-3.011, 0.042,-2.953),TLine( 0.000,-2.953, 0.042,-3.011), TLine( 0.050,-3.142, 0.092,-3.084),TLine( 0.050,-3.084, 0.092,-3.142), TLine( 0.050,-3.076, 0.092,-3.019),TLine( 0.050,-3.019, 0.092,-3.076), TLine( 0.050,-3.011, 0.092,-2.953),TLine( 0.050,-2.953, 0.092,-3.011), TLine(-0.050,-2.553,-0.008,-2.495),TLine(-0.050,-2.495,-0.008,-2.553), TLine(-0.050,-2.487,-0.008,-2.430),TLine(-0.050,-2.430,-0.008,-2.487), TLine(-0.050,-2.422,-0.008,-2.364),TLine(-0.050,-2.364,-0.008,-2.422), TLine(-0.050,-2.356,-0.008,-2.299),TLine(-0.050,-2.299,-0.008,-2.356), TLine(-0.050,-2.291,-0.008,-2.233),TLine(-0.050,-2.233,-0.008,-2.291), TLine(-0.050,-2.225,-0.008,-2.168),TLine(-0.050,-2.168,-0.008,-2.225), TLine(-0.050,-2.160,-0.008,-2.102),TLine(-0.050,-2.102,-0.008,-2.160), TLine(-0.050,-2.094,-0.008,-2.037),TLine(-0.050,-2.037,-0.008,-2.094), TLine(-0.050,-2.029,-0.008,-1.971),TLine(-0.050,-1.971,-0.008,-2.029), TLine(-0.050,-1.963,-0.008,-1.906),TLine(-0.050,-1.906,-0.008,-1.963), TLine(-0.050,-1.898,-0.008,-1.841),TLine(-0.050,-1.841,-0.008,-1.898), TLine( 0.000,-2.553, 0.042,-2.495),TLine( 0.000,-2.495, 0.042,-2.553), TLine( 0.000,-2.487, 0.042,-2.430),TLine( 0.000,-2.430, 0.042,-2.487), TLine( 0.000,-2.422, 0.042,-2.364),TLine( 0.000,-2.364, 0.042,-2.422), TLine( 0.000,-2.356, 0.042,-2.299),TLine( 0.000,-2.299, 0.042,-2.356), TLine( 0.000,-2.291, 0.042,-2.233),TLine( 0.000,-2.233, 0.042,-2.291), TLine( 0.000,-2.225, 0.042,-2.168),TLine( 0.000,-2.168, 0.042,-2.225), TLine( 0.000,-2.160, 0.042,-2.102),TLine( 0.000,-2.102, 0.042,-2.160), TLine( 0.000,-2.094, 0.042,-2.037),TLine( 0.000,-2.037, 0.042,-2.094), TLine( 0.000,-2.029, 0.042,-1.971),TLine( 0.000,-1.971, 0.042,-2.029), TLine( 0.000,-1.963, 0.042,-1.906),TLine( 0.000,-1.906, 0.042,-1.963), TLine( 0.000,-1.898, 0.042,-1.841),TLine( 0.000,-1.841, 0.042,-1.898), TLine( 0.000,-1.833, 0.042,-1.775),TLine( 0.000,-1.775, 0.042,-1.833), TLine( 0.000,-1.767, 0.042,-1.710),TLine( 0.000,-1.710, 0.042,-1.767), TLine( 0.000,-1.702, 0.042,-1.644),TLine( 0.000,-1.644, 0.042,-1.702), TLine( 0.000,-1.636, 0.042,-1.579),TLine( 0.000,-1.579, 0.042,-1.636), TLine( 0.000,-1.571, 0.042,-1.513),TLine( 0.000,-1.513, 0.042,-1.571), TLine( 0.000,-1.505, 0.042,-1.448),TLine( 0.000,-1.448, 0.042,-1.505), TLine( 0.000,-1.440, 0.042,-1.382),TLine( 0.000,-1.382, 0.042,-1.440), TLine( 0.000,-1.374, 0.042,-1.317),TLine( 0.000,-1.317, 0.042,-1.374), TLine(-0.050,-1.309,-0.008,-1.252),TLine(-0.050,-1.252,-0.008,-1.309), TLine(-0.050,-1.244,-0.008,-1.186),TLine(-0.050,-1.186,-0.008,-1.244), TLine(-0.050,-1.178,-0.008,-1.121),TLine(-0.050,-1.121,-0.008,-1.178), TLine(-0.050,-1.113,-0.008,-1.055),TLine(-0.050,-1.055,-0.008,-1.113), TLine(-0.050,-1.047,-0.008,-0.990),TLine(-0.050,-0.990,-0.008,-1.047), TLine(-0.050,-0.982,-0.008,-0.924),TLine(-0.050,-0.924,-0.008,-0.982), TLine(-0.050,-0.916,-0.008,-0.859),TLine(-0.050,-0.859,-0.008,-0.916), TLine(-0.050,-0.851,-0.008,-0.793),TLine(-0.050,-0.793,-0.008,-0.851), TLine(-0.050,-0.785,-0.008,-0.728),TLine(-0.050,-0.728,-0.008,-0.785), TLine(-0.050,-0.720,-0.008,-0.662),TLine(-0.050,-0.662,-0.008,-0.720), TLine(-0.050,-0.654,-0.008,-0.597),TLine(-0.050,-0.597,-0.008,-0.654), TLine( 0.000,-1.309, 0.042,-1.252),TLine( 0.000,-1.252, 0.042,-1.309), TLine( 0.000,-1.244, 0.042,-1.186),TLine( 0.000,-1.186, 0.042,-1.244), TLine( 0.000,-1.178, 0.042,-1.121),TLine( 0.000,-1.121, 0.042,-1.178), TLine( 0.000,-1.113, 0.042,-1.055),TLine( 0.000,-1.055, 0.042,-1.113), TLine( 0.000,-1.047, 0.042,-0.990),TLine( 0.000,-0.990, 0.042,-1.047), TLine( 0.000,-0.982, 0.042,-0.924),TLine( 0.000,-0.924, 0.042,-0.982), TLine( 0.000,-0.916, 0.042,-0.859),TLine( 0.000,-0.859, 0.042,-0.916), TLine( 0.000,-0.851, 0.042,-0.793),TLine( 0.000,-0.793, 0.042,-0.851), TLine( 0.000,-0.785, 0.042,-0.728),TLine( 0.000,-0.728, 0.042,-0.785), TLine( 0.000,-0.720, 0.042,-0.662),TLine( 0.000,-0.662, 0.042,-0.720), TLine( 0.000,-0.654, 0.042,-0.597),TLine( 0.000,-0.597, 0.042,-0.654), TLine(-0.100,-0.196,-0.058,-0.139),TLine(-0.100,-0.139,-0.058,-0.196), TLine(-0.100,-0.131,-0.058,-0.073),TLine(-0.100,-0.073,-0.058,-0.131), TLine(-0.100,-0.065,-0.058,-0.008),TLine(-0.100,-0.008,-0.058,-0.065), TLine(-0.100, 0.000,-0.058, 0.057),TLine(-0.100, 0.057,-0.058, 0.000), TLine(-0.100, 0.065,-0.058, 0.123),TLine(-0.100, 0.123,-0.058, 0.065), TLine(-0.100, 0.131,-0.058, 0.188),TLine(-0.100, 0.188,-0.058, 0.131), TLine(-0.050,-0.196,-0.008,-0.139),TLine(-0.050,-0.139,-0.008,-0.196), TLine(-0.050,-0.131,-0.008,-0.073),TLine(-0.050,-0.073,-0.008,-0.131), TLine(-0.050,-0.065,-0.008,-0.008),TLine(-0.050,-0.008,-0.008,-0.065), TLine(-0.050, 0.000,-0.008, 0.057),TLine(-0.050, 0.057,-0.008, 0.000), TLine(-0.050, 0.065,-0.008, 0.123),TLine(-0.050, 0.123,-0.008, 0.065), TLine(-0.050, 0.131,-0.008, 0.188),TLine(-0.050, 0.188,-0.008, 0.131), TLine(-0.050, 0.589,-0.008, 0.646),TLine(-0.050, 0.646,-0.008, 0.589), TLine(-0.050, 0.654,-0.008, 0.712),TLine(-0.050, 0.712,-0.008, 0.654), TLine(-0.050, 0.720,-0.008, 0.777),TLine(-0.050, 0.777,-0.008, 0.720), TLine(-0.050, 0.785,-0.008, 0.843),TLine(-0.050, 0.843,-0.008, 0.785), TLine(-0.050, 0.851,-0.008, 0.908),TLine(-0.050, 0.908,-0.008, 0.851), TLine(-0.050, 0.916,-0.008, 0.974),TLine(-0.050, 0.974,-0.008, 0.916), TLine(-0.150, 1.374,-0.108, 1.432),TLine(-0.150, 1.432,-0.108, 1.374), TLine(-0.150, 1.440,-0.108, 1.497),TLine(-0.150, 1.497,-0.108, 1.440), TLine(-0.150, 1.505,-0.108, 1.563),TLine(-0.150, 1.563,-0.108, 1.505), TLine(-0.150, 1.571,-0.108, 1.628),TLine(-0.150, 1.628,-0.108, 1.571), TLine(-0.150, 1.636,-0.108, 1.694),TLine(-0.150, 1.694,-0.108, 1.636), TLine(-0.150, 1.702,-0.108, 1.759),TLine(-0.150, 1.759,-0.108, 1.702), TLine(-0.100, 1.374,-0.058, 1.432),TLine(-0.100, 1.432,-0.058, 1.374), TLine(-0.100, 1.440,-0.058, 1.497),TLine(-0.100, 1.497,-0.058, 1.440), TLine(-0.100, 1.505,-0.058, 1.563),TLine(-0.100, 1.563,-0.058, 1.505), TLine(-0.100, 1.571,-0.058, 1.628),TLine(-0.100, 1.628,-0.058, 1.571), TLine(-0.100, 1.636,-0.058, 1.694),TLine(-0.100, 1.694,-0.058, 1.636), TLine(-0.100, 1.702,-0.058, 1.759),TLine(-0.100, 1.759,-0.058, 1.702), TLine(-0.050, 1.374,-0.008, 1.432),TLine(-0.050, 1.432,-0.008, 1.374), TLine(-0.050, 1.440,-0.008, 1.497),TLine(-0.050, 1.497,-0.008, 1.440), TLine(-0.050, 1.505,-0.008, 1.563),TLine(-0.050, 1.563,-0.008, 1.505), TLine(-0.050, 1.571,-0.008, 1.628),TLine(-0.050, 1.628,-0.008, 1.571), TLine(-0.050, 1.636,-0.008, 1.694),TLine(-0.050, 1.694,-0.008, 1.636), TLine(-0.050, 1.702,-0.008, 1.759),TLine(-0.050, 1.759,-0.008, 1.702), TLine( 0.000, 1.374, 0.042, 1.432),TLine( 0.000, 1.432, 0.042, 1.374), TLine( 0.000, 1.440, 0.042, 1.497),TLine( 0.000, 1.497, 0.042, 1.440), TLine( 0.000, 1.505, 0.042, 1.563),TLine( 0.000, 1.563, 0.042, 1.505), TLine( 0.000, 1.571, 0.042, 1.628),TLine( 0.000, 1.628, 0.042, 1.571), TLine( 0.000, 1.636, 0.042, 1.694),TLine( 0.000, 1.694, 0.042, 1.636), TLine( 0.000, 1.702, 0.042, 1.759),TLine( 0.000, 1.759, 0.042, 1.702), TLine(-0.100, 2.160,-0.058, 2.217),TLine(-0.100, 2.217,-0.058, 2.160), TLine(-0.100, 2.225,-0.058, 2.283),TLine(-0.100, 2.283,-0.058, 2.225), TLine(-0.100, 2.291,-0.058, 2.348),TLine(-0.100, 2.348,-0.058, 2.291), TLine(-0.100, 2.356,-0.058, 2.414),TLine(-0.100, 2.414,-0.058, 2.356), TLine(-0.100, 2.422,-0.058, 2.479),TLine(-0.100, 2.479,-0.058, 2.422), TLine(-0.100, 2.487,-0.058, 2.545),TLine(-0.100, 2.545,-0.058, 2.487), TLine(-0.100, 2.553,-0.058, 2.610),TLine(-0.100, 2.610,-0.058, 2.553), TLine(-0.050, 2.160,-0.008, 2.217),TLine(-0.050, 2.217,-0.008, 2.160), TLine(-0.050, 2.225,-0.008, 2.283),TLine(-0.050, 2.283,-0.008, 2.225), TLine(-0.050, 2.291,-0.008, 2.348),TLine(-0.050, 2.348,-0.008, 2.291), TLine(-0.050, 2.356,-0.008, 2.414),TLine(-0.050, 2.414,-0.008, 2.356), TLine(-0.050, 2.422,-0.008, 2.479),TLine(-0.050, 2.479,-0.008, 2.422), TLine(-0.050, 2.487,-0.008, 2.545),TLine(-0.050, 2.545,-0.008, 2.487), TLine(-0.050, 2.553,-0.008, 2.610),TLine(-0.050, 2.610,-0.008, 2.553), TLine( 0.000, 2.160, 0.042, 2.217),TLine( 0.000, 2.217, 0.042, 2.160), TLine( 0.000, 2.225, 0.042, 2.283),TLine( 0.000, 2.283, 0.042, 2.225), TLine( 0.000, 2.291, 0.042, 2.348),TLine( 0.000, 2.348, 0.042, 2.291), TLine( 0.000, 2.356, 0.042, 2.414),TLine( 0.000, 2.414, 0.042, 2.356), TLine( 0.000, 2.422, 0.042, 2.479),TLine( 0.000, 2.479, 0.042, 2.422), TLine( 0.000, 2.487, 0.042, 2.545),TLine( 0.000, 2.545, 0.042, 2.487), TLine( 0.000, 2.553, 0.042, 2.610),TLine( 0.000, 2.610, 0.042, 2.553), TLine( 0.050, 2.160, 0.092, 2.217),TLine( 0.050, 2.217, 0.092, 2.160), TLine( 0.050, 2.225, 0.092, 2.283),TLine( 0.050, 2.283, 0.092, 2.225), TLine( 0.050, 2.291, 0.092, 2.348),TLine( 0.050, 2.348, 0.092, 2.291), TLine( 0.050, 2.356, 0.092, 2.414),TLine( 0.050, 2.414, 0.092, 2.356), TLine( 0.050, 2.422, 0.092, 2.479),TLine( 0.050, 2.479, 0.092, 2.422), TLine( 0.050, 2.487, 0.092, 2.545),TLine( 0.050, 2.545, 0.092, 2.487), TLine( 0.050, 2.553, 0.092, 2.610),TLine( 0.050, 2.610, 0.092, 2.553), TLine(-0.050, 2.618,-0.008, 2.675),TLine(-0.050, 2.675,-0.008, 2.618), TLine(-0.050, 2.683,-0.008, 2.741),TLine(-0.050, 2.741,-0.008, 2.683), TLine(-0.050, 2.749,-0.008, 2.806),TLine(-0.050, 2.806,-0.008, 2.749), TLine(-0.050, 2.814,-0.008, 2.872),TLine(-0.050, 2.872,-0.008, 2.814), TLine(-0.050, 2.880,-0.008, 2.937),TLine(-0.050, 2.937,-0.008, 2.880), TLine(-0.050, 2.945,-0.008, 3.003),TLine(-0.050, 3.003,-0.008, 2.945), TLine(-0.050, 3.011,-0.008, 3.068),TLine(-0.050, 3.068,-0.008, 3.011), TLine(-0.050, 3.076,-0.008, 3.134),TLine(-0.050, 3.134,-0.008, 3.076), TLine( 0.000, 2.618, 0.042, 2.675),TLine( 0.000, 2.675, 0.042, 2.618), TLine( 0.000, 2.683, 0.042, 2.741),TLine( 0.000, 2.741, 0.042, 2.683), TLine( 0.000, 2.749, 0.042, 2.806),TLine( 0.000, 2.806, 0.042, 2.749), TLine( 0.000, 2.814, 0.042, 2.872),TLine( 0.000, 2.872, 0.042, 2.814), TLine( 0.000, 2.880, 0.042, 2.937),TLine( 0.000, 2.937, 0.042, 2.880), TLine( 0.000, 2.945, 0.042, 3.003),TLine( 0.000, 3.003, 0.042, 2.945), TLine( 0.000, 3.011, 0.042, 3.068),TLine( 0.000, 3.068, 0.042, 3.011), TLine( 0.000, 3.076, 0.042, 3.134),TLine( 0.000, 3.134, 0.042, 3.076), TLine( 0.050, 2.945, 0.092, 3.003),TLine( 0.050, 3.003, 0.092, 2.945), TLine( 0.050, 3.011, 0.092, 3.068),TLine( 0.050, 3.068, 0.092, 3.011), TLine( 0.050, 3.076, 0.092, 3.134),TLine( 0.050, 3.134, 0.092, 3.076), TLine(-2.750,-3.207,-2.708,-3.150),TLine(-2.750,-3.150,-2.708,-3.207)
      }
      hist muChain1_MuComb_etaphi_wrt_MuidCB@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
	display = TLine(-1.050,-2.880,-1.008,-2.822),TLine(-1.050,-2.822,-1.008,-2.880), TLine(-1.050,-2.814,-1.008,-2.757),TLine(-1.050,-2.757,-1.008,-2.814), TLine(-1.050,-2.749,-1.008,-2.691),TLine(-1.050,-2.691,-1.008,-2.749), TLine(-1.050,-2.683,-1.008,-2.626),TLine(-1.050,-2.626,-1.008,-2.683), TLine(-1.050,-2.094,-1.008,-2.037),TLine(-1.050,-2.037,-1.008,-2.094), TLine(-1.050,-2.029,-1.008,-1.971),TLine(-1.050,-1.971,-1.008,-2.029), TLine(-1.050,-1.963,-1.008,-1.906),TLine(-1.050,-1.906,-1.008,-1.963), TLine(-1.050,-1.898,-1.008,-1.841),TLine(-1.050,-1.841,-1.008,-1.898), TLine(-1.050,-1.309,-1.008,-1.252),TLine(-1.050,-1.252,-1.008,-1.309), TLine(-1.050,-1.244,-1.008,-1.186),TLine(-1.050,-1.186,-1.008,-1.244), TLine(-1.050,-1.178,-1.008,-1.121),TLine(-1.050,-1.121,-1.008,-1.178), TLine(-1.050,-1.113,-1.008,-1.055),TLine(-1.050,-1.055,-1.008,-1.113), TLine(-1.050,-0.524,-1.008,-0.466),TLine(-1.050,-0.466,-1.008,-0.524), TLine(-1.050,-0.458,-1.008,-0.401),TLine(-1.050,-0.401,-1.008,-0.458), TLine(-1.050,-0.393,-1.008,-0.335),TLine(-1.050,-0.335,-1.008,-0.393), TLine(-1.050,-0.327,-1.008,-0.270),TLine(-1.050,-0.270,-1.008,-0.327), TLine(-1.050, 0.262,-1.008, 0.319),TLine(-1.050, 0.319,-1.008, 0.262), TLine(-1.050, 0.327,-1.008, 0.385),TLine(-1.050, 0.385,-1.008, 0.327), TLine(-1.050, 0.393,-1.008, 0.450),TLine(-1.050, 0.450,-1.008, 0.393), TLine(-1.050, 0.458,-1.008, 0.516),TLine(-1.050, 0.516,-1.008, 0.458), TLine(-1.050, 1.047,-1.008, 1.105),TLine(-1.050, 1.105,-1.008, 1.047), TLine(-1.050, 1.113,-1.008, 1.170),TLine(-1.050, 1.170,-1.008, 1.113), TLine(-1.050, 1.178,-1.008, 1.236),TLine(-1.050, 1.236,-1.008, 1.178), TLine(-1.050, 1.244,-1.008, 1.301),TLine(-1.050, 1.301,-1.008, 1.244), TLine(-1.050, 1.309,-1.008, 1.366),TLine(-1.050, 1.366,-1.008, 1.309), TLine(-1.050, 1.833,-1.008, 1.890),TLine(-1.050, 1.890,-1.008, 1.833), TLine(-1.050, 1.898,-1.008, 1.955),TLine(-1.050, 1.955,-1.008, 1.898), TLine(-1.050, 1.963,-1.008, 2.021),TLine(-1.050, 2.021,-1.008, 1.963), TLine(-1.050, 2.029,-1.008, 2.086),TLine(-1.050, 2.086,-1.008, 2.029), TLine(-1.050, 2.618,-1.008, 2.675),TLine(-1.050, 2.675,-1.008, 2.618), TLine(-1.050, 2.683,-1.008, 2.741),TLine(-1.050, 2.741,-1.008, 2.683), TLine(-1.050, 2.749,-1.008, 2.806),TLine(-1.050, 2.806,-1.008, 2.749), TLine(-1.050, 2.814,-1.008, 2.872),TLine(-1.050, 2.872,-1.008, 2.814), TLine(-1.000,-2.094,-0.958,-2.037),TLine(-1.000,-2.037,-0.958,-2.094), TLine(-1.000,-2.029,-0.958,-1.971),TLine(-1.000,-1.971,-0.958,-2.029), TLine(-1.000,-1.963,-0.958,-1.906),TLine(-1.000,-1.906,-0.958,-1.963), TLine(-1.000,-1.898,-0.958,-1.841),TLine(-1.000,-1.841,-0.958,-1.898), TLine(-1.000,-1.309,-0.958,-1.252),TLine(-1.000,-1.252,-0.958,-1.309), TLine(-1.000,-1.244,-0.958,-1.186),TLine(-1.000,-1.186,-0.958,-1.244), TLine(-1.000,-1.178,-0.958,-1.121),TLine(-1.000,-1.121,-0.958,-1.178), TLine(-1.000,-1.113,-0.958,-1.055),TLine(-1.000,-1.055,-0.958,-1.113), TLine(-0.800,-2.094,-0.758,-2.037),TLine(-0.800,-2.037,-0.758,-2.094), TLine(-0.800,-2.029,-0.758,-1.971),TLine(-0.800,-1.971,-0.758,-2.029), TLine(-0.800,-1.963,-0.758,-1.906),TLine(-0.800,-1.906,-0.758,-1.963), TLine(-0.800,-1.898,-0.758,-1.841),TLine(-0.800,-1.841,-0.758,-1.898), TLine(-0.800,-1.833,-0.758,-1.775),TLine(-0.800,-1.775,-0.758,-1.833), TLine(-0.800,-1.767,-0.758,-1.710),TLine(-0.800,-1.710,-0.758,-1.767), TLine(-0.800,-1.702,-0.758,-1.644),TLine(-0.800,-1.644,-0.758,-1.702), TLine(-0.800,-1.636,-0.758,-1.579),TLine(-0.800,-1.579,-0.758,-1.636), TLine(-0.800,-1.571,-0.758,-1.513),TLine(-0.800,-1.513,-0.758,-1.571), TLine(-0.800,-1.505,-0.758,-1.448),TLine(-0.800,-1.448,-0.758,-1.505), TLine(-0.800,-1.440,-0.758,-1.382),TLine(-0.800,-1.382,-0.758,-1.440), TLine(-0.800,-1.374,-0.758,-1.317),TLine(-0.800,-1.317,-0.758,-1.374), TLine(-0.800,-1.309,-0.758,-1.252),TLine(-0.800,-1.252,-0.758,-1.309), TLine(-0.800,-1.244,-0.758,-1.186),TLine(-0.800,-1.186,-0.758,-1.244), TLine(-0.800,-1.178,-0.758,-1.121),TLine(-0.800,-1.121,-0.758,-1.178), TLine(-0.800,-1.113,-0.758,-1.055),TLine(-0.800,-1.055,-0.758,-1.113), TLine(-0.750,-2.094,-0.708,-2.037),TLine(-0.750,-2.037,-0.708,-2.094), TLine(-0.750,-2.029,-0.708,-1.971),TLine(-0.750,-1.971,-0.708,-2.029), TLine(-0.750,-1.963,-0.708,-1.906),TLine(-0.750,-1.906,-0.708,-1.963), TLine(-0.750,-1.898,-0.708,-1.841),TLine(-0.750,-1.841,-0.708,-1.898), TLine(-0.750,-1.833,-0.708,-1.775),TLine(-0.750,-1.775,-0.708,-1.833), TLine(-0.750,-1.767,-0.708,-1.710),TLine(-0.750,-1.710,-0.708,-1.767), TLine(-0.750,-1.702,-0.708,-1.644),TLine(-0.750,-1.644,-0.708,-1.702), TLine(-0.750,-1.636,-0.708,-1.579),TLine(-0.750,-1.579,-0.708,-1.636), TLine(-0.750,-1.571,-0.708,-1.513),TLine(-0.750,-1.513,-0.708,-1.571), TLine(-0.750,-1.505,-0.708,-1.448),TLine(-0.750,-1.448,-0.708,-1.505), TLine(-0.750,-1.440,-0.708,-1.382),TLine(-0.750,-1.382,-0.708,-1.440), TLine(-0.750,-1.374,-0.708,-1.317),TLine(-0.750,-1.317,-0.708,-1.374), TLine(-0.750,-1.309,-0.708,-1.252),TLine(-0.750,-1.252,-0.708,-1.309), TLine(-0.750,-1.244,-0.708,-1.186),TLine(-0.750,-1.186,-0.708,-1.244), TLine(-0.750,-1.178,-0.708,-1.121),TLine(-0.750,-1.121,-0.708,-1.178), TLine(-0.750,-1.113,-0.708,-1.055),TLine(-0.750,-1.055,-0.708,-1.113), TLine(-0.500,-2.094,-0.458,-2.037),TLine(-0.500,-2.037,-0.458,-2.094), TLine(-0.500,-2.029,-0.458,-1.971),TLine(-0.500,-1.971,-0.458,-2.029), TLine(-0.500,-1.963,-0.458,-1.906),TLine(-0.500,-1.906,-0.458,-1.963), TLine(-0.500,-1.898,-0.458,-1.841),TLine(-0.500,-1.841,-0.458,-1.898), TLine(-0.500,-1.309,-0.458,-1.252),TLine(-0.500,-1.252,-0.458,-1.309), TLine(-0.500,-1.244,-0.458,-1.186),TLine(-0.500,-1.186,-0.458,-1.244), TLine(-0.500,-1.178,-0.458,-1.121),TLine(-0.500,-1.121,-0.458,-1.178), TLine(-0.500,-1.113,-0.458,-1.055),TLine(-0.500,-1.055,-0.458,-1.113), TLine(-0.450,-2.094,-0.408,-2.037),TLine(-0.450,-2.037,-0.408,-2.094), TLine(-0.450,-2.029,-0.408,-1.971),TLine(-0.450,-1.971,-0.408,-2.029), TLine(-0.450,-1.963,-0.408,-1.906),TLine(-0.450,-1.906,-0.408,-1.963), TLine(-0.450,-1.898,-0.408,-1.841),TLine(-0.450,-1.841,-0.408,-1.898), TLine(-0.450,-1.309,-0.408,-1.252),TLine(-0.450,-1.252,-0.408,-1.309), TLine(-0.450,-1.244,-0.408,-1.186),TLine(-0.450,-1.186,-0.408,-1.244), TLine(-0.450,-1.178,-0.408,-1.121),TLine(-0.450,-1.121,-0.408,-1.178), TLine(-0.450,-1.113,-0.408,-1.055),TLine(-0.450,-1.055,-0.408,-1.113), TLine(-0.400,-2.094,-0.358,-2.037),TLine(-0.400,-2.037,-0.358,-2.094), TLine(-0.400,-2.029,-0.358,-1.971),TLine(-0.400,-1.971,-0.358,-2.029), TLine(-0.400,-1.963,-0.358,-1.906),TLine(-0.400,-1.906,-0.358,-1.963), TLine(-0.400,-1.898,-0.358,-1.841),TLine(-0.400,-1.841,-0.358,-1.898), TLine(-0.400,-1.309,-0.358,-1.252),TLine(-0.400,-1.252,-0.358,-1.309), TLine(-0.400,-1.244,-0.358,-1.186),TLine(-0.400,-1.186,-0.358,-1.244), TLine(-0.400,-1.178,-0.358,-1.121),TLine(-0.400,-1.121,-0.358,-1.178), TLine(-0.400,-1.113,-0.358,-1.055),TLine(-0.400,-1.055,-0.358,-1.113), TLine( 1.000,-2.880, 1.042,-2.822),TLine( 1.000,-2.822, 1.042,-2.880), TLine( 1.000,-2.814, 1.042,-2.757),TLine( 1.000,-2.757, 1.042,-2.814), TLine( 1.000,-2.749, 1.042,-2.691),TLine( 1.000,-2.691, 1.042,-2.749), TLine( 1.000,-2.683, 1.042,-2.626),TLine( 1.000,-2.626, 1.042,-2.683), TLine( 1.000,-2.094, 1.042,-2.037),TLine( 1.000,-2.037, 1.042,-2.094), TLine( 1.000,-2.029, 1.042,-1.971),TLine( 1.000,-1.971, 1.042,-2.029), TLine( 1.000,-1.963, 1.042,-1.906),TLine( 1.000,-1.906, 1.042,-1.963), TLine( 1.000,-1.898, 1.042,-1.841),TLine( 1.000,-1.841, 1.042,-1.898), TLine( 1.000,-1.309, 1.042,-1.252),TLine( 1.000,-1.252, 1.042,-1.309), TLine( 1.000,-1.244, 1.042,-1.186),TLine( 1.000,-1.186, 1.042,-1.244), TLine( 1.000,-1.178, 1.042,-1.121),TLine( 1.000,-1.121, 1.042,-1.178), TLine( 1.000,-1.113, 1.042,-1.055),TLine( 1.000,-1.055, 1.042,-1.113), TLine( 1.000,-0.524, 1.042,-0.466),TLine( 1.000,-0.466, 1.042,-0.524), TLine( 1.000,-0.458, 1.042,-0.401),TLine( 1.000,-0.401, 1.042,-0.458), TLine( 1.000,-0.393, 1.042,-0.335),TLine( 1.000,-0.335, 1.042,-0.393), TLine( 1.000,-0.327, 1.042,-0.270),TLine( 1.000,-0.270, 1.042,-0.327), TLine( 1.000, 0.262, 1.042, 0.319),TLine( 1.000, 0.319, 1.042, 0.262), TLine( 1.000, 0.327, 1.042, 0.385),TLine( 1.000, 0.385, 1.042, 0.327), TLine( 1.000, 0.393, 1.042, 0.450),TLine( 1.000, 0.450, 1.042, 0.393), TLine( 1.000, 0.458, 1.042, 0.516),TLine( 1.000, 0.516, 1.042, 0.458), TLine( 1.000, 1.047, 1.042, 1.105),TLine( 1.000, 1.105, 1.042, 1.047), TLine( 1.000, 1.113, 1.042, 1.170),TLine( 1.000, 1.170, 1.042, 1.113), TLine( 1.000, 1.178, 1.042, 1.236),TLine( 1.000, 1.236, 1.042, 1.178), TLine( 1.000, 1.244, 1.042, 1.301),TLine( 1.000, 1.301, 1.042, 1.244), TLine( 1.000, 1.309, 1.042, 1.366),TLine( 1.000, 1.366, 1.042, 1.309), TLine( 1.000, 1.833, 1.042, 1.890),TLine( 1.000, 1.890, 1.042, 1.833), TLine( 1.000, 1.898, 1.042, 1.955),TLine( 1.000, 1.955, 1.042, 1.898), TLine( 1.000, 1.963, 1.042, 2.021),TLine( 1.000, 2.021, 1.042, 1.963), TLine( 1.000, 2.029, 1.042, 2.086),TLine( 1.000, 2.086, 1.042, 2.029), TLine( 1.000, 2.618, 1.042, 2.675),TLine( 1.000, 2.675, 1.042, 2.618), TLine( 1.000, 2.683, 1.042, 2.741),TLine( 1.000, 2.741, 1.042, 2.683), TLine( 1.000, 2.749, 1.042, 2.806),TLine( 1.000, 2.806, 1.042, 2.749), TLine( 1.000, 2.814, 1.042, 2.872),TLine( 1.000, 2.872, 1.042, 2.814), TLine( 0.950,-2.094, 0.992,-2.037),TLine( 0.950,-2.037, 0.992,-2.094), TLine( 0.950,-2.029, 0.992,-1.971),TLine( 0.950,-1.971, 0.992,-2.029), TLine( 0.950,-1.963, 0.992,-1.906),TLine( 0.950,-1.906, 0.992,-1.963), TLine( 0.950,-1.898, 0.992,-1.841),TLine( 0.950,-1.841, 0.992,-1.898), TLine( 0.950,-1.309, 0.992,-1.252),TLine( 0.950,-1.252, 0.992,-1.309), TLine( 0.950,-1.244, 0.992,-1.186),TLine( 0.950,-1.186, 0.992,-1.244), TLine( 0.950,-1.178, 0.992,-1.121),TLine( 0.950,-1.121, 0.992,-1.178), TLine( 0.950,-1.113, 0.992,-1.055),TLine( 0.950,-1.055, 0.992,-1.113), TLine( 0.750,-2.094, 0.792,-2.037),TLine( 0.750,-2.037, 0.792,-2.094), TLine( 0.750,-2.029, 0.792,-1.971),TLine( 0.750,-1.971, 0.792,-2.029), TLine( 0.750,-1.963, 0.792,-1.906),TLine( 0.750,-1.906, 0.792,-1.963), TLine( 0.750,-1.898, 0.792,-1.841),TLine( 0.750,-1.841, 0.792,-1.898), TLine( 0.750,-1.833, 0.792,-1.775),TLine( 0.750,-1.775, 0.792,-1.833), TLine( 0.750,-1.767, 0.792,-1.710),TLine( 0.750,-1.710, 0.792,-1.767), TLine( 0.750,-1.702, 0.792,-1.644),TLine( 0.750,-1.644, 0.792,-1.702), TLine( 0.750,-1.636, 0.792,-1.579),TLine( 0.750,-1.579, 0.792,-1.636), TLine( 0.750,-1.571, 0.792,-1.513),TLine( 0.750,-1.513, 0.792,-1.571), TLine( 0.750,-1.505, 0.792,-1.448),TLine( 0.750,-1.448, 0.792,-1.505), TLine( 0.750,-1.440, 0.792,-1.382),TLine( 0.750,-1.382, 0.792,-1.440), TLine( 0.750,-1.374, 0.792,-1.317),TLine( 0.750,-1.317, 0.792,-1.374), TLine( 0.750,-1.309, 0.792,-1.252),TLine( 0.750,-1.252, 0.792,-1.309), TLine( 0.750,-1.244, 0.792,-1.186),TLine( 0.750,-1.186, 0.792,-1.244), TLine( 0.750,-1.178, 0.792,-1.121),TLine( 0.750,-1.121, 0.792,-1.178), TLine( 0.750,-1.113, 0.792,-1.055),TLine( 0.750,-1.055, 0.792,-1.113), TLine( 0.700,-2.094, 0.742,-2.037),TLine( 0.700,-2.037, 0.742,-2.094), TLine( 0.700,-2.029, 0.742,-1.971),TLine( 0.700,-1.971, 0.742,-2.029), TLine( 0.700,-1.963, 0.742,-1.906),TLine( 0.700,-1.906, 0.742,-1.963), TLine( 0.700,-1.898, 0.742,-1.841),TLine( 0.700,-1.841, 0.742,-1.898), TLine( 0.700,-1.833, 0.742,-1.775),TLine( 0.700,-1.775, 0.742,-1.833), TLine( 0.700,-1.767, 0.742,-1.710),TLine( 0.700,-1.710, 0.742,-1.767), TLine( 0.700,-1.702, 0.742,-1.644),TLine( 0.700,-1.644, 0.742,-1.702), TLine( 0.700,-1.636, 0.742,-1.579),TLine( 0.700,-1.579, 0.742,-1.636), TLine( 0.700,-1.571, 0.742,-1.513),TLine( 0.700,-1.513, 0.742,-1.571), TLine( 0.700,-1.505, 0.742,-1.448),TLine( 0.700,-1.448, 0.742,-1.505), TLine( 0.700,-1.440, 0.742,-1.382),TLine( 0.700,-1.382, 0.742,-1.440), TLine( 0.700,-1.374, 0.742,-1.317),TLine( 0.700,-1.317, 0.742,-1.374), TLine( 0.700,-1.309, 0.742,-1.252),TLine( 0.700,-1.252, 0.742,-1.309), TLine( 0.700,-1.244, 0.742,-1.186),TLine( 0.700,-1.186, 0.742,-1.244), TLine( 0.700,-1.178, 0.742,-1.121),TLine( 0.700,-1.121, 0.742,-1.178), TLine( 0.700,-1.113, 0.742,-1.055),TLine( 0.700,-1.055, 0.742,-1.113), TLine( 0.650,-1.178, 0.692,-1.121),TLine( 0.650,-1.121, 0.692,-1.178), TLine( 0.600,-1.178, 0.642,-1.121),TLine( 0.600,-1.121, 0.642,-1.178), TLine( 0.550,-1.178, 0.592,-1.121),TLine( 0.550,-1.121, 0.592,-1.178), TLine( 0.500,-1.178, 0.542,-1.121),TLine( 0.500,-1.121, 0.542,-1.178), TLine( 0.650,-1.113, 0.692,-1.055),TLine( 0.650,-1.055, 0.692,-1.113), TLine( 0.600,-1.113, 0.642,-1.055),TLine( 0.600,-1.055, 0.642,-1.113), TLine( 0.550,-1.113, 0.592,-1.055),TLine( 0.550,-1.055, 0.592,-1.113), TLine( 0.500,-1.113, 0.542,-1.055),TLine( 0.500,-1.055, 0.542,-1.113), TLine( 0.450,-2.094, 0.492,-2.037),TLine( 0.450,-2.037, 0.492,-2.094), TLine( 0.450,-2.029, 0.492,-1.971),TLine( 0.450,-1.971, 0.492,-2.029), TLine( 0.450,-1.963, 0.492,-1.906),TLine( 0.450,-1.906, 0.492,-1.963), TLine( 0.450,-1.898, 0.492,-1.841),TLine( 0.450,-1.841, 0.492,-1.898), TLine( 0.450,-1.309, 0.492,-1.252),TLine( 0.450,-1.252, 0.492,-1.309), TLine( 0.450,-1.244, 0.492,-1.186),TLine( 0.450,-1.186, 0.492,-1.244), TLine( 0.450,-1.178, 0.492,-1.121),TLine( 0.450,-1.121, 0.492,-1.178), TLine( 0.450,-1.113, 0.492,-1.055),TLine( 0.450,-1.055, 0.492,-1.113), TLine( 0.400,-2.094, 0.442,-2.037),TLine( 0.400,-2.037, 0.442,-2.094), TLine( 0.400,-2.029, 0.442,-1.971),TLine( 0.400,-1.971, 0.442,-2.029), TLine( 0.400,-1.963, 0.442,-1.906),TLine( 0.400,-1.906, 0.442,-1.963), TLine( 0.400,-1.898, 0.442,-1.841),TLine( 0.400,-1.841, 0.442,-1.898), TLine( 0.400,-1.309, 0.442,-1.252),TLine( 0.400,-1.252, 0.442,-1.309), TLine( 0.400,-1.244, 0.442,-1.186),TLine( 0.400,-1.186, 0.442,-1.244), TLine( 0.400,-1.178, 0.442,-1.121),TLine( 0.400,-1.121, 0.442,-1.178), TLine( 0.400,-1.113, 0.442,-1.055),TLine( 0.400,-1.055, 0.442,-1.113), TLine( 0.350,-2.094, 0.392,-2.037),TLine( 0.350,-2.037, 0.392,-2.094), TLine( 0.350,-2.029, 0.392,-1.971),TLine( 0.350,-1.971, 0.392,-2.029), TLine( 0.350,-1.963, 0.392,-1.906),TLine( 0.350,-1.906, 0.392,-1.963), TLine( 0.350,-1.898, 0.392,-1.841),TLine( 0.350,-1.841, 0.392,-1.898), TLine( 0.350,-1.309, 0.392,-1.252),TLine( 0.350,-1.252, 0.392,-1.309), TLine( 0.350,-1.244, 0.392,-1.186),TLine( 0.350,-1.186, 0.392,-1.244), TLine( 0.350,-1.178, 0.392,-1.121),TLine( 0.350,-1.121, 0.392,-1.178), TLine( 0.350,-1.113, 0.392,-1.055),TLine( 0.350,-1.055, 0.392,-1.113), TLine(-0.050,-3.142,-0.008,-3.084),TLine(-0.050,-3.084,-0.008,-3.142), TLine(-0.050,-3.076,-0.008,-3.019),TLine(-0.050,-3.019,-0.008,-3.076), TLine(-0.050,-3.011,-0.008,-2.953),TLine(-0.050,-2.953,-0.008,-3.011), TLine( 0.000,-3.142, 0.042,-3.084),TLine( 0.000,-3.084, 0.042,-3.142), TLine( 0.000,-3.076, 0.042,-3.019),TLine( 0.000,-3.019, 0.042,-3.076), TLine( 0.000,-3.011, 0.042,-2.953),TLine( 0.000,-2.953, 0.042,-3.011), TLine( 0.050,-3.142, 0.092,-3.084),TLine( 0.050,-3.084, 0.092,-3.142), TLine( 0.050,-3.076, 0.092,-3.019),TLine( 0.050,-3.019, 0.092,-3.076), TLine( 0.050,-3.011, 0.092,-2.953),TLine( 0.050,-2.953, 0.092,-3.011), TLine(-0.050,-2.553,-0.008,-2.495),TLine(-0.050,-2.495,-0.008,-2.553), TLine(-0.050,-2.487,-0.008,-2.430),TLine(-0.050,-2.430,-0.008,-2.487), TLine(-0.050,-2.422,-0.008,-2.364),TLine(-0.050,-2.364,-0.008,-2.422), TLine(-0.050,-2.356,-0.008,-2.299),TLine(-0.050,-2.299,-0.008,-2.356), TLine(-0.050,-2.291,-0.008,-2.233),TLine(-0.050,-2.233,-0.008,-2.291), TLine(-0.050,-2.225,-0.008,-2.168),TLine(-0.050,-2.168,-0.008,-2.225), TLine(-0.050,-2.160,-0.008,-2.102),TLine(-0.050,-2.102,-0.008,-2.160), TLine(-0.050,-2.094,-0.008,-2.037),TLine(-0.050,-2.037,-0.008,-2.094), TLine(-0.050,-2.029,-0.008,-1.971),TLine(-0.050,-1.971,-0.008,-2.029), TLine(-0.050,-1.963,-0.008,-1.906),TLine(-0.050,-1.906,-0.008,-1.963), TLine(-0.050,-1.898,-0.008,-1.841),TLine(-0.050,-1.841,-0.008,-1.898), TLine( 0.000,-2.553, 0.042,-2.495),TLine( 0.000,-2.495, 0.042,-2.553), TLine( 0.000,-2.487, 0.042,-2.430),TLine( 0.000,-2.430, 0.042,-2.487), TLine( 0.000,-2.422, 0.042,-2.364),TLine( 0.000,-2.364, 0.042,-2.422), TLine( 0.000,-2.356, 0.042,-2.299),TLine( 0.000,-2.299, 0.042,-2.356), TLine( 0.000,-2.291, 0.042,-2.233),TLine( 0.000,-2.233, 0.042,-2.291), TLine( 0.000,-2.225, 0.042,-2.168),TLine( 0.000,-2.168, 0.042,-2.225), TLine( 0.000,-2.160, 0.042,-2.102),TLine( 0.000,-2.102, 0.042,-2.160), TLine( 0.000,-2.094, 0.042,-2.037),TLine( 0.000,-2.037, 0.042,-2.094), TLine( 0.000,-2.029, 0.042,-1.971),TLine( 0.000,-1.971, 0.042,-2.029), TLine( 0.000,-1.963, 0.042,-1.906),TLine( 0.000,-1.906, 0.042,-1.963), TLine( 0.000,-1.898, 0.042,-1.841),TLine( 0.000,-1.841, 0.042,-1.898), TLine( 0.000,-1.833, 0.042,-1.775),TLine( 0.000,-1.775, 0.042,-1.833), TLine( 0.000,-1.767, 0.042,-1.710),TLine( 0.000,-1.710, 0.042,-1.767), TLine( 0.000,-1.702, 0.042,-1.644),TLine( 0.000,-1.644, 0.042,-1.702), TLine( 0.000,-1.636, 0.042,-1.579),TLine( 0.000,-1.579, 0.042,-1.636), TLine( 0.000,-1.571, 0.042,-1.513),TLine( 0.000,-1.513, 0.042,-1.571), TLine( 0.000,-1.505, 0.042,-1.448),TLine( 0.000,-1.448, 0.042,-1.505), TLine( 0.000,-1.440, 0.042,-1.382),TLine( 0.000,-1.382, 0.042,-1.440), TLine( 0.000,-1.374, 0.042,-1.317),TLine( 0.000,-1.317, 0.042,-1.374), TLine(-0.050,-1.309,-0.008,-1.252),TLine(-0.050,-1.252,-0.008,-1.309), TLine(-0.050,-1.244,-0.008,-1.186),TLine(-0.050,-1.186,-0.008,-1.244), TLine(-0.050,-1.178,-0.008,-1.121),TLine(-0.050,-1.121,-0.008,-1.178), TLine(-0.050,-1.113,-0.008,-1.055),TLine(-0.050,-1.055,-0.008,-1.113), TLine(-0.050,-1.047,-0.008,-0.990),TLine(-0.050,-0.990,-0.008,-1.047), TLine(-0.050,-0.982,-0.008,-0.924),TLine(-0.050,-0.924,-0.008,-0.982), TLine(-0.050,-0.916,-0.008,-0.859),TLine(-0.050,-0.859,-0.008,-0.916), TLine(-0.050,-0.851,-0.008,-0.793),TLine(-0.050,-0.793,-0.008,-0.851), TLine(-0.050,-0.785,-0.008,-0.728),TLine(-0.050,-0.728,-0.008,-0.785), TLine(-0.050,-0.720,-0.008,-0.662),TLine(-0.050,-0.662,-0.008,-0.720), TLine(-0.050,-0.654,-0.008,-0.597),TLine(-0.050,-0.597,-0.008,-0.654), TLine( 0.000,-1.309, 0.042,-1.252),TLine( 0.000,-1.252, 0.042,-1.309), TLine( 0.000,-1.244, 0.042,-1.186),TLine( 0.000,-1.186, 0.042,-1.244), TLine( 0.000,-1.178, 0.042,-1.121),TLine( 0.000,-1.121, 0.042,-1.178), TLine( 0.000,-1.113, 0.042,-1.055),TLine( 0.000,-1.055, 0.042,-1.113), TLine( 0.000,-1.047, 0.042,-0.990),TLine( 0.000,-0.990, 0.042,-1.047), TLine( 0.000,-0.982, 0.042,-0.924),TLine( 0.000,-0.924, 0.042,-0.982), TLine( 0.000,-0.916, 0.042,-0.859),TLine( 0.000,-0.859, 0.042,-0.916), TLine( 0.000,-0.851, 0.042,-0.793),TLine( 0.000,-0.793, 0.042,-0.851), TLine( 0.000,-0.785, 0.042,-0.728),TLine( 0.000,-0.728, 0.042,-0.785), TLine( 0.000,-0.720, 0.042,-0.662),TLine( 0.000,-0.662, 0.042,-0.720), TLine( 0.000,-0.654, 0.042,-0.597),TLine( 0.000,-0.597, 0.042,-0.654), TLine(-0.100,-0.196,-0.058,-0.139),TLine(-0.100,-0.139,-0.058,-0.196), TLine(-0.100,-0.131,-0.058,-0.073),TLine(-0.100,-0.073,-0.058,-0.131), TLine(-0.100,-0.065,-0.058,-0.008),TLine(-0.100,-0.008,-0.058,-0.065), TLine(-0.100, 0.000,-0.058, 0.057),TLine(-0.100, 0.057,-0.058, 0.000), TLine(-0.100, 0.065,-0.058, 0.123),TLine(-0.100, 0.123,-0.058, 0.065), TLine(-0.100, 0.131,-0.058, 0.188),TLine(-0.100, 0.188,-0.058, 0.131), TLine(-0.050,-0.196,-0.008,-0.139),TLine(-0.050,-0.139,-0.008,-0.196), TLine(-0.050,-0.131,-0.008,-0.073),TLine(-0.050,-0.073,-0.008,-0.131), TLine(-0.050,-0.065,-0.008,-0.008),TLine(-0.050,-0.008,-0.008,-0.065), TLine(-0.050, 0.000,-0.008, 0.057),TLine(-0.050, 0.057,-0.008, 0.000), TLine(-0.050, 0.065,-0.008, 0.123),TLine(-0.050, 0.123,-0.008, 0.065), TLine(-0.050, 0.131,-0.008, 0.188),TLine(-0.050, 0.188,-0.008, 0.131), TLine(-0.050, 0.589,-0.008, 0.646),TLine(-0.050, 0.646,-0.008, 0.589), TLine(-0.050, 0.654,-0.008, 0.712),TLine(-0.050, 0.712,-0.008, 0.654), TLine(-0.050, 0.720,-0.008, 0.777),TLine(-0.050, 0.777,-0.008, 0.720), TLine(-0.050, 0.785,-0.008, 0.843),TLine(-0.050, 0.843,-0.008, 0.785), TLine(-0.050, 0.851,-0.008, 0.908),TLine(-0.050, 0.908,-0.008, 0.851), TLine(-0.050, 0.916,-0.008, 0.974),TLine(-0.050, 0.974,-0.008, 0.916), TLine(-0.150, 1.374,-0.108, 1.432),TLine(-0.150, 1.432,-0.108, 1.374), TLine(-0.150, 1.440,-0.108, 1.497),TLine(-0.150, 1.497,-0.108, 1.440), TLine(-0.150, 1.505,-0.108, 1.563),TLine(-0.150, 1.563,-0.108, 1.505), TLine(-0.150, 1.571,-0.108, 1.628),TLine(-0.150, 1.628,-0.108, 1.571), TLine(-0.150, 1.636,-0.108, 1.694),TLine(-0.150, 1.694,-0.108, 1.636), TLine(-0.150, 1.702,-0.108, 1.759),TLine(-0.150, 1.759,-0.108, 1.702), TLine(-0.100, 1.374,-0.058, 1.432),TLine(-0.100, 1.432,-0.058, 1.374), TLine(-0.100, 1.440,-0.058, 1.497),TLine(-0.100, 1.497,-0.058, 1.440), TLine(-0.100, 1.505,-0.058, 1.563),TLine(-0.100, 1.563,-0.058, 1.505), TLine(-0.100, 1.571,-0.058, 1.628),TLine(-0.100, 1.628,-0.058, 1.571), TLine(-0.100, 1.636,-0.058, 1.694),TLine(-0.100, 1.694,-0.058, 1.636), TLine(-0.100, 1.702,-0.058, 1.759),TLine(-0.100, 1.759,-0.058, 1.702), TLine(-0.050, 1.374,-0.008, 1.432),TLine(-0.050, 1.432,-0.008, 1.374), TLine(-0.050, 1.440,-0.008, 1.497),TLine(-0.050, 1.497,-0.008, 1.440), TLine(-0.050, 1.505,-0.008, 1.563),TLine(-0.050, 1.563,-0.008, 1.505), TLine(-0.050, 1.571,-0.008, 1.628),TLine(-0.050, 1.628,-0.008, 1.571), TLine(-0.050, 1.636,-0.008, 1.694),TLine(-0.050, 1.694,-0.008, 1.636), TLine(-0.050, 1.702,-0.008, 1.759),TLine(-0.050, 1.759,-0.008, 1.702), TLine( 0.000, 1.374, 0.042, 1.432),TLine( 0.000, 1.432, 0.042, 1.374), TLine( 0.000, 1.440, 0.042, 1.497),TLine( 0.000, 1.497, 0.042, 1.440), TLine( 0.000, 1.505, 0.042, 1.563),TLine( 0.000, 1.563, 0.042, 1.505), TLine( 0.000, 1.571, 0.042, 1.628),TLine( 0.000, 1.628, 0.042, 1.571), TLine( 0.000, 1.636, 0.042, 1.694),TLine( 0.000, 1.694, 0.042, 1.636), TLine( 0.000, 1.702, 0.042, 1.759),TLine( 0.000, 1.759, 0.042, 1.702), TLine(-0.100, 2.160,-0.058, 2.217),TLine(-0.100, 2.217,-0.058, 2.160), TLine(-0.100, 2.225,-0.058, 2.283),TLine(-0.100, 2.283,-0.058, 2.225), TLine(-0.100, 2.291,-0.058, 2.348),TLine(-0.100, 2.348,-0.058, 2.291), TLine(-0.100, 2.356,-0.058, 2.414),TLine(-0.100, 2.414,-0.058, 2.356), TLine(-0.100, 2.422,-0.058, 2.479),TLine(-0.100, 2.479,-0.058, 2.422), TLine(-0.100, 2.487,-0.058, 2.545),TLine(-0.100, 2.545,-0.058, 2.487), TLine(-0.100, 2.553,-0.058, 2.610),TLine(-0.100, 2.610,-0.058, 2.553), TLine(-0.050, 2.160,-0.008, 2.217),TLine(-0.050, 2.217,-0.008, 2.160), TLine(-0.050, 2.225,-0.008, 2.283),TLine(-0.050, 2.283,-0.008, 2.225), TLine(-0.050, 2.291,-0.008, 2.348),TLine(-0.050, 2.348,-0.008, 2.291), TLine(-0.050, 2.356,-0.008, 2.414),TLine(-0.050, 2.414,-0.008, 2.356), TLine(-0.050, 2.422,-0.008, 2.479),TLine(-0.050, 2.479,-0.008, 2.422), TLine(-0.050, 2.487,-0.008, 2.545),TLine(-0.050, 2.545,-0.008, 2.487), TLine(-0.050, 2.553,-0.008, 2.610),TLine(-0.050, 2.610,-0.008, 2.553), TLine( 0.000, 2.160, 0.042, 2.217),TLine( 0.000, 2.217, 0.042, 2.160), TLine( 0.000, 2.225, 0.042, 2.283),TLine( 0.000, 2.283, 0.042, 2.225), TLine( 0.000, 2.291, 0.042, 2.348),TLine( 0.000, 2.348, 0.042, 2.291), TLine( 0.000, 2.356, 0.042, 2.414),TLine( 0.000, 2.414, 0.042, 2.356), TLine( 0.000, 2.422, 0.042, 2.479),TLine( 0.000, 2.479, 0.042, 2.422), TLine( 0.000, 2.487, 0.042, 2.545),TLine( 0.000, 2.545, 0.042, 2.487), TLine( 0.000, 2.553, 0.042, 2.610),TLine( 0.000, 2.610, 0.042, 2.553), TLine( 0.050, 2.160, 0.092, 2.217),TLine( 0.050, 2.217, 0.092, 2.160), TLine( 0.050, 2.225, 0.092, 2.283),TLine( 0.050, 2.283, 0.092, 2.225), TLine( 0.050, 2.291, 0.092, 2.348),TLine( 0.050, 2.348, 0.092, 2.291), TLine( 0.050, 2.356, 0.092, 2.414),TLine( 0.050, 2.414, 0.092, 2.356), TLine( 0.050, 2.422, 0.092, 2.479),TLine( 0.050, 2.479, 0.092, 2.422), TLine( 0.050, 2.487, 0.092, 2.545),TLine( 0.050, 2.545, 0.092, 2.487), TLine( 0.050, 2.553, 0.092, 2.610),TLine( 0.050, 2.610, 0.092, 2.553), TLine(-0.050, 2.618,-0.008, 2.675),TLine(-0.050, 2.675,-0.008, 2.618), TLine(-0.050, 2.683,-0.008, 2.741),TLine(-0.050, 2.741,-0.008, 2.683), TLine(-0.050, 2.749,-0.008, 2.806),TLine(-0.050, 2.806,-0.008, 2.749), TLine(-0.050, 2.814,-0.008, 2.872),TLine(-0.050, 2.872,-0.008, 2.814), TLine(-0.050, 2.880,-0.008, 2.937),TLine(-0.050, 2.937,-0.008, 2.880), TLine(-0.050, 2.945,-0.008, 3.003),TLine(-0.050, 3.003,-0.008, 2.945), TLine(-0.050, 3.011,-0.008, 3.068),TLine(-0.050, 3.068,-0.008, 3.011), TLine(-0.050, 3.076,-0.008, 3.134),TLine(-0.050, 3.134,-0.008, 3.076), TLine( 0.000, 2.618, 0.042, 2.675),TLine( 0.000, 2.675, 0.042, 2.618), TLine( 0.000, 2.683, 0.042, 2.741),TLine( 0.000, 2.741, 0.042, 2.683), TLine( 0.000, 2.749, 0.042, 2.806),TLine( 0.000, 2.806, 0.042, 2.749), TLine( 0.000, 2.814, 0.042, 2.872),TLine( 0.000, 2.872, 0.042, 2.814), TLine( 0.000, 2.880, 0.042, 2.937),TLine( 0.000, 2.937, 0.042, 2.880), TLine( 0.000, 2.945, 0.042, 3.003),TLine( 0.000, 3.003, 0.042, 2.945), TLine( 0.000, 3.011, 0.042, 3.068),TLine( 0.000, 3.068, 0.042, 3.011), TLine( 0.000, 3.076, 0.042, 3.134),TLine( 0.000, 3.134, 0.042, 3.076), TLine( 0.050, 2.945, 0.092, 3.003),TLine( 0.050, 3.003, 0.092, 2.945), TLine( 0.050, 3.011, 0.092, 3.068),TLine( 0.050, 3.068, 0.092, 3.011), TLine( 0.050, 3.076, 0.092, 3.134),TLine( 0.050, 3.134, 0.092, 3.076), TLine(-2.750,-3.207,-2.708,-3.150),TLine(-2.750,-3.150,-2.708,-3.207)
      }
      hist muChain1_EFmuon_etaphi_wrt_MuidCB@shifter {
        output = HLT/TRMUO/Shift/Etaphi
        algorithm = alg_eta_vs_phi
	display = TLine(-1.050,-2.880,-1.008,-2.822),TLine(-1.050,-2.822,-1.008,-2.880), TLine(-1.050,-2.814,-1.008,-2.757),TLine(-1.050,-2.757,-1.008,-2.814), TLine(-1.050,-2.749,-1.008,-2.691),TLine(-1.050,-2.691,-1.008,-2.749), TLine(-1.050,-2.683,-1.008,-2.626),TLine(-1.050,-2.626,-1.008,-2.683), TLine(-1.050,-2.094,-1.008,-2.037),TLine(-1.050,-2.037,-1.008,-2.094), TLine(-1.050,-2.029,-1.008,-1.971),TLine(-1.050,-1.971,-1.008,-2.029), TLine(-1.050,-1.963,-1.008,-1.906),TLine(-1.050,-1.906,-1.008,-1.963), TLine(-1.050,-1.898,-1.008,-1.841),TLine(-1.050,-1.841,-1.008,-1.898), TLine(-1.050,-1.309,-1.008,-1.252),TLine(-1.050,-1.252,-1.008,-1.309), TLine(-1.050,-1.244,-1.008,-1.186),TLine(-1.050,-1.186,-1.008,-1.244), TLine(-1.050,-1.178,-1.008,-1.121),TLine(-1.050,-1.121,-1.008,-1.178), TLine(-1.050,-1.113,-1.008,-1.055),TLine(-1.050,-1.055,-1.008,-1.113), TLine(-1.050,-0.524,-1.008,-0.466),TLine(-1.050,-0.466,-1.008,-0.524), TLine(-1.050,-0.458,-1.008,-0.401),TLine(-1.050,-0.401,-1.008,-0.458), TLine(-1.050,-0.393,-1.008,-0.335),TLine(-1.050,-0.335,-1.008,-0.393), TLine(-1.050,-0.327,-1.008,-0.270),TLine(-1.050,-0.270,-1.008,-0.327), TLine(-1.050, 0.262,-1.008, 0.319),TLine(-1.050, 0.319,-1.008, 0.262), TLine(-1.050, 0.327,-1.008, 0.385),TLine(-1.050, 0.385,-1.008, 0.327), TLine(-1.050, 0.393,-1.008, 0.450),TLine(-1.050, 0.450,-1.008, 0.393), TLine(-1.050, 0.458,-1.008, 0.516),TLine(-1.050, 0.516,-1.008, 0.458), TLine(-1.050, 1.047,-1.008, 1.105),TLine(-1.050, 1.105,-1.008, 1.047), TLine(-1.050, 1.113,-1.008, 1.170),TLine(-1.050, 1.170,-1.008, 1.113), TLine(-1.050, 1.178,-1.008, 1.236),TLine(-1.050, 1.236,-1.008, 1.178), TLine(-1.050, 1.244,-1.008, 1.301),TLine(-1.050, 1.301,-1.008, 1.244), TLine(-1.050, 1.309,-1.008, 1.366),TLine(-1.050, 1.366,-1.008, 1.309), TLine(-1.050, 1.833,-1.008, 1.890),TLine(-1.050, 1.890,-1.008, 1.833), TLine(-1.050, 1.898,-1.008, 1.955),TLine(-1.050, 1.955,-1.008, 1.898), TLine(-1.050, 1.963,-1.008, 2.021),TLine(-1.050, 2.021,-1.008, 1.963), TLine(-1.050, 2.029,-1.008, 2.086),TLine(-1.050, 2.086,-1.008, 2.029), TLine(-1.050, 2.618,-1.008, 2.675),TLine(-1.050, 2.675,-1.008, 2.618), TLine(-1.050, 2.683,-1.008, 2.741),TLine(-1.050, 2.741,-1.008, 2.683), TLine(-1.050, 2.749,-1.008, 2.806),TLine(-1.050, 2.806,-1.008, 2.749), TLine(-1.050, 2.814,-1.008, 2.872),TLine(-1.050, 2.872,-1.008, 2.814), TLine(-1.000,-2.094,-0.958,-2.037),TLine(-1.000,-2.037,-0.958,-2.094), TLine(-1.000,-2.029,-0.958,-1.971),TLine(-1.000,-1.971,-0.958,-2.029), TLine(-1.000,-1.963,-0.958,-1.906),TLine(-1.000,-1.906,-0.958,-1.963), TLine(-1.000,-1.898,-0.958,-1.841),TLine(-1.000,-1.841,-0.958,-1.898), TLine(-1.000,-1.309,-0.958,-1.252),TLine(-1.000,-1.252,-0.958,-1.309), TLine(-1.000,-1.244,-0.958,-1.186),TLine(-1.000,-1.186,-0.958,-1.244), TLine(-1.000,-1.178,-0.958,-1.121),TLine(-1.000,-1.121,-0.958,-1.178), TLine(-1.000,-1.113,-0.958,-1.055),TLine(-1.000,-1.055,-0.958,-1.113), TLine(-0.800,-2.094,-0.758,-2.037),TLine(-0.800,-2.037,-0.758,-2.094), TLine(-0.800,-2.029,-0.758,-1.971),TLine(-0.800,-1.971,-0.758,-2.029), TLine(-0.800,-1.963,-0.758,-1.906),TLine(-0.800,-1.906,-0.758,-1.963), TLine(-0.800,-1.898,-0.758,-1.841),TLine(-0.800,-1.841,-0.758,-1.898), TLine(-0.800,-1.833,-0.758,-1.775),TLine(-0.800,-1.775,-0.758,-1.833), TLine(-0.800,-1.767,-0.758,-1.710),TLine(-0.800,-1.710,-0.758,-1.767), TLine(-0.800,-1.702,-0.758,-1.644),TLine(-0.800,-1.644,-0.758,-1.702), TLine(-0.800,-1.636,-0.758,-1.579),TLine(-0.800,-1.579,-0.758,-1.636), TLine(-0.800,-1.571,-0.758,-1.513),TLine(-0.800,-1.513,-0.758,-1.571), TLine(-0.800,-1.505,-0.758,-1.448),TLine(-0.800,-1.448,-0.758,-1.505), TLine(-0.800,-1.440,-0.758,-1.382),TLine(-0.800,-1.382,-0.758,-1.440), TLine(-0.800,-1.374,-0.758,-1.317),TLine(-0.800,-1.317,-0.758,-1.374), TLine(-0.800,-1.309,-0.758,-1.252),TLine(-0.800,-1.252,-0.758,-1.309), TLine(-0.800,-1.244,-0.758,-1.186),TLine(-0.800,-1.186,-0.758,-1.244), TLine(-0.800,-1.178,-0.758,-1.121),TLine(-0.800,-1.121,-0.758,-1.178), TLine(-0.800,-1.113,-0.758,-1.055),TLine(-0.800,-1.055,-0.758,-1.113), TLine(-0.750,-2.094,-0.708,-2.037),TLine(-0.750,-2.037,-0.708,-2.094), TLine(-0.750,-2.029,-0.708,-1.971),TLine(-0.750,-1.971,-0.708,-2.029), TLine(-0.750,-1.963,-0.708,-1.906),TLine(-0.750,-1.906,-0.708,-1.963), TLine(-0.750,-1.898,-0.708,-1.841),TLine(-0.750,-1.841,-0.708,-1.898), TLine(-0.750,-1.833,-0.708,-1.775),TLine(-0.750,-1.775,-0.708,-1.833), TLine(-0.750,-1.767,-0.708,-1.710),TLine(-0.750,-1.710,-0.708,-1.767), TLine(-0.750,-1.702,-0.708,-1.644),TLine(-0.750,-1.644,-0.708,-1.702), TLine(-0.750,-1.636,-0.708,-1.579),TLine(-0.750,-1.579,-0.708,-1.636), TLine(-0.750,-1.571,-0.708,-1.513),TLine(-0.750,-1.513,-0.708,-1.571), TLine(-0.750,-1.505,-0.708,-1.448),TLine(-0.750,-1.448,-0.708,-1.505), TLine(-0.750,-1.440,-0.708,-1.382),TLine(-0.750,-1.382,-0.708,-1.440), TLine(-0.750,-1.374,-0.708,-1.317),TLine(-0.750,-1.317,-0.708,-1.374), TLine(-0.750,-1.309,-0.708,-1.252),TLine(-0.750,-1.252,-0.708,-1.309), TLine(-0.750,-1.244,-0.708,-1.186),TLine(-0.750,-1.186,-0.708,-1.244), TLine(-0.750,-1.178,-0.708,-1.121),TLine(-0.750,-1.121,-0.708,-1.178), TLine(-0.750,-1.113,-0.708,-1.055),TLine(-0.750,-1.055,-0.708,-1.113), TLine(-0.500,-2.094,-0.458,-2.037),TLine(-0.500,-2.037,-0.458,-2.094), TLine(-0.500,-2.029,-0.458,-1.971),TLine(-0.500,-1.971,-0.458,-2.029), TLine(-0.500,-1.963,-0.458,-1.906),TLine(-0.500,-1.906,-0.458,-1.963), TLine(-0.500,-1.898,-0.458,-1.841),TLine(-0.500,-1.841,-0.458,-1.898), TLine(-0.500,-1.309,-0.458,-1.252),TLine(-0.500,-1.252,-0.458,-1.309), TLine(-0.500,-1.244,-0.458,-1.186),TLine(-0.500,-1.186,-0.458,-1.244), TLine(-0.500,-1.178,-0.458,-1.121),TLine(-0.500,-1.121,-0.458,-1.178), TLine(-0.500,-1.113,-0.458,-1.055),TLine(-0.500,-1.055,-0.458,-1.113), TLine(-0.450,-2.094,-0.408,-2.037),TLine(-0.450,-2.037,-0.408,-2.094), TLine(-0.450,-2.029,-0.408,-1.971),TLine(-0.450,-1.971,-0.408,-2.029), TLine(-0.450,-1.963,-0.408,-1.906),TLine(-0.450,-1.906,-0.408,-1.963), TLine(-0.450,-1.898,-0.408,-1.841),TLine(-0.450,-1.841,-0.408,-1.898), TLine(-0.450,-1.309,-0.408,-1.252),TLine(-0.450,-1.252,-0.408,-1.309), TLine(-0.450,-1.244,-0.408,-1.186),TLine(-0.450,-1.186,-0.408,-1.244), TLine(-0.450,-1.178,-0.408,-1.121),TLine(-0.450,-1.121,-0.408,-1.178), TLine(-0.450,-1.113,-0.408,-1.055),TLine(-0.450,-1.055,-0.408,-1.113), TLine(-0.400,-2.094,-0.358,-2.037),TLine(-0.400,-2.037,-0.358,-2.094), TLine(-0.400,-2.029,-0.358,-1.971),TLine(-0.400,-1.971,-0.358,-2.029), TLine(-0.400,-1.963,-0.358,-1.906),TLine(-0.400,-1.906,-0.358,-1.963), TLine(-0.400,-1.898,-0.358,-1.841),TLine(-0.400,-1.841,-0.358,-1.898), TLine(-0.400,-1.309,-0.358,-1.252),TLine(-0.400,-1.252,-0.358,-1.309), TLine(-0.400,-1.244,-0.358,-1.186),TLine(-0.400,-1.186,-0.358,-1.244), TLine(-0.400,-1.178,-0.358,-1.121),TLine(-0.400,-1.121,-0.358,-1.178), TLine(-0.400,-1.113,-0.358,-1.055),TLine(-0.400,-1.055,-0.358,-1.113), TLine( 1.000,-2.880, 1.042,-2.822),TLine( 1.000,-2.822, 1.042,-2.880), TLine( 1.000,-2.814, 1.042,-2.757),TLine( 1.000,-2.757, 1.042,-2.814), TLine( 1.000,-2.749, 1.042,-2.691),TLine( 1.000,-2.691, 1.042,-2.749), TLine( 1.000,-2.683, 1.042,-2.626),TLine( 1.000,-2.626, 1.042,-2.683), TLine( 1.000,-2.094, 1.042,-2.037),TLine( 1.000,-2.037, 1.042,-2.094), TLine( 1.000,-2.029, 1.042,-1.971),TLine( 1.000,-1.971, 1.042,-2.029), TLine( 1.000,-1.963, 1.042,-1.906),TLine( 1.000,-1.906, 1.042,-1.963), TLine( 1.000,-1.898, 1.042,-1.841),TLine( 1.000,-1.841, 1.042,-1.898), TLine( 1.000,-1.309, 1.042,-1.252),TLine( 1.000,-1.252, 1.042,-1.309), TLine( 1.000,-1.244, 1.042,-1.186),TLine( 1.000,-1.186, 1.042,-1.244), TLine( 1.000,-1.178, 1.042,-1.121),TLine( 1.000,-1.121, 1.042,-1.178), TLine( 1.000,-1.113, 1.042,-1.055),TLine( 1.000,-1.055, 1.042,-1.113), TLine( 1.000,-0.524, 1.042,-0.466),TLine( 1.000,-0.466, 1.042,-0.524), TLine( 1.000,-0.458, 1.042,-0.401),TLine( 1.000,-0.401, 1.042,-0.458), TLine( 1.000,-0.393, 1.042,-0.335),TLine( 1.000,-0.335, 1.042,-0.393), TLine( 1.000,-0.327, 1.042,-0.270),TLine( 1.000,-0.270, 1.042,-0.327), TLine( 1.000, 0.262, 1.042, 0.319),TLine( 1.000, 0.319, 1.042, 0.262), TLine( 1.000, 0.327, 1.042, 0.385),TLine( 1.000, 0.385, 1.042, 0.327), TLine( 1.000, 0.393, 1.042, 0.450),TLine( 1.000, 0.450, 1.042, 0.393), TLine( 1.000, 0.458, 1.042, 0.516),TLine( 1.000, 0.516, 1.042, 0.458), TLine( 1.000, 1.047, 1.042, 1.105),TLine( 1.000, 1.105, 1.042, 1.047), TLine( 1.000, 1.113, 1.042, 1.170),TLine( 1.000, 1.170, 1.042, 1.113), TLine( 1.000, 1.178, 1.042, 1.236),TLine( 1.000, 1.236, 1.042, 1.178), TLine( 1.000, 1.244, 1.042, 1.301),TLine( 1.000, 1.301, 1.042, 1.244), TLine( 1.000, 1.309, 1.042, 1.366),TLine( 1.000, 1.366, 1.042, 1.309), TLine( 1.000, 1.833, 1.042, 1.890),TLine( 1.000, 1.890, 1.042, 1.833), TLine( 1.000, 1.898, 1.042, 1.955),TLine( 1.000, 1.955, 1.042, 1.898), TLine( 1.000, 1.963, 1.042, 2.021),TLine( 1.000, 2.021, 1.042, 1.963), TLine( 1.000, 2.029, 1.042, 2.086),TLine( 1.000, 2.086, 1.042, 2.029), TLine( 1.000, 2.618, 1.042, 2.675),TLine( 1.000, 2.675, 1.042, 2.618), TLine( 1.000, 2.683, 1.042, 2.741),TLine( 1.000, 2.741, 1.042, 2.683), TLine( 1.000, 2.749, 1.042, 2.806),TLine( 1.000, 2.806, 1.042, 2.749), TLine( 1.000, 2.814, 1.042, 2.872),TLine( 1.000, 2.872, 1.042, 2.814), TLine( 0.950,-2.094, 0.992,-2.037),TLine( 0.950,-2.037, 0.992,-2.094), TLine( 0.950,-2.029, 0.992,-1.971),TLine( 0.950,-1.971, 0.992,-2.029), TLine( 0.950,-1.963, 0.992,-1.906),TLine( 0.950,-1.906, 0.992,-1.963), TLine( 0.950,-1.898, 0.992,-1.841),TLine( 0.950,-1.841, 0.992,-1.898), TLine( 0.950,-1.309, 0.992,-1.252),TLine( 0.950,-1.252, 0.992,-1.309), TLine( 0.950,-1.244, 0.992,-1.186),TLine( 0.950,-1.186, 0.992,-1.244), TLine( 0.950,-1.178, 0.992,-1.121),TLine( 0.950,-1.121, 0.992,-1.178), TLine( 0.950,-1.113, 0.992,-1.055),TLine( 0.950,-1.055, 0.992,-1.113), TLine( 0.750,-2.094, 0.792,-2.037),TLine( 0.750,-2.037, 0.792,-2.094), TLine( 0.750,-2.029, 0.792,-1.971),TLine( 0.750,-1.971, 0.792,-2.029), TLine( 0.750,-1.963, 0.792,-1.906),TLine( 0.750,-1.906, 0.792,-1.963), TLine( 0.750,-1.898, 0.792,-1.841),TLine( 0.750,-1.841, 0.792,-1.898), TLine( 0.750,-1.833, 0.792,-1.775),TLine( 0.750,-1.775, 0.792,-1.833), TLine( 0.750,-1.767, 0.792,-1.710),TLine( 0.750,-1.710, 0.792,-1.767), TLine( 0.750,-1.702, 0.792,-1.644),TLine( 0.750,-1.644, 0.792,-1.702), TLine( 0.750,-1.636, 0.792,-1.579),TLine( 0.750,-1.579, 0.792,-1.636), TLine( 0.750,-1.571, 0.792,-1.513),TLine( 0.750,-1.513, 0.792,-1.571), TLine( 0.750,-1.505, 0.792,-1.448),TLine( 0.750,-1.448, 0.792,-1.505), TLine( 0.750,-1.440, 0.792,-1.382),TLine( 0.750,-1.382, 0.792,-1.440), TLine( 0.750,-1.374, 0.792,-1.317),TLine( 0.750,-1.317, 0.792,-1.374), TLine( 0.750,-1.309, 0.792,-1.252),TLine( 0.750,-1.252, 0.792,-1.309), TLine( 0.750,-1.244, 0.792,-1.186),TLine( 0.750,-1.186, 0.792,-1.244), TLine( 0.750,-1.178, 0.792,-1.121),TLine( 0.750,-1.121, 0.792,-1.178), TLine( 0.750,-1.113, 0.792,-1.055),TLine( 0.750,-1.055, 0.792,-1.113), TLine( 0.700,-2.094, 0.742,-2.037),TLine( 0.700,-2.037, 0.742,-2.094), TLine( 0.700,-2.029, 0.742,-1.971),TLine( 0.700,-1.971, 0.742,-2.029), TLine( 0.700,-1.963, 0.742,-1.906),TLine( 0.700,-1.906, 0.742,-1.963), TLine( 0.700,-1.898, 0.742,-1.841),TLine( 0.700,-1.841, 0.742,-1.898), TLine( 0.700,-1.833, 0.742,-1.775),TLine( 0.700,-1.775, 0.742,-1.833), TLine( 0.700,-1.767, 0.742,-1.710),TLine( 0.700,-1.710, 0.742,-1.767), TLine( 0.700,-1.702, 0.742,-1.644),TLine( 0.700,-1.644, 0.742,-1.702), TLine( 0.700,-1.636, 0.742,-1.579),TLine( 0.700,-1.579, 0.742,-1.636), TLine( 0.700,-1.571, 0.742,-1.513),TLine( 0.700,-1.513, 0.742,-1.571), TLine( 0.700,-1.505, 0.742,-1.448),TLine( 0.700,-1.448, 0.742,-1.505), TLine( 0.700,-1.440, 0.742,-1.382),TLine( 0.700,-1.382, 0.742,-1.440), TLine( 0.700,-1.374, 0.742,-1.317),TLine( 0.700,-1.317, 0.742,-1.374), TLine( 0.700,-1.309, 0.742,-1.252),TLine( 0.700,-1.252, 0.742,-1.309), TLine( 0.700,-1.244, 0.742,-1.186),TLine( 0.700,-1.186, 0.742,-1.244), TLine( 0.700,-1.178, 0.742,-1.121),TLine( 0.700,-1.121, 0.742,-1.178), TLine( 0.700,-1.113, 0.742,-1.055),TLine( 0.700,-1.055, 0.742,-1.113), TLine( 0.650,-1.178, 0.692,-1.121),TLine( 0.650,-1.121, 0.692,-1.178), TLine( 0.600,-1.178, 0.642,-1.121),TLine( 0.600,-1.121, 0.642,-1.178), TLine( 0.550,-1.178, 0.592,-1.121),TLine( 0.550,-1.121, 0.592,-1.178), TLine( 0.500,-1.178, 0.542,-1.121),TLine( 0.500,-1.121, 0.542,-1.178), TLine( 0.650,-1.113, 0.692,-1.055),TLine( 0.650,-1.055, 0.692,-1.113), TLine( 0.600,-1.113, 0.642,-1.055),TLine( 0.600,-1.055, 0.642,-1.113), TLine( 0.550,-1.113, 0.592,-1.055),TLine( 0.550,-1.055, 0.592,-1.113), TLine( 0.500,-1.113, 0.542,-1.055),TLine( 0.500,-1.055, 0.542,-1.113), TLine( 0.450,-2.094, 0.492,-2.037),TLine( 0.450,-2.037, 0.492,-2.094), TLine( 0.450,-2.029, 0.492,-1.971),TLine( 0.450,-1.971, 0.492,-2.029), TLine( 0.450,-1.963, 0.492,-1.906),TLine( 0.450,-1.906, 0.492,-1.963), TLine( 0.450,-1.898, 0.492,-1.841),TLine( 0.450,-1.841, 0.492,-1.898), TLine( 0.450,-1.309, 0.492,-1.252),TLine( 0.450,-1.252, 0.492,-1.309), TLine( 0.450,-1.244, 0.492,-1.186),TLine( 0.450,-1.186, 0.492,-1.244), TLine( 0.450,-1.178, 0.492,-1.121),TLine( 0.450,-1.121, 0.492,-1.178), TLine( 0.450,-1.113, 0.492,-1.055),TLine( 0.450,-1.055, 0.492,-1.113), TLine( 0.400,-2.094, 0.442,-2.037),TLine( 0.400,-2.037, 0.442,-2.094), TLine( 0.400,-2.029, 0.442,-1.971),TLine( 0.400,-1.971, 0.442,-2.029), TLine( 0.400,-1.963, 0.442,-1.906),TLine( 0.400,-1.906, 0.442,-1.963), TLine( 0.400,-1.898, 0.442,-1.841),TLine( 0.400,-1.841, 0.442,-1.898), TLine( 0.400,-1.309, 0.442,-1.252),TLine( 0.400,-1.252, 0.442,-1.309), TLine( 0.400,-1.244, 0.442,-1.186),TLine( 0.400,-1.186, 0.442,-1.244), TLine( 0.400,-1.178, 0.442,-1.121),TLine( 0.400,-1.121, 0.442,-1.178), TLine( 0.400,-1.113, 0.442,-1.055),TLine( 0.400,-1.055, 0.442,-1.113), TLine( 0.350,-2.094, 0.392,-2.037),TLine( 0.350,-2.037, 0.392,-2.094), TLine( 0.350,-2.029, 0.392,-1.971),TLine( 0.350,-1.971, 0.392,-2.029), TLine( 0.350,-1.963, 0.392,-1.906),TLine( 0.350,-1.906, 0.392,-1.963), TLine( 0.350,-1.898, 0.392,-1.841),TLine( 0.350,-1.841, 0.392,-1.898), TLine( 0.350,-1.309, 0.392,-1.252),TLine( 0.350,-1.252, 0.392,-1.309), TLine( 0.350,-1.244, 0.392,-1.186),TLine( 0.350,-1.186, 0.392,-1.244), TLine( 0.350,-1.178, 0.392,-1.121),TLine( 0.350,-1.121, 0.392,-1.178), TLine( 0.350,-1.113, 0.392,-1.055),TLine( 0.350,-1.055, 0.392,-1.113), TLine(-0.050,-3.142,-0.008,-3.084),TLine(-0.050,-3.084,-0.008,-3.142), TLine(-0.050,-3.076,-0.008,-3.019),TLine(-0.050,-3.019,-0.008,-3.076), TLine(-0.050,-3.011,-0.008,-2.953),TLine(-0.050,-2.953,-0.008,-3.011), TLine( 0.000,-3.142, 0.042,-3.084),TLine( 0.000,-3.084, 0.042,-3.142), TLine( 0.000,-3.076, 0.042,-3.019),TLine( 0.000,-3.019, 0.042,-3.076), TLine( 0.000,-3.011, 0.042,-2.953),TLine( 0.000,-2.953, 0.042,-3.011), TLine( 0.050,-3.142, 0.092,-3.084),TLine( 0.050,-3.084, 0.092,-3.142), TLine( 0.050,-3.076, 0.092,-3.019),TLine( 0.050,-3.019, 0.092,-3.076), TLine( 0.050,-3.011, 0.092,-2.953),TLine( 0.050,-2.953, 0.092,-3.011), TLine(-0.050,-2.553,-0.008,-2.495),TLine(-0.050,-2.495,-0.008,-2.553), TLine(-0.050,-2.487,-0.008,-2.430),TLine(-0.050,-2.430,-0.008,-2.487), TLine(-0.050,-2.422,-0.008,-2.364),TLine(-0.050,-2.364,-0.008,-2.422), TLine(-0.050,-2.356,-0.008,-2.299),TLine(-0.050,-2.299,-0.008,-2.356), TLine(-0.050,-2.291,-0.008,-2.233),TLine(-0.050,-2.233,-0.008,-2.291), TLine(-0.050,-2.225,-0.008,-2.168),TLine(-0.050,-2.168,-0.008,-2.225), TLine(-0.050,-2.160,-0.008,-2.102),TLine(-0.050,-2.102,-0.008,-2.160), TLine(-0.050,-2.094,-0.008,-2.037),TLine(-0.050,-2.037,-0.008,-2.094), TLine(-0.050,-2.029,-0.008,-1.971),TLine(-0.050,-1.971,-0.008,-2.029), TLine(-0.050,-1.963,-0.008,-1.906),TLine(-0.050,-1.906,-0.008,-1.963), TLine(-0.050,-1.898,-0.008,-1.841),TLine(-0.050,-1.841,-0.008,-1.898), TLine( 0.000,-2.553, 0.042,-2.495),TLine( 0.000,-2.495, 0.042,-2.553), TLine( 0.000,-2.487, 0.042,-2.430),TLine( 0.000,-2.430, 0.042,-2.487), TLine( 0.000,-2.422, 0.042,-2.364),TLine( 0.000,-2.364, 0.042,-2.422), TLine( 0.000,-2.356, 0.042,-2.299),TLine( 0.000,-2.299, 0.042,-2.356), TLine( 0.000,-2.291, 0.042,-2.233),TLine( 0.000,-2.233, 0.042,-2.291), TLine( 0.000,-2.225, 0.042,-2.168),TLine( 0.000,-2.168, 0.042,-2.225), TLine( 0.000,-2.160, 0.042,-2.102),TLine( 0.000,-2.102, 0.042,-2.160), TLine( 0.000,-2.094, 0.042,-2.037),TLine( 0.000,-2.037, 0.042,-2.094), TLine( 0.000,-2.029, 0.042,-1.971),TLine( 0.000,-1.971, 0.042,-2.029), TLine( 0.000,-1.963, 0.042,-1.906),TLine( 0.000,-1.906, 0.042,-1.963), TLine( 0.000,-1.898, 0.042,-1.841),TLine( 0.000,-1.841, 0.042,-1.898), TLine( 0.000,-1.833, 0.042,-1.775),TLine( 0.000,-1.775, 0.042,-1.833), TLine( 0.000,-1.767, 0.042,-1.710),TLine( 0.000,-1.710, 0.042,-1.767), TLine( 0.000,-1.702, 0.042,-1.644),TLine( 0.000,-1.644, 0.042,-1.702), TLine( 0.000,-1.636, 0.042,-1.579),TLine( 0.000,-1.579, 0.042,-1.636), TLine( 0.000,-1.571, 0.042,-1.513),TLine( 0.000,-1.513, 0.042,-1.571), TLine( 0.000,-1.505, 0.042,-1.448),TLine( 0.000,-1.448, 0.042,-1.505), TLine( 0.000,-1.440, 0.042,-1.382),TLine( 0.000,-1.382, 0.042,-1.440), TLine( 0.000,-1.374, 0.042,-1.317),TLine( 0.000,-1.317, 0.042,-1.374), TLine(-0.050,-1.309,-0.008,-1.252),TLine(-0.050,-1.252,-0.008,-1.309), TLine(-0.050,-1.244,-0.008,-1.186),TLine(-0.050,-1.186,-0.008,-1.244), TLine(-0.050,-1.178,-0.008,-1.121),TLine(-0.050,-1.121,-0.008,-1.178), TLine(-0.050,-1.113,-0.008,-1.055),TLine(-0.050,-1.055,-0.008,-1.113), TLine(-0.050,-1.047,-0.008,-0.990),TLine(-0.050,-0.990,-0.008,-1.047), TLine(-0.050,-0.982,-0.008,-0.924),TLine(-0.050,-0.924,-0.008,-0.982), TLine(-0.050,-0.916,-0.008,-0.859),TLine(-0.050,-0.859,-0.008,-0.916), TLine(-0.050,-0.851,-0.008,-0.793),TLine(-0.050,-0.793,-0.008,-0.851), TLine(-0.050,-0.785,-0.008,-0.728),TLine(-0.050,-0.728,-0.008,-0.785), TLine(-0.050,-0.720,-0.008,-0.662),TLine(-0.050,-0.662,-0.008,-0.720), TLine(-0.050,-0.654,-0.008,-0.597),TLine(-0.050,-0.597,-0.008,-0.654), TLine( 0.000,-1.309, 0.042,-1.252),TLine( 0.000,-1.252, 0.042,-1.309), TLine( 0.000,-1.244, 0.042,-1.186),TLine( 0.000,-1.186, 0.042,-1.244), TLine( 0.000,-1.178, 0.042,-1.121),TLine( 0.000,-1.121, 0.042,-1.178), TLine( 0.000,-1.113, 0.042,-1.055),TLine( 0.000,-1.055, 0.042,-1.113), TLine( 0.000,-1.047, 0.042,-0.990),TLine( 0.000,-0.990, 0.042,-1.047), TLine( 0.000,-0.982, 0.042,-0.924),TLine( 0.000,-0.924, 0.042,-0.982), TLine( 0.000,-0.916, 0.042,-0.859),TLine( 0.000,-0.859, 0.042,-0.916), TLine( 0.000,-0.851, 0.042,-0.793),TLine( 0.000,-0.793, 0.042,-0.851), TLine( 0.000,-0.785, 0.042,-0.728),TLine( 0.000,-0.728, 0.042,-0.785), TLine( 0.000,-0.720, 0.042,-0.662),TLine( 0.000,-0.662, 0.042,-0.720), TLine( 0.000,-0.654, 0.042,-0.597),TLine( 0.000,-0.597, 0.042,-0.654), TLine(-0.100,-0.196,-0.058,-0.139),TLine(-0.100,-0.139,-0.058,-0.196), TLine(-0.100,-0.131,-0.058,-0.073),TLine(-0.100,-0.073,-0.058,-0.131), TLine(-0.100,-0.065,-0.058,-0.008),TLine(-0.100,-0.008,-0.058,-0.065), TLine(-0.100, 0.000,-0.058, 0.057),TLine(-0.100, 0.057,-0.058, 0.000), TLine(-0.100, 0.065,-0.058, 0.123),TLine(-0.100, 0.123,-0.058, 0.065), TLine(-0.100, 0.131,-0.058, 0.188),TLine(-0.100, 0.188,-0.058, 0.131), TLine(-0.050,-0.196,-0.008,-0.139),TLine(-0.050,-0.139,-0.008,-0.196), TLine(-0.050,-0.131,-0.008,-0.073),TLine(-0.050,-0.073,-0.008,-0.131), TLine(-0.050,-0.065,-0.008,-0.008),TLine(-0.050,-0.008,-0.008,-0.065), TLine(-0.050, 0.000,-0.008, 0.057),TLine(-0.050, 0.057,-0.008, 0.000), TLine(-0.050, 0.065,-0.008, 0.123),TLine(-0.050, 0.123,-0.008, 0.065), TLine(-0.050, 0.131,-0.008, 0.188),TLine(-0.050, 0.188,-0.008, 0.131), TLine(-0.050, 0.589,-0.008, 0.646),TLine(-0.050, 0.646,-0.008, 0.589), TLine(-0.050, 0.654,-0.008, 0.712),TLine(-0.050, 0.712,-0.008, 0.654), TLine(-0.050, 0.720,-0.008, 0.777),TLine(-0.050, 0.777,-0.008, 0.720), TLine(-0.050, 0.785,-0.008, 0.843),TLine(-0.050, 0.843,-0.008, 0.785), TLine(-0.050, 0.851,-0.008, 0.908),TLine(-0.050, 0.908,-0.008, 0.851), TLine(-0.050, 0.916,-0.008, 0.974),TLine(-0.050, 0.974,-0.008, 0.916), TLine(-0.150, 1.374,-0.108, 1.432),TLine(-0.150, 1.432,-0.108, 1.374), TLine(-0.150, 1.440,-0.108, 1.497),TLine(-0.150, 1.497,-0.108, 1.440), TLine(-0.150, 1.505,-0.108, 1.563),TLine(-0.150, 1.563,-0.108, 1.505), TLine(-0.150, 1.571,-0.108, 1.628),TLine(-0.150, 1.628,-0.108, 1.571), TLine(-0.150, 1.636,-0.108, 1.694),TLine(-0.150, 1.694,-0.108, 1.636), TLine(-0.150, 1.702,-0.108, 1.759),TLine(-0.150, 1.759,-0.108, 1.702), TLine(-0.100, 1.374,-0.058, 1.432),TLine(-0.100, 1.432,-0.058, 1.374), TLine(-0.100, 1.440,-0.058, 1.497),TLine(-0.100, 1.497,-0.058, 1.440), TLine(-0.100, 1.505,-0.058, 1.563),TLine(-0.100, 1.563,-0.058, 1.505), TLine(-0.100, 1.571,-0.058, 1.628),TLine(-0.100, 1.628,-0.058, 1.571), TLine(-0.100, 1.636,-0.058, 1.694),TLine(-0.100, 1.694,-0.058, 1.636), TLine(-0.100, 1.702,-0.058, 1.759),TLine(-0.100, 1.759,-0.058, 1.702), TLine(-0.050, 1.374,-0.008, 1.432),TLine(-0.050, 1.432,-0.008, 1.374), TLine(-0.050, 1.440,-0.008, 1.497),TLine(-0.050, 1.497,-0.008, 1.440), TLine(-0.050, 1.505,-0.008, 1.563),TLine(-0.050, 1.563,-0.008, 1.505), TLine(-0.050, 1.571,-0.008, 1.628),TLine(-0.050, 1.628,-0.008, 1.571), TLine(-0.050, 1.636,-0.008, 1.694),TLine(-0.050, 1.694,-0.008, 1.636), TLine(-0.050, 1.702,-0.008, 1.759),TLine(-0.050, 1.759,-0.008, 1.702), TLine( 0.000, 1.374, 0.042, 1.432),TLine( 0.000, 1.432, 0.042, 1.374), TLine( 0.000, 1.440, 0.042, 1.497),TLine( 0.000, 1.497, 0.042, 1.440), TLine( 0.000, 1.505, 0.042, 1.563),TLine( 0.000, 1.563, 0.042, 1.505), TLine( 0.000, 1.571, 0.042, 1.628),TLine( 0.000, 1.628, 0.042, 1.571), TLine( 0.000, 1.636, 0.042, 1.694),TLine( 0.000, 1.694, 0.042, 1.636), TLine( 0.000, 1.702, 0.042, 1.759),TLine( 0.000, 1.759, 0.042, 1.702), TLine(-0.100, 2.160,-0.058, 2.217),TLine(-0.100, 2.217,-0.058, 2.160), TLine(-0.100, 2.225,-0.058, 2.283),TLine(-0.100, 2.283,-0.058, 2.225), TLine(-0.100, 2.291,-0.058, 2.348),TLine(-0.100, 2.348,-0.058, 2.291), TLine(-0.100, 2.356,-0.058, 2.414),TLine(-0.100, 2.414,-0.058, 2.356), TLine(-0.100, 2.422,-0.058, 2.479),TLine(-0.100, 2.479,-0.058, 2.422), TLine(-0.100, 2.487,-0.058, 2.545),TLine(-0.100, 2.545,-0.058, 2.487), TLine(-0.100, 2.553,-0.058, 2.610),TLine(-0.100, 2.610,-0.058, 2.553), TLine(-0.050, 2.160,-0.008, 2.217),TLine(-0.050, 2.217,-0.008, 2.160), TLine(-0.050, 2.225,-0.008, 2.283),TLine(-0.050, 2.283,-0.008, 2.225), TLine(-0.050, 2.291,-0.008, 2.348),TLine(-0.050, 2.348,-0.008, 2.291), TLine(-0.050, 2.356,-0.008, 2.414),TLine(-0.050, 2.414,-0.008, 2.356), TLine(-0.050, 2.422,-0.008, 2.479),TLine(-0.050, 2.479,-0.008, 2.422), TLine(-0.050, 2.487,-0.008, 2.545),TLine(-0.050, 2.545,-0.008, 2.487), TLine(-0.050, 2.553,-0.008, 2.610),TLine(-0.050, 2.610,-0.008, 2.553), TLine( 0.000, 2.160, 0.042, 2.217),TLine( 0.000, 2.217, 0.042, 2.160), TLine( 0.000, 2.225, 0.042, 2.283),TLine( 0.000, 2.283, 0.042, 2.225), TLine( 0.000, 2.291, 0.042, 2.348),TLine( 0.000, 2.348, 0.042, 2.291), TLine( 0.000, 2.356, 0.042, 2.414),TLine( 0.000, 2.414, 0.042, 2.356), TLine( 0.000, 2.422, 0.042, 2.479),TLine( 0.000, 2.479, 0.042, 2.422), TLine( 0.000, 2.487, 0.042, 2.545),TLine( 0.000, 2.545, 0.042, 2.487), TLine( 0.000, 2.553, 0.042, 2.610),TLine( 0.000, 2.610, 0.042, 2.553), TLine( 0.050, 2.160, 0.092, 2.217),TLine( 0.050, 2.217, 0.092, 2.160), TLine( 0.050, 2.225, 0.092, 2.283),TLine( 0.050, 2.283, 0.092, 2.225), TLine( 0.050, 2.291, 0.092, 2.348),TLine( 0.050, 2.348, 0.092, 2.291), TLine( 0.050, 2.356, 0.092, 2.414),TLine( 0.050, 2.414, 0.092, 2.356), TLine( 0.050, 2.422, 0.092, 2.479),TLine( 0.050, 2.479, 0.092, 2.422), TLine( 0.050, 2.487, 0.092, 2.545),TLine( 0.050, 2.545, 0.092, 2.487), TLine( 0.050, 2.553, 0.092, 2.610),TLine( 0.050, 2.610, 0.092, 2.553), TLine(-0.050, 2.618,-0.008, 2.675),TLine(-0.050, 2.675,-0.008, 2.618), TLine(-0.050, 2.683,-0.008, 2.741),TLine(-0.050, 2.741,-0.008, 2.683), TLine(-0.050, 2.749,-0.008, 2.806),TLine(-0.050, 2.806,-0.008, 2.749), TLine(-0.050, 2.814,-0.008, 2.872),TLine(-0.050, 2.872,-0.008, 2.814), TLine(-0.050, 2.880,-0.008, 2.937),TLine(-0.050, 2.937,-0.008, 2.880), TLine(-0.050, 2.945,-0.008, 3.003),TLine(-0.050, 3.003,-0.008, 2.945), TLine(-0.050, 3.011,-0.008, 3.068),TLine(-0.050, 3.068,-0.008, 3.011), TLine(-0.050, 3.076,-0.008, 3.134),TLine(-0.050, 3.134,-0.008, 3.076), TLine( 0.000, 2.618, 0.042, 2.675),TLine( 0.000, 2.675, 0.042, 2.618), TLine( 0.000, 2.683, 0.042, 2.741),TLine( 0.000, 2.741, 0.042, 2.683), TLine( 0.000, 2.749, 0.042, 2.806),TLine( 0.000, 2.806, 0.042, 2.749), TLine( 0.000, 2.814, 0.042, 2.872),TLine( 0.000, 2.872, 0.042, 2.814), TLine( 0.000, 2.880, 0.042, 2.937),TLine( 0.000, 2.937, 0.042, 2.880), TLine( 0.000, 2.945, 0.042, 3.003),TLine( 0.000, 3.003, 0.042, 2.945), TLine( 0.000, 3.011, 0.042, 3.068),TLine( 0.000, 3.068, 0.042, 3.011), TLine( 0.000, 3.076, 0.042, 3.134),TLine( 0.000, 3.134, 0.042, 3.076), TLine( 0.050, 2.945, 0.092, 3.003),TLine( 0.050, 3.003, 0.092, 2.945), TLine( 0.050, 3.011, 0.092, 3.068),TLine( 0.050, 3.068, 0.092, 3.011), TLine( 0.050, 3.076, 0.092, 3.134),TLine( 0.050, 3.134, 0.092, 3.076), TLine(-2.750,-3.207,-2.708,-3.150),TLine(-2.750,-3.150,-2.708,-3.207)
      }

## muChain1/muonType
      hist muChain1_EFMuonType_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
        ## need to develop algorithm!
      }
      hist muChain1_allEFMuons_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_allEFMuons_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_allEFMuons_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain1_Combined_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain1/muonType
        algorithm = TRMUO_GatherData
      }

#~~~~

#~~~~
## mu14/etaphi
      hist muChain2_L2MuonSA_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain2_L2MuonSA_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/etaphi
        algorithm = TRMUO_GatherData
      }
      hist muChain2_L2MuonSA_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain2_MuComb_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/etaphi
        algorithm = alg_eta_vs_phi
      }
      hist muChain2_EFmuon_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/etaphi
        algorithm = alg_eta_vs_phi
      }
#      hist muChain2_L2MuonSA_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }
#      hist muChain2_MuComb_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }
#      hist muChain2_EFmuon_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi
#      }

## muChain2/muonType
      hist muChain2_EFMuonType_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
        ## need to develop algorithm!
      }
      hist muChain2_allEFMuons_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain2_allEFMuons_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain2_allEFMuons_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain2_Combined_pt_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain2_Combined_eta_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
      hist muChain2_Combined_phi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChain2/muonType
        algorithm = TRMUO_GatherData
      }
#~~~~


## mu15_MSonly/etaphi
      hist muChainMSonly1_L2MuonSA_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChainMSonly1/etaphi
        algorithm = alg_eta_vs_phi_barrel
      }
      hist muChainMSonly1_MuonEFSA_etaphi_wrt_MuidCB {
        output = HLT/TRMUO/Expert/muChainMSonly1/etaphi
        algorithm = alg_eta_vs_phi_barrel
      }
# coarse 1d histos
      hist muChainMSonly1_L2MuonSA_etaphi_coarse1d_wrt_MuidCB {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
      }
      hist muChainMSonly1_MuonEFSA_etaphi_coarse1d_wrt_MuidCB {
        output = HLT/TRMUO/Expert/etaphi
        algorithm = TRMUO_GatherData
        display = TCanvas(900,490)
      }
#      hist muChainMSonly1_L2MuonSA_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi_barrel
#      }
#      hist muChainMSonly1_MuonEFSA_etaphi_wrt_MuidCB@shifter {
#        output = HLT/TRMUO/Shift/Etaphi
#        algorithm = alg_eta_vs_phi_barrel
#      }


    }

#Tag and Probe with Z
    dir MuZTP {
#++++
      dir muChain1 {
# L1
        hist muZTP_eff_L1_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L1_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L1_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

# L2
        hist muZTP_eff_L2_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L2_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L2_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

# EF
        hist muZTP_eff_EF_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_cut_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_EF_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_EF_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

# L2wrtL1
        hist muZTP_eff_L2wrtL1_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL1
        hist muZTP_eff_EFwrtL1_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL2
        hist muZTP_eff_EFwrtL2_Pt_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_4bins_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_B_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_EC_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Eta_muChain1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
      }
#++++


#++++
      dir muChain2 {
# L1
        hist muZTP_eff_L1_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L1_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L1_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L1
          algorithm = TRMUO_GatherDataNoRef
        }

# L2
        hist muZTP_eff_L2_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L2_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L2_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2
          algorithm = TRMUO_GatherDataNoRef
        }

# EF
        hist muZTP_eff_EF_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_cut_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_EF_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_EF_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EF
          algorithm = TRMUO_GatherDataNoRef
        }

# L2wrtL1
        hist muZTP_eff_L2wrtL1_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL1
        hist muZTP_eff_EFwrtL1_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL2
        hist muZTP_eff_EFwrtL2_Pt_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_4bins_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_B_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_EC_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Eta_muChain2 {
          output = HLT/TRMUO/Expert/JpsiTP/muChain2/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
      }
#++++


      dir muChainMSonly1 {
# L1
        hist muZTP_eff_L1_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L1_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_1bin_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L1_Eta_2bins_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L1_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L1_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L1
          algorithm = TRMUO_GatherDataNoRef
        }

# L2
        hist muZTP_eff_L2_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_L2_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_1bin_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2_Eta_2bins_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_L2_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_L2_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2
          algorithm = TRMUO_GatherDataNoRef
        }

# EF
        hist muZTP_eff_EF_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

        hist muZTP_eff_EF_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_1bin_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EF_Eta_2bins_cut_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_EtaPhi_EF_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EtaPhi_EF_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EF
          algorithm = TRMUO_GatherDataNoRef
        }

# L2wrtL1
        hist muZTP_eff_L2wrtL1_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_L2wrtL1_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/L2wrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL1
        hist muZTP_eff_EFwrtL1_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL1_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL1
          algorithm = TRMUO_GatherDataNoRef
        }

# EFwrtL2
        hist muZTP_eff_EFwrtL2_Pt_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Pt_B_4bins_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_B_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Phi_EC_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
        hist muZTP_eff_EFwrtL2_Eta_muChainMSonly1 {
          output = HLT/TRMUO/Expert/JpsiTP/muChainMSonly1/EFwrtL2
          algorithm = TRMUO_GatherDataNoRef
        }
      }
#++++



    }

# end dir muZTP

# rate
# to be done: mu30/40/50/70_MSonly, mu80 to be added.
    dir Rate {


      dir Ratio {

#default display 550x490

# mu15_MSonly
        hist muChainMSonly1_Triggers_Per_Event {
          output = HLT/TRMUO/Expert/muChainMSonly1
          algorithm = TRMUO_GatherDataNoRef
        }

# mu10
        hist muChain1_Triggers_Per_Event {
          output = HLT/TRMUO/Expert/muChain1
          algorithm = TRMUO_GatherDataNoRef
        }


# mu14
        hist muChain2_Triggers_Per_Event {
          output = HLT/TRMUO/Expert/muChain2
          algorithm = TRMUO_GatherDataNoRef
        }

      }
    }
  } # MuonMon
} # HLT

##############
# Algorithms
##############

algorithm TRMUO_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TRMUO_GatherDataNoRef {
  libname = libdqm_algorithms.so
  name = GatherData
}

compositeAlgorithm Muon_Bins_LessThan_Threshold&GatherData {
  subalgs = Bins_LessThan_Threshold,GatherData
  libnames = libdqm_algorithms.so
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm Muon_Bins_LessThan_Threshold&GatherData {
  name = Muon_Bins_LessThan_Threshold&GatherData
  BinThreshold = -1
  thresholds = th_Muon_Bins_LessThan_Threshold&GatherData
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_L2MuonSA_residual_barrel {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
  thresholds = th_L2MuonSA_residual_barrel
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_L2MuonSA_residual_endcap {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 0.
  MinStat = 1000
  thresholds = th_L2MuonSA_residual_endcap
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_eta_vs_phi {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 90000
# 108*96 = 10368
# no trigger for |eta|>2.4 --> 12bins
# 96*96 = 9216
# 10% due to barrel holes
# 8294
  TotalBins = 8294
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_eta_vs_phi_barrel {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_eta_vs_phi_barrel
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 90000
# 108*96 = 10368
# no trigger for |eta|>2.4 --> 12bins
# 96*96 = 9216
# 10% due to barrel holes
# 8294
  TotalBins = 8294
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm alg_muComb_ptratio {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
  SubtractFromMean = 1.
  MinStat = 1000
  thresholds = th_muComb_ptratio
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

#for Shift
algorithm fourbins_zero {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_L1mux
  BinThreshold = 8
  MinStat = 500
#  NotEqual = 1
  PublishBins = 1
}

algorithm effalgmin_ESid_mu20 {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_ESid_mu20_th
#reference = HLTmuonShiftES20thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_highpt3bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_highpt3bins_th
#reference = HLTmuonShiftES20thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_highpt2bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_highpt2bins_th
#reference = HLTmuonShiftES20thr_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

#generic bin comparison
algorithm effalgmin_4bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_generic4bins_th
#  reference = HLTmuonShift2012thr_HI_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_3bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_generic3bins_th
#reference = HLTmuonShift2012thr_HI_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm effalgmin_2bins {
  libname = libdqm_algorithms.so
  name = BinContentComp&BinContentDump
  thresholds = effmin_generic2bins_th
#reference = HLTmuonShift2012thr_HI_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 2.0
  LessThan = 1
  PublishBins = 1
  PublishType = 3
}

algorithm coarse1dcomp_mu8_L2MuonSA {
  libname = libdqm_algorithms.so
  name = BinContentComp
  thresholds = coarse1dcomp_mu8_L2MuonSA_th
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  NSigma = 3.0
  LessThan = 1
  NormRef = 1
  PublishBins = 1
  IncludeRefError = 1
  MinStat = 500000
}

compositeAlgorithm BinContentComp&BinContentDump {
  subalgs = BinContentComp,BinContentDump
#reference = HLTmuonShift2012thr_HI_Ref
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

compositeAlgorithm BinContentComp&BinContentDump2 {
  subalgs = BinContentComp,BinContentDump
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TRMUO_fermi_fit_mu15_MSonly_EStag_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_EStag_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFMS_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

# Shifter ESindep for HI

algorithm TRMUO_fermi_fit_mu15_MSonly_ESindep_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_ESindep_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_ESindep_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_ESindep_MuonEFMS_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_ESindep_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_ESindep_MuonEFSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
#  MinSignificance = 2.0
}




algorithm TRMUO_fermi_fit_mu10_ESid_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_ESid_L2MuonSA_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu10_ESid_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_ESid_muComb_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu10_ESid_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_ESid_MuonEFCB_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu10_ESid_MuGirlEF_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_ESid_MuGirlEF_upstream
  MinPoint = 40
  ImproveFit = 1.0
}



# mu6 Shifter
algorithm TRMUO_fermi_fit_mu14_ESid_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_ESid_L2MuonSA_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu14_ESid_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_ESid_muComb_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu14_ESid_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_ESid_MuonEFCB_upstream
  MinPoint = 30
  ImproveFit = 1.0
#  MinSignificance = 2.0
}

algorithm TRMUO_fermi_fit_mu14_ESid_MuGirlEF_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_ESid_MuGirlEF_upstream
  MinPoint = 40
  ImproveFit = 1.0
#  MinSignificance = 2.0
}



# Generic L1 mu15 fit
algorithm TRMUO_fermi_fit_L1MU0_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU0
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_L1MU0_barrel_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU0_barrel
  MinPoint = 40
  ImproveFit = 1.0
}
#attention here, change the MinPoint from 50 to 40

algorithm TRMUO_fermi_fit_L1MU0_endcap_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_L1MU0_endcap
  MinPoint = 50
  ImproveFit = 1.0
}


# for the mu4_mu4noL1 fit
algorithm TRMUO_fermi_fit_mu4_mu4noL1_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu4_mu4noL1
  MinPoint = 30
  ImproveFit = 1.0
}

# // mu4_mu4noL1 end

algorithm TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream
  MinPoint = 30
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_upstream
  MinPoint = 30
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream
  MinPoint = 30
  ImproveFit = 1.0
}



# mu10_MSonly_barrel wrt offline
algorithm TRMUO_fermi_fit_mu15_MSonly_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change the MinPoint from 80 to 50


# //



# mu8
algorithm TRMUO_fermi_fit_mu10_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_muComb_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_muComb_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFCB_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFCB_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit

algorithm TRMUO_fermi_fit_mu10_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_muComb_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFMS_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFCB_upstream
  MinPoint = 50
  ImproveFit = 1.0
}


# mu8 wrt offline
algorithm TRMUO_fermi_fit_mu10_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_muComb {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_muComb
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFCB {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFCB
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu10_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_muComb_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_muComb
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFMS
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFSA
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu10_MuonEFCB_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu10_MuonEFCB
  MinPoint = 60
  ImproveFit = 1.0
}

#// attention here, change the MinPoint from 80 to 50
# //

# mu6
algorithm TRMUO_fermi_fit_mu14_L2MuonSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_L2MuonSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_muComb_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_muComb_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFMS_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFMS_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFSA_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFSA_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFCB_upstream {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFCB_upstream
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu14_L2MuonSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_L2MuonSA_upstream
  MinPoint = 50
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_muComb_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_muComb_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFMS_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFMS_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFSA_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFSA_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFCB_upstream_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFCB_upstream
  MinPoint = 40
  ImproveFit = 1.0
}

# mu6 wrt offline
algorithm TRMUO_fermi_fit_mu14_L2MuonSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_L2MuonSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_muComb {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_muComb
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFMS {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFMS
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFSA {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFSA
  MinStat = 1000
  LikelihoodFit = 2.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFCB {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFCB
  MinStat = 1000
  LikelihoodFit = 2.0
}

# _Fit
algorithm TRMUO_fermi_fit_mu14_L2MuonSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_L2MuonSA
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu14_muComb_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_muComb
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50

algorithm TRMUO_fermi_fit_mu14_MuonEFMS_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFMS
  MinPoint = 80
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFSA_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFSA
  MinPoint = 80
  ImproveFit = 1.0
}

algorithm TRMUO_fermi_fit_mu14_MuonEFCB_Fit {
  libname = libdqm_algorithms.so
  name = Simple_fermi_Fit_Graph
  thresholds = th_TRMUO_fermi_fit_mu14_MuonEFCB
  MinPoint = 50
  ImproveFit = 1.0
}
# attention here, change MinPoint from 80 to 50




#
# summary
#
algorithm TRMUO_WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}
algorithm TRMUO_SimpleSummary {
  libname = libdqm_summaries.so
  name = SimpleSummary
}

algorithm TRMUO_AlwaysGreenSummary {
  libname = libdqm_summaries.so
  name = AlwaysGreenSummary
}

algorithm TRMUO_AlwaysUndefinedSummary {
  libname = libdqm_summaries.so
  name = AlwaysUndefinedSummary
}



###############
# Thresholds
###############

thresholds th_L1mux {
  limits NBins {
    warning = 4
    error = 5
  }
}

thresholds th_Muon_Bins_LessThan_Threshold&GatherData {
  limits NBins {
    warning = 100
    error = 1000
  }
}

thresholds effmin_ESid_mu20_th {
  limits NBins {
    warning = 0
    error = 4
  }
}

thresholds effmin_highpt3bins_th {
  limits NBins {
    warning = 0
    error = 3
  }
}

thresholds effmin_highpt2bins_th {
  limits NBins {
    warning = 0
    error = 2
  }
}

thresholds effmin_generic4bins_th {
  limits NBins {
    warning = 0
    error = 4
  }
}

thresholds effmin_generic3bins_th {
  limits NBins {
    warning = 0
    error = 3
  }
}

thresholds effmin_generic2bins_th {
  limits NBins {
    warning = 0
    error = 2
  }
}

#coarse1d number of bins
thresholds coarse1dcomp_mu8_L2MuonSA_th {
  limits NBins {
    warning = 5
    error = 10
  }
}


thresholds th_L2MuonSA_residual_barrel {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}
thresholds th_L2MuonSA_residual_endcap {
 limits Sigma {
    warning = 3.0
    error = 5.0
  }
  limits AbsMean {
    warning = 3.0
    error = 5.0
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}

thresholds th_eta_vs_phi {
  limits NBins {
# 90%
# 8294*0.9 = 7464
# 80% for the moment
# 8294*0.8 = 6635
    warning = 8500
    error = 8499
  }
}

thresholds th_eta_vs_phi_barrel {
  limits NBins {
# 90%
# 8294*0.9 = 7464
# 30% for the moment
# 8294*0.8 = 2487
    warning = 3300
    error = 3299
  }
}

thresholds th_muComb_ptratio {
 limits Sigma {
    warning = 0.4
    error = 0.6
  }
  limits AbsMean {
    warning = 0.4
    error = 0.6
  }
#  limits Chi2_per_NDF {
#    warning = 30.
#    error = 50.
#  }
}


#for Shift
thresholds th_TRMUO_fermi_fit_mu15_MSonly_EStag_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.90
    error = 0.899
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
#  limits Threshold {
#    warning = 10.0
#    error   = 12.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_EStag_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.93
    error = 0.929
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

# shifter for HI

thresholds th_TRMUO_fermi_fit_mu10_ESid_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.93
    error = 0.929
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_ESid_muComb_upstream {
  limits Plateau {
    warning = 0.95
    error = 0.949
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu10_ESid_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.95
    error = 0.949
  }
  limits Threshold {
    warning = 10.0 
    error   = 11.0
  }
  limits Resolution {
    warning = 0.5
    error   = 1.0
  }
}


#for Shift mu14
thresholds th_TRMUO_fermi_fit_mu14_ESid_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.70
    error = 0.699
  }
  limits Threshold {
    warning = 14.0
    error = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_ESid_muComb_upstream {
  limits Plateau {
#    warning = 0.98 # 120830
#   warning = 0.97 # 110909
    warning = 0.95
    error = 0.949
  }
  limits Threshold {
    warning = 14.0
    error = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu14_ESid_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.98
    error = 0.979
  }
  limits Threshold {
    warning = 14.0
    error = 15.0
  }
  limits Resolution {
    warning = 0.5
    error   = 1.0
  }
}



# L1MU0 generic
thresholds th_TRMUO_fermi_fit_L1MU0 {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_L1MU0_barrel {
  limits Plateau {
    warning = 0.7
    error = 0.699
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_L1MU0_endcap {
  limits Plateau {
    warning = 0.88
    error = 0.8799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 2.0
    error   = 3.0
  }
}

# for mu4_mu4noL1
thresholds th_TRMUO_fermi_fit_mu4_mu4noL1 {
  limits Plateau {
    warning = 0.93
    error = 0.929
  }
  limits Threshold {
    warning = 4.0
    error   = 5.0
  }
  limits Resolution {
    warning = 0.5
    error   = 1.0
  }
}



# mu15_MSonly
thresholds th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
#  limits Threshold {
#    warning = 10.0
#    error   = 12.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.85
    error = 0.849
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}


thresholds th_TRMUO_fermi_fit_mu15_MSonly_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}

thresholds th_TRMUO_fermi_fit_mu15_MSonly_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 15.0
    error   = 17.0
  }
  limits Resolution {
    warning = 3.0
    error   = 4.0
  }
}



# //


# mu10
thresholds th_TRMUO_fermi_fit_mu10_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu10_muComb_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
#  limits Threshold {
#    warning = 4.0
#    error   = 5.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
#    warning = 1.0
#    error   = 2.0
    warning = 1.5
    error   = 3.0

  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

# mu8 wrt offline

thresholds th_TRMUO_fermi_fit_mu10_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu10_muComb {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu10_MuonEFCB {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 10.0
    error   = 11.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


# mu14
thresholds th_TRMUO_fermi_fit_mu14_L2MuonSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
#    warning = 1.0 - YY updated 26/07/10
    warning = 1.2
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu14_muComb_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFMS_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
#  limits Threshold {
#    warning = 6.0
#    error   = 7.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFSA_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
#    warning = 1.0
#    error   = 2.0
    warning = 1.5
    error   = 3.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFCB_upstream {
  limits Plateau {
    warning = 0.8
    error = 0.799
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

# mu14 wrt offline

thresholds th_TRMUO_fermi_fit_mu14_L2MuonSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}


thresholds th_TRMUO_fermi_fit_mu14_muComb {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFMS {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFSA {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

thresholds th_TRMUO_fermi_fit_mu14_MuonEFCB {
  limits Plateau {
    warning = 0.6
    error = 0.599
  }
  limits Threshold {
    warning = 14.0
    error   = 15.0
  }
  limits Resolution {
    warning = 1.0
    error   = 2.0
  }
}

# mu20
