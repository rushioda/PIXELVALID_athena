# **********************************************************************
# $Id: heavyions_run.config 709648 2015-11-21 19:32:58Z jfrost $
# **********************************************************************

#############
# Output
#############

output top_level {
  output InnerDetector {
    output IDAlignment {
      output ExtendedTracks_NoTriggerSelection {
        output GenericTracks {
        }
        output GenericTracks_Detail {
        }
        output HitEfficiencies {
        }
        output HitEfficiencies_Detail {
        }
        output Residuals {
        }
        output Residuals_Detail {
        }
      }
      output ExtendedTracks_TriggerAwareMon {
        output GenericTracks {
        }
        output GenericTracks_Detail {
        }
        output HitEfficiencies {
        }
        output HitEfficiencies_Detail {
        }
        output Residuals {
        }
        output Residuals_Detail {
        }
      }
      output SivsTRT_Detail {
        output NoTriggerSelection {
        }
        output TriggerAwareMon {
        }
      }
    }
    output IDAlignment_Perf {
      output W-->enu {
        output NoTriggerSelection {
        }      
        output e15_loose_ion {
        }

      }
      output Z-->ee {
        output NoTriggerSelection {
        }
        output e15_loose_ion {
        }
        output 2e10_loose_ion {
        }
      }

      output Jpsi-->mumu {
        output NoTrig {
        }
        output NoTrig_detail {
        }
        output XpressTrig {
        }
        output XpressTrig_detail {
        }
        output XpressTrig_2mu {
        }
        output XpressTrig_2mu_detail {
        }
        output XpressTrig_idperf {
        }
        output XpressTrig_idperf_detail {
        }
      }
      output Z-->mumu {
        output NoTrig {
        }
        output NoTrig_detail {
        }
        output XpressTrig {
        }
        output XpressTrig_detail {
        }
        output XpressTrig_2mu {
        }
        output XpressTrig_2mu_detail {
        }
        output XpressTrig_idperf {
        }
        output XpressTrig_idperf_detail {
        }     
      }
    }
  }
}


############################################################
# IDAlignMon
############################################################

#######################
# Histogram Assessments
#######################

dir IDAlignMon {
  algorithm = IDAlign_GatherData  

  dir ExtendedTracks_NoTriggerSelection {
#  dir Tracks_NoTriggerSelection { 
    dir HitEfficiencies {
      output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies
      hist measurements_eff_vs_layer_barrel {
        algorithm = IDAlign_Eff_Sil
      }
      hist measurements_eff_vs_layer_eca {
        algorithm = IDAlign_Eff_Sil
      }
      hist measurements_eff_vs_layer_ecc {
        algorithm = IDAlign_Eff_Sil
      }
      hist hits_eff_vs_phiSector_trt_b0 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist hits_eff_vs_phiSector_trt_b1 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist hits_eff_vs_phiSector_trt_b2 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist measurements_eff_vs_Eta_Phi_pix_b0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b1 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b2 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b1 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b2 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b3 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
    }
    dir Residuals {
      output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals
      #Si
      hist si_barrel_resX_mean {
        algorithm = IDAlign_Si_Barrel_ResX_BinContentAbsComp
      }
      hist si_eca_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_ecc_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_barrel_resY_mean {
        algorithm = IDAlign_Si_Barrel_ResY_BinContentAbsComp 
      }
      hist si_eca_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }
      hist si_ecc_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }

      # Pixel disk 0 residuals
      hist pix_eca_unbiased_xresvsmodphi_disk0 {
	algorithm = IDAlign_GatherData
      }
      hist pix_eca_unbiased_yresvsmodphi_disk0 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_xresvsmodphi_disk0 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_yresvsmodphi_disk0 {
	algorithm = IDAlign_GatherData
      }

      # Pixel disk 1 residuals
      hist pix_eca_unbiased_xresvsmodphi_disk1 {
	algorithm = IDAlign_GatherData
      }
      hist pix_eca_unbiased_yresvsmodphi_disk1 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_xresvsmodphi_disk1 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_yresvsmodphi_disk1 {
	algorithm = IDAlign_GatherData
      }

      # Pixel disk 2 residuals
      hist pix_eca_unbiased_xresvsmodphi_disk2 {
	algorithm = IDAlign_GatherData
      }
      hist pix_eca_unbiased_yresvsmodphi_disk2 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_xresvsmodphi_disk2 {
	algorithm = IDAlign_GatherData
      }
      hist pix_ecc_unbiased_yresvsmodphi_disk2 {
	algorithm = IDAlign_GatherData
      }

#####################################################################

      hist sct_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctBarrelXGaussFit
	 display = Statbox,gaus(-0.08,0.08)
      }
      hist sct_eca_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEcaXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }
      hist sct_ecc_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEccXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }

      #PIX
      hist pix_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResXGaussFit
        display = StatBox,gaus(-0.05,0.05) # <--- for plotting the fit function on top of the histogram
                                                 # same algorithm and fit range as used in algorithm = IDAlign_PixResXGaussFit

      }
      hist pix_b_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      hist pix_eca_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }

      hist pix_ecc_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }
      
      hist pix_eca_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      hist pix_ecc_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

####################################################################
      hist pix_b_xresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }   
      hist pix_b_yresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }     
      hist pix_b_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist pix_b_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist sct_b_xresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist sct_b_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }     
      hist si_barrel_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      }      
      hist si_eca_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      }   
      hist si_ecc_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      }   
      hist si_barrel_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      }   
      hist si_eca_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      } 
      hist si_ecc_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_eca_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_eca_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_ecc_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_ecc_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist sct_eca_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist sct_ecc_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist si_barrel_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      hist si_barrel_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      hist si_eca_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      hist si_eca_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      hist si_ecc_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      hist si_ecc_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseRef
      } 
      #TRT
      hist trt_b_aveRes_l0 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l1 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l2 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_A {
        algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_C {
        algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }

###################################################################

      hist trt_b_residualR {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_TrtResRGaussFit
        display = StatBox,gaus(-0.3,0.3)
      }
      hist trt_ec_residualR_Endcap_A {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_TrtEaRGaussFit
        display = StatBox,gaus(-1,1)
      }
      hist trt_ec_residualR_Endcap_C {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_TrtEcRGaussFit
        display = StatBox,gaus(-1,1)
      }
    }
####################################################################
   
    dir GenericTracks {
      output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks
      hist eta {
        algorithm = IDAlign_Gen_Eta
      }
      hist phi {
        algorithm = IDAlign_Gen_Phi
      }
      hist pT {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist d0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist z0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist trk_pT_asym_barrel {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
      }
      hist trk_pT_asym_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
      }
      hist trk_pT_asym_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_NoTriggerSelection/GenericTracks_Detail
      }
      hist chi2oDoF {
        algorithm = IDAlign_Gen_Chi2
      }
      hist Npixhits_per_track {
        algorithm = IDAlign_Gen_PixHits
      }
      hist Nscthits_per_track {
        algorithm = IDAlign_Gen_SctHits
      }
      hist Ntrthits_per_track {
        algorithm = IDAlign_Gen_TrtHits
      }
    }
  }

  dir ExtendedTracks_TriggerAwareMon {
    dir HitEfficiencies {
      output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies
      hist measurements_eff_vs_layer_barrel {
        algorithm = IDAlign_Eff_Sil
      }
      hist measurements_eff_vs_layer_eca {
        algorithm = IDAlign_Eff_Sil
      }
      hist measurements_eff_vs_layer_ecc {
        algorithm = IDAlign_Eff_Sil
      }
      hist hits_eff_vs_phiSector_trt_b0 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist hits_eff_vs_phiSector_trt_b1 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist hits_eff_vs_phiSector_trt_b2 {
        algorithm = IDAlign_Eff_TRTB/MaxDiffrel
      }
      hist measurements_eff_vs_Eta_Phi_pix_b0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b1 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b2 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b1 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b2 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b3 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
    }
    dir Residuals {
      output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals
      #Si
      hist si_barrel_resX_mean {
        algorithm = IDAlign_Si_Barrel_ResX_BinContentAbsComp
      }
      hist si_eca_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_ecc_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_barrel_resY_mean {
        algorithm = IDAlign_Si_Barrel_ResY_BinContentAbsComp
      }
      hist si_eca_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }
      hist si_ecc_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }

##################################################################

      hist sct_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctBarrelXGaussFit
	 display = Statbox,gaus(-0.08,0.08)
      }
      hist sct_eca_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEcaXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }
      hist sct_ecc_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEccXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }

      #PIX
      hist pix_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResXGaussFit
        display = StatBox,gaus(-0.05,0.05) # <--- for plotting the fit function on top of the histogram
                                                 # same algorithm and fit range as used in algorithm = IDAlign_PixResXGaussFit

      }
      hist pix_b_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      hist pix_eca_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }

      hist pix_ecc_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }
      
      hist pix_eca_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      hist pix_ecc_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

################################################################

      hist pix_b_xresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }   
      hist pix_b_yresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }     
      hist pix_b_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist pix_b_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist sct_b_xresvsmodeta {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }    
      hist sct_b_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }     
      hist si_barrel_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      }      
      hist si_eca_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      }   
      hist si_ecc_pullX_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      }   
      hist si_barrel_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      }   
      hist si_eca_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      } 
      hist si_ecc_pullY_width {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Pull_BinContentCompLoose
      }  
      hist pix_eca_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_eca_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_ecc_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist pix_ecc_yresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist sct_eca_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      } 
      hist sct_ecc_xresvsmodphi {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLoose/MaxDiffabs
      }  
      hist si_barrel_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      hist si_barrel_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      hist si_eca_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      hist si_eca_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      hist si_ecc_resX_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      hist si_ecc_resY_rms {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/Residuals_Detail
        algorithm = IDAlign_Res_BinContentCompLooseTemp
      } 
      #TRT
      hist trt_b_aveRes_l0 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l1 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l2 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_A {
       algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_C {
        algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }

#################################################################

      hist trt_b_residualR {
        algorithm = IDAlign_TrtResRGaussFit
        display = StatBox,gaus(-0.3,0.3)
      }
      hist trt_ec_residualR_Endcap_A {
        algorithm = IDAlign_TrtEaRGaussFit
        display = StatBox,gaus(-1,1)
      }
      hist trt_ec_residualR_Endcap_C {
        algorithm = IDAlign_TrtEcRGaussFit
        display = StatBox,gaus(-1,1)
      }
    }

###################################################################

    dir GenericTracks {
      output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks
      hist eta {
        algorithm = IDAlign_Gen_Eta
      }
      hist phi {
        algorithm = IDAlign_Gen_Phi
      }
      hist pT {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist d0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist z0 {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
        algorithm = IDAlign_Histogram_Not_Empty&GatherData
      }
      hist trk_pT_asym_barrel {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
      }
      hist trk_pT_asym_ecc {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
      }
      hist trk_pT_asym_eca {
        output = InnerDetector/IDAlignment/ExtendedTracks_TriggerAwareMon/GenericTracks_Detail
      }
      hist chi2oDoF {
        algorithm = IDAlign_Gen_Chi2
      }
      hist Npixhits_per_track {
        algorithm = IDAlign_Gen_PixHits
      }
      hist Nscthits_per_track {
        algorithm = IDAlign_Gen_SctHits
      }
      hist Ntrthits_per_track {
        algorithm = IDAlign_Gen_TrtHits
      }
    }
  }

  dir SivsTRT {
    dir NoTriggerSelection {
      output = InnerDetector/IDAlignment/SivsTRT_Detail/NoTriggerSelection
      hist delta_phi0 {
        algorithm = Histogram_Not_Empty
      }
      hist delta_eta0 {
        algorithm = Histogram_Not_Empty
      }
      hist delta_qoverp {
        algorithm = Histogram_Not_Empty
      }
      hist delta_d0 {
        algorithm = Histogram_Not_Empty
      }
      hist delta_z0 {
        algorithm = Histogram_Not_Empty
      }
      hist delta_charge {
        algorithm = Histogram_Not_Empty
      }
      hist eff_simatch_eta0 {
        algorithm = Histogram_Not_Empty
      }
      hist eff_simatch_phi0 {
        algorithm = Histogram_Not_Empty
      }
      hist eff_trthits_eta0 {
        algorithm = Histogram_Not_Empty
      }
      hist eff_trthits_phi0 {
        algorithm = Histogram_Not_Empty
      }
    }
    dir TriggerAwareMon {
      output = InnerDetector/IDAlignment/SivsTRT_Detail/TriggerAwareMon 
      hist delta_phi0 {
         algorithm = Histogram_Not_Empty
       }
       hist delta_eta0 {
         algorithm = Histogram_Not_Empty
       }
       hist delta_qoverp {
         algorithm = Histogram_Not_Empty
       }
       hist delta_d0 {  
         algorithm = Histogram_Not_Empty
       }
       hist delta_z0 {
         algorithm = Histogram_Not_Empty
       }
       hist delta_charge {
         algorithm = Histogram_Not_Empty
       }
       hist eff_simatch_eta0 {
         algorithm = Histogram_Not_Empty
       }
       hist eff_simatch_phi0 {
         algorithm = Histogram_Not_Empty
       }
       hist eff_trthits_eta0 {
         algorithm = Histogram_Not_Empty
       }
       hist eff_trthits_phi0 {
         algorithm = Histogram_Not_Empty
       }
     }
   } 	
}

dir IDPerfMon {
  algorithm = IDAlign_GatherData

   dir Wenu {
    dir NoTriggerSelection {
      output = InnerDetector/IDAlignment_Perf/W-->enu/NoTriggerSelection
      hist Wenu_met_sel {
        algorithm = IDPerfMon_Wenu_met_sel
      }
      hist Wenu_trk_transmass_sel {
        algorithm = IDPerfMon_Wenu_trk_transmass_sel
      }
      #hist rate {
      #  output = InnerDetector/IDAlignment_Perf/W-->enu/NoTriggerSelection_Detail
      #  algorithm = IDAlign_BinPrint
      #}
     hist Wenu_trackmatch_eff_vs_eta {
        algorithm = IDPerfMon_Wenu_trackmatch_eff_vs_eta
      }
      hist Wenu_Eopmatch_eff_vs_eta {
        algorithm = IDPerfMon_Wenu_Eopmatch_eff_vs_eta
      }
      hist Wenu_Eop_incl {
        algorithm = IDPerfMon_Wenu_Eop_incl
      }
      hist Wenu_Eop_lt1_gt1 {
        algorithm = IDPerfMon_Wenu_Eop_lt1_gt1
      }
      hist Wenu_Eopdiff_incl {
        algorithm = IDPerfMon_Wenu_Eopdiff_bins0
      }
      hist Wenu_Eopdiff_vs_invp {
        algorithm = IDPerfMon_Wenu_Eopdiff_vs_invp_bins0
      }
      hist Wenu_frac_Eop_lt1_vs_eta {
        algorithm = IDPerfMon_Wenu_frac_Eop_lt1_vs_eta
      }
    }
    dir e15_loose_ion {
      output = InnerDetector/IDAlignment_Perf/W-->enu/e15_loose_ion
      hist Wenu_trk_transmass_sel {
        algorithm = IDPerfMon_Wenu_trk_transmass_sel
      }
      #hist rate {
      #  output = InnerDetector/IDAlignment_Perf/W-->enu/e15_loose_ion_Detail
      #  algorithm = IDAlign_BinPrint
      #}
     hist Wenu_trackmatch_eff_vs_eta {
        algorithm = IDPerfMon_Wenu_trackmatch_eff_vs_eta
      }
      hist Wenu_Eopmatch_eff_vs_eta {
        algorithm = IDPerfMon_Wenu_Eopmatch_eff_vs_eta
      }
      hist Wenu_Eop_incl {
        algorithm = IDPerfMon_Wenu_Eop_incl
      }
      hist Wenu_Eop_lt1_gt1 {
        algorithm = IDPerfMon_Wenu_Eop_lt1_gt1
      }
      hist Wenu_Eopdiff_incl {
        algorithm = IDPerfMon_Wenu_Eopdiff_bins0
      }
      hist Wenu_Eopdiff_vs_invp {
        algorithm = IDPerfMon_Wenu_Eopdiff_vs_invp_bins0
      }
      hist Wenu_frac_Eop_lt1_vs_eta {
        algorithm = IDPerfMon_Wenu_frac_Eop_lt1_vs_eta
      }
    }
 }

 dir Zee {
    dir NoTriggerSelection {
      output = InnerDetector/IDAlignment_Perf/Z-->ee/NoTriggerSelection
      hist Zee_trk_invmass {
        algorithm = IDPerfMon_Zee_trk_invmass
      }
      #hist rate {
      #  output = InnerDetector/IDAlignment_Perf/Z-->ee/NoTriggerSelection
      #  algorithm = IDAlign_BinPrint
      #}
      hist Zee_invmass {
        algorithm = IDPerfMon_Zee_invmass
      }
      hist Zee_trackmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_trackmatch_eff_vs_eta_ref
      }
      hist Zee_Eopmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_Eopmatch_eff_vs_eta_ref
      }
      hist Zee_Eop_incl {
        algorithm = IDPerfMon_Zee_Eop_incl
      }
      hist Zee_Eop_lt1_gt1 {
        algorithm = IDPerfMon_Zee_Eop_lt1_gt1
      }
      hist Zee_Eopasym_perevent {
        algorithm = IDPerfMon_Zee_Eopasym_perevent_mean0
      }
      hist Zee_Eopdiff_incl {
        algorithm = IDPerfMon_Zee_Eopdiff_bins0
      }
      hist Zee_Eopdiff_vs_invp {
        algorithm = IDPerfMon_Zee_Eopdiff_vs_invp_bins0
      }
      hist Zee_frac_Eop_lt1_vs_eta {
        algorithm = IDPerfMon_Zee_frac_Eop_lt1_vs_eta
      }
    }

    dir e15_loose_ion {
      output = InnerDetector/IDAlignment_Perf/Z-->ee/e15_loose_ion
      hist Zee_trk_invmass {
        algorithm = IDPerfMon_Zee_trk_invmass
      }
      #hist rate {
      #  output = InnerDetector/IDAlignment_Perf/Z-->ee/e15_loose_ion
      #  algorithm = IDAlign_BinPrint
      #}
      hist Zee_trackmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_trackmatch_eff_vs_eta_ref
      }
      hist Zee_Eopmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_Eopmatch_eff_vs_eta_ref
      }
      hist Zee_Eop_incl {
        algorithm = IDPerfMon_Zee_Eop_incl
      }
      hist Zee_Eop_lt1_gt1 {
        algorithm = IDPerfMon_Zee_Eop_lt1_gt1
      }
      hist Zee_Eopasym_perevent {
        algorithm = IDPerfMon_Zee_Eopasym_perevent_mean0
      }
      hist Zee_Eopdiff_incl {
        algorithm = IDPerfMon_Zee_Eopdiff_bins0
      }
      hist Zee_Eopdiff_vs_invp {
        algorithm = IDPerfMon_Zee_Eopdiff_vs_invp_bins0
      }
      hist Zee_frac_Eop_lt1_vs_eta {
        algorithm = IDPerfMon_Zee_frac_Eop_lt1_vs_eta
      }
    }
    dir 2e10_loose_ion {
      output = InnerDetector/IDAlignment_Perf/Z-->ee/2e10_loose_ion
      hist Zee_trk_invmass {
        algorithm = IDPerfMon_Zee_trk_invmass
      }
      #hist rate {
      #  output = InnerDetector/IDAlignment_Perf/Z-->ee/2e10_loose_ion
      #  algorithm = IDAlign_BinPrint
      #}
      hist Zee_trackmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_trackmatch_eff_vs_eta_ref
      }
      hist Zee_Eopmatch_eff_vs_eta {
        algorithm = IDPerfMon_Zee_Eopmatch_eff_vs_eta_ref
      }
      hist Zee_Eop_incl {
        algorithm = IDPerfMon_Zee_Eop_incl
      }
      hist Zee_Eop_lt1_gt1 {
        algorithm = IDPerfMon_Zee_Eop_lt1_gt1
      }
      hist Zee_Eopasym_perevent {
        algorithm = IDPerfMon_Zee_Eopasym_perevent_mean0
      }
      hist Zee_Eopdiff_incl {
        algorithm = IDPerfMon_Zee_Eopdiff_bins0
      }
      hist Zee_Eopdiff_vs_invp {
        algorithm = IDPerfMon_Zee_Eopdiff_vs_invp_bins0
      }
      hist Zee_frac_Eop_lt1_vs_eta {
        algorithm = IDPerfMon_Zee_frac_Eop_lt1_vs_eta
      }
    }
  }

dir DiMuMon  {
  algorithm = IDAlign_GatherData

  dir Jpsi {
    dir NoTrig {
      output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig
      hist Jpsi_invmass_BB {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmass_EAEA {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmass_ECEC {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmassVSetaPos_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaNeg_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_BB {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_EAEA {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_ECEC {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_BB {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_EAEA {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_ECEC {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
    }
    dir NoTrig_detail {
      output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig_detail
      hist Jpsi_widthVSetaAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_widthVSphiAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_widthVSptAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_ptAll_All {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/NoTrig
        algorithm = Histogram_Not_Empty
      }
    }
    dir XpressTrig {
      output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig
      hist Jpsi_invmass_BB {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmass_EAEA {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmass_ECEC {
        algorithm = IDPerf_Jpsi_IterativeGaussianFit
      }
      hist Jpsi_invmassVSetaPos_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaNeg_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiPos_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphiNeg_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVScrtDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_BB {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_EAEA {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSetaSumm_ECEC {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_BB {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_EAEA {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Jpsi_invmassVSphi_ECEC {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
    }
    dir XpressTrig_detail {
      output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig_detail
      hist Jpsi_widthVSetaAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_widthVSphiAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_widthVSptAll_All {
        algorithm = IDPerf_Comp
      }
      hist Jpsi_ptAll_All {
        output = InnerDetector/IDAlignment_Perf/Jpsi-->mumu/XpressTrig
        algorithm = Histogram_Not_Empty
      }
    }
  }
  dir Zmumu {
    dir NoTrig {
      output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig
      hist Zmumu_invmass_BB {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmass_EAEA {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmass_ECEC {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmassVSetaPos_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaNeg_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_BB {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_EAEA {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_ECEC {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_BB {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_EAEA {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_ECEC {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
        algorithm = IDPerf_Comp
      }
    }
    dir NoTrig_detail {
      output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig_detail
      hist Zmumu_widthVSetaAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_widthVSphiAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_widthVSptAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_ptAll_All {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/NoTrig
        algorithm = Histogram_Not_Empty
      }
    }
    dir XpressTrig {
      output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig
      hist Zmumu_invmass_BB {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmass_EAEA {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmass_ECEC {
        algorithm = IDPerf_ZMM_IterativeGaussianFit
      }
      hist Zmumu_invmassVSetaPos_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaNeg_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiPos_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphiNeg_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_BB {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_EAEA {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVScrtDiff_ECEC {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_BB {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_EAEA {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSetaSumm_ECEC {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_BB {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_EAEA {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }
      hist Zmumu_invmassVSphi_ECEC {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
        algorithm = IDPerf_Comp
      }

    }
    dir XpressTrig_detail {
      output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig_detail
      hist Zmumu_widthVSetaAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_widthVSphiAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_widthVSptAll_All {
        algorithm = IDPerf_Comp
      }
      hist Zmumu_ptAll_All {
        output = InnerDetector/IDAlignment_Perf/Z-->mumu/XpressTrig
        algorithm = Histogram_Not_Empty
      }
    }
  }
}
}
#############
# Algorithms
#############

#
# Common
#

algorithm IDAlign_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = CentrallyManagedReferences
}

algorithm IDAlign_Histogram_Not_Empty&GatherData {
  name = Histogram_Not_Empty&GatherData
  reference = CentrallyManagedReferences
}

compositeAlgorithm Histogram_Not_Empty&BinPrint {
  libname = libdqm_algorithms.so
  subalgs = Histogram_Not_Empty,BinPrint
}
algorithm IDAlign_BinPrint {
  name = Histogram_Not_Empty&BinPrint
  UnMask_All = 100
}
#
# Generic Tracks
#

algorithm IDAlign_Gen_Eta {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_Eta_Thresh
  MinStat = 1000
}

algorithm IDAlign_Gen_PixHits {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_PixHits_Thresh
  MinStat = 1000
}

algorithm IDAlign_Gen_SctHits {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_SctHits_Thresh
  MinStat = 1000
}

algorithm IDAlign_Gen_TrtHits {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_TrtHits_Thresh
  MinStat = 1000
}

algorithm IDAlign_Gen_Chi2 {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_Chi2_Thresh
  MinStat = 1000
}

algorithm IDAlign_Gen_Phi {
  libname = libdqm_algorithms.so
  name = Bins_Diff_FromAvg
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Gen_Phi_Thresh
  NSigma = 5
  PublishBins = 1
  MinStat = 1000
}

#
# Efficiencies
#
compositeAlgorithm Bins_LessThan_Threshold&BinPrint {
  libnames = libdqm_algorithms.so
  subalgs = Bins_LessThan_Threshold,BinPrint
} 
algorithm IDAlign_Eff_Sil {
  libname = libdqm_algorithms.so
  name = Bins_LessThan_Threshold&BinPrint
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Eff_Sil_Thresh
  BinThreshold = 0.97
  MinStat = 5000
  UnMask_All = -1
}

algorithm IDAlign_Eff_TRTB {
  libname = libdqm_algorithms.so
  name = Bins_Diff_FromAvg
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Eff_TRTB_Thresh
  NSigma = 5
  PublishBins = 1
  MinStat = 5000
  
  algorithm MaxDiffrel {
    MaxDiffRel = 0.01
  }
}

#
# Residuals
#
#algorithm IDAlign_Res_BinsDiffFromAvg {
#  libname = libdqm_algorithms.so
#  name = Bins_Diff_FromAvg
#  reference = CentrallyManagedReferences
#  thresholds = IDAlign_Res_BinsDiffFromAvgThresh
#  NSigma = 3
#}
#
#algorithm IDAlign_Res_BinsDiffFromAvgLoose {
#  libname = libdqm_algorithms.so
#  name = Bins_Diff_FromAvg
#  reference = CentrallyManagedReferences
#  thresholds = IDAlign_Res_BinsDiffFromAvgLooseThresh
#  NSigma = 5
#}
#
#algorithm IDAlign_Res_BinContentComp {
#  libname = libdqm_algorithms.so
#  name = BinContentComp
#  reference = CentrallyManagedReferences
#  thresholds = IDAlign_Res_BinContentCompThresh
#  NSigma = 3
#  Value = 0
#}

algorithm IDAlign_Res_BinContentCompLoose {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Res_BinContentCompLooseThresh
  NSigma = 5
  Value = 0
  
  algorithm MaxDiffabs {
    MaxDiffAbs = 0.003
  }
}

algorithm IDAlign_Res_BinContentCompLooseRef {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Res_BinContentCompLooseRefThresh
  NSigma = 5
  Ignore0 = 1
}

algorithm IDAlign_Res_BinContentCompLooseTemp {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Res_BinContentCompLooseRefThresh
  NSigma = 50
  Value = 0.1
}

algorithm IDAlign_Pull_BinContentCompLoose {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Pull_BinContentCompLooseThresh
  NSigma = 5
  Value = 1
  
  algorithm MaxDiffabs {
    MaxDiffAbs = 0.1
  }
}

###################################################################
compositeAlgorithm Bins_LessThanAbs_Threshold&BinPrint {
  libnames = libdqm_algorithms.so
  subalgs = Bins_LessThanAbs_Threshold,BinPrint
} 
algorithm IDAlign_Si_Barrel_ResY_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.01
  thresholds = IDAlign_Si_Barrel_ResY_BinContentAbsCompThresh  
  UnMask_All = 3
}
algorithm IDAlign_Si_EC_ResY_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_Si_EC_ResY_BinContentAbsCompThresh  
  UnMask_All = 3
}
algorithm IDAlign_Si_Barrel_ResX_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.01
  thresholds = IDAlign_Si_Barrel_ResX_BinContentAbsCompThresh  
  UnMask_All = 11
}
algorithm IDAlign_Si_EC_ResX_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_Si_EC_ResX_BinContentAbsCompThresh  
  UnMask_All = 21
}
algorithm IDAlign_TRT_Barrel_Res_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.02
  thresholds = IDAlign_TRT_Barrel_Res_BinContentAbsCompThresh  
  UnMask_All = 32
}
algorithm IDAlign_TRT_EC_Res_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_TRT_EC_Res_BinContentAbsCompThresh  
  UnMask_All = 40
}

algorithm IDAlign_PixResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixResXGaussThresholds
  xmin = -0.05
  xmax = 0.05
  MinStat = 1000
  reference = CentrallyManagedReferences
 }
algorithm IDAlign_PixResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 1000
  reference = CentrallyManagedReferences
 }
algorithm IDAlign_PixEcaResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# only simple gaus, double gaus would cause undefined status for other plots
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEcaResXGaussThresholds
  xmin = -0.1
  xmax = 0.1
  MinStat = 1000
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixEccResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEccResXGaussThresholds
  xmin = -0.1
  xmax = 0.1
  MinStat = 1000
  reference = CentrallyManagedReferences
 }
algorithm IDAlign_PixEcaResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEcaResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 1000
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixEccResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEccResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 1000
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_SctBarrelXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# doublegaus would cause undefined status for other plots (e.g pix_b_residualx), but ok for itself !
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctResXGaussThresholds
  xmin = -0.08     
  xmax = 0.08       
  MinStat = 1000
  reference = CentrallyManagedReferences
}

algorithm IDAlign_SctEcaXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctEcaXGaussThresholds
  xmin = -0.5     
  xmax = 0.5       
  MinStat = 1000
  reference = CentrallyManagedReferences
}

algorithm IDAlign_SctEccXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctEccXGaussThresholds
  xmin = -0.5     
  xmax = 0.5       
  MinStat = 1000
  reference = CentrallyManagedReferences
}

algorithm IDAlign_TrtResRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# doublegaus would cause undefined status for other plots (e.g pix_b_residualx), but ok for itself !
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtResRGaussThresholds
  xmin = -0.3
  xmax = 0.3
  MinStat = 1000
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_TrtEaRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtEaRGaussThresholds
  xmin = -1
  xmax = 1
  MinStat = 1000
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_TrtEcRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtEcRGaussThresholds
  xmin = -1
  xmax = 1
  MinStat = 1000
  reference = CentrallyManagedReferences
 }
###############################################################

#
# Zee
#
algorithm IDPerfMon_Zee_Eopasym_perevent_mean0 {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = IDPerfMon_Zee_Eopasym_pereven_Thresh
  reference = CentrallyManagedReferences
  NSigma = 5
  Value = 0
}

algorithm IDPerfMon_Zee_Eopdiff_bins0 {
  libname = libdqm_algorithms.so
  name = BinContentComp
  thresholds = IDPerfMon_Zee_Eopdiff_Thresh
  reference = CentrallyManagedReferences
  NSigma = 5
  Value = 0
}

algorithm IDPerfMon_Zee_Eopdiff_vs_invp_bins0 {
  libname = libdqm_algorithms.so
  name = BinContentComp
  thresholds = IDPerfMon_Zee_Eopdiff_vs_invp_Thresh
  reference = CentrallyManagedReferences
  NSigma = 3
  Value = 0
}

algorithm IDPerfMon_Zee_trk_invmass {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_Prob
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_trk_invmass_Thresh
}

algorithm IDPerfMon_Zee_invmass {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_Prob
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_invmass_Thresh
}

algorithm IDPerfMon_Zee_trackmatch_eff_vs_eta_ref {
  libname = libdqm_algorithms.so
  name = Bins_LessThan_Threshold
  thresholds = IDPerfMon_Zee_trackmatch_eff_vs_eta_Thresh
  reference = CentrallyManagedReferences
  BinThreshold = 0.7
  MinStat = 50
}

algorithm IDPerfMon_Zee_Eopmatch_eff_vs_eta_ref {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_Eopmatch_eff_vs_eta_Thresh
  NSigma = 3
  Ignore0 = 1
}

algorithm IDPerfMon_Zee_Eop_incl {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_Eop_incl_Thresh
  SubtractFromXMean = 1.7
}

algorithm IDPerfMon_Zee_Eop_lt1_gt1 {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_Eop_lt1_gt1_Thresh
  SubtractFromXMean = 1.1
}

algorithm IDPerfMon_Zee_frac_Eop_lt1_vs_eta {
  libname = libdqm_algorithms.so
  name = Bins_LessThan_Threshold
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Zee_frac_Eop_lt1_vs_eta_Thresh
  BinThreshold = 0.1
  MinStat = 50
}

#
# Wenu
#
algorithm IDPerfMon_Wenu_Eopdiff_bins0 {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_Eopdiff_Thresh 
  NSigma = 5
  Value = 0
}

algorithm IDPerfMon_Wenu_Eopdiff_vs_invp_bins0 {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_Eopdiff_vs_invp_Thresh
  NSigma = 3
  Value = 0
}

algorithm IDPerfMon_Wenu_met_sel {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_Prob
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_met_sel_Thresh
}

algorithm IDPerfMon_Wenu_trk_transmass_sel {
  libname = libdqm_algorithms.so
  name = KolmogorovTest_Prob
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_trk_transmass_sel_Thresh
}

algorithm IDPerfMon_Wenu_trackmatch_eff_vs_eta {
  libname = libdqm_algorithms.so
  name = Bins_LessThan_Threshold
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_trackmatch_eff_vs_eta_Thresh
  BinThreshold = 0.7
  MinStat = 50
}

algorithm IDPerfMon_Wenu_Eopmatch_eff_vs_eta {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_Eopmatch_eff_vs_eta_Thresh
  NSigma = 3
  Ignore0 = 1
}

algorithm IDPerfMon_Wenu_Eop_incl {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_Eop_incl_Thresh
  SubtractFromXMean = 1.7
}

algorithm IDPerfMon_Wenu_Eop_lt1_gt1 {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean&GatherData
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_Eop_lt1_gt1_Thresh
  SubtractFromXMean = 1.1
}

algorithm IDPerfMon_Wenu_frac_Eop_lt1_vs_eta {
  libname = libdqm_algorithms.so
  name = Bins_LessThan_Threshold
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Wenu_frac_Eop_lt1_vs_eta_Thresh
  BinThreshold = 0.1
  MinStat = 50
}

#
# Jpsi 
#
algorithm IDPerf_Jpsi_IterativeGaussianFit {
  libname = libdqm_algorithms.so
  name = IterativeGaussianFit
  SigmaRange = 1.2
  MeanNominal = 3.097
  MinStat = 50
  reference = CentrallyManagedReferences
  thresholds = IDPerf_Jpsi_FitThresh
}
algorithm IDPerf_Comp {
  libname = libdqm_algorithms.so
  name = BinContentComp
  reference = CentrallyManagedReferences
  thresholds = IDPerf_BinContentCompThresh 
  NSigma = 5
  Ignore0 = 1
}
algorithm IDPerf_Jpsi_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = CentrallyManagedReferences
}

#
# Upsilon
#

algorithm IDPerf_Upsilon_IterativeGaussianFit {
  libname = libdqm_algorithms.so
  name = IterativeGaussianFit
  SigmaRange = 1.2
  MeanNominal = 9.46
  MinStat = 50
  reference = CentrallyManagedReferences
  thresholds = IDPerf_Upsilon_FitThresh
}

#
# Kshort
#
algorithm IDPerf_Ks_Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
  reference = CentrallyManagedReferences
}

algorithm IDPerf_Ks_Bins_Diff_FromAvg {
  libname = libdqm_algorithms.so
  name = Bins_Diff_FromAvg
  reference = CentrallyManagedReferences
  thresholds = IDPerfMon_Kshort_BinsDiffFromAvgThresh
  NSigma = 3
  PublishBins = 1
  MinStat = 1000
}

algorithm IDPerf_Kshort_GaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_gaus_Fit
#  name = Simple_gauspluspol1_Fit
   name = Simple_gausplusexpo_Fit
#  xmin = 0.3
#  xmax = 0.7
  xmin = 0.465
  xmax = 0.53  
  MinStat = 50
  reference = CentrallyManagedReferences
  thresholds = IDPerf_Kshort_GaussFitThresh
}
algorithm BinContentComp_Kshort {
  libname = libdqm_algorithms.so
  name = BinContentComp
  thresholds = IDPerf_Kshort_BinContentCompThresh
  reference = CentrallyManagedReferences
  NSigma = 5
  Ignore0 = 1
}

#
# ZMM
#
algorithm IDPerf_ZMM_IterativeGaussianFit {
  libname = libdqm_algorithms.so
  name = IterativeGaussianFit
  SigmaRange = 1.2
  MinStat = 50
  MeanNominal = 91.1876
  reference = CentrallyManagedReferences
  thresholds = IDPerf_ZMM_FitThresh
}


#############
# Thresholds
#############

#
# Generic Tracks
#
thresholds IDAlign_Gen_Eta_Thresh {
  limits AbsXMean {
    warning = 0.05
    error = 1000.0
  }
}

thresholds IDAlign_Gen_PixHits_Thresh {
  limits XMean {
    warning = 2.5
    error = 0
  }
}

thresholds IDAlign_Gen_SctHits_Thresh {
  limits XMean {
    warning = 7
    error = 0
  }
}

thresholds IDAlign_Gen_TrtHits_Thresh {
  limits XMean {
    warning = 20
    error = 0
  }
}

thresholds IDAlign_Gen_Chi2_Thresh {
  limits XMean {
    warning = 3
    error = 1000.0
  }
}

thresholds IDAlign_Gen_Phi_Thresh {
  limits NBins {
    warning = 1
    error = 1000.0
  }
}

#
# Efficiencies
#
thresholds IDAlign_Eff_Sil_Thresh {
  limits NBins {
    warning = 1
    error = 100
  }
}

thresholds IDAlign_Eff_TRTB_Thresh {
  limits NBins {
    warning = 1
    error = 100
  }
}

#
# Residuals
#
#thresholds IDAlign_Res_BinsDiffFromAvgThresh {
#  limits NBins {
#    warning = 1
#    error = 1000
#  }
#}
#
#thresholds IDAlign_Res_BinsDiffFromAvgLooseThresh {
#  limits NBins {
#    warning = 1
#    error = 1000
#  }
#}
#
#thresholds IDAlign_Res_BinContentCompThresh {
#  limits NBins {
#    warning = 1
#    error = 1000
#  }
#}

thresholds IDAlign_Res_BinContentCompLooseThresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDAlign_Res_BinContentCompLooseRefThresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDAlign_Pull_BinContentCompLooseThresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDAlign_Si_Barrel_ResY_BinContentAbsCompThresh {
  limits NBins {
    warning = 11
    error = 0
  } 
}
thresholds IDAlign_Si_EC_ResY_BinContentAbsCompThresh {
  limits NBins {
    warning = 21
    error = 0
  } 
}
thresholds IDAlign_Si_Barrel_ResX_BinContentAbsCompThresh {
  limits NBins {
    warning = 11
    error = 0
  } 
}
thresholds IDAlign_Si_EC_ResX_BinContentAbsCompThresh {
  limits NBins {
    warning = 19
    error = 0
  } 
}
thresholds IDAlign_TRT_Barrel_Res_BinContentAbsCompThresh {
  limits NBins {
    warning = 29
    error = 0
  } 
}
thresholds IDAlign_TRT_EC_Res_BinContentAbsCompThresh {
  limits NBins {
    warning = 37
    error = 0
  } 
}

#####################################################################


thresholds IDAlign_SctResXGaussThresholds {
  limits Sigma {
     warning = 0.045
     error = 1000.0
  }
}

thresholds IDAlign_SctEcaXGaussThresholds {
  limits Sigma {
     warning = 0.054
     error = 1000.0
  }
}

thresholds IDAlign_SctEccXGaussThresholds {
  limits Sigma {
     warning = 0.054
     error = 1000.0
  }
}

thresholds IDAlign_TrtResRGaussThresholds {
  limits Sigma {
     warning = 0.16
     error = 1000.0
  }
}

thresholds IDAlign_TrtEaRGaussThresholds {
  limits Sigma {
     warning = 0.18
     error = 1000.0
  }
}

thresholds IDAlign_TrtEcRGaussThresholds {
  limits Sigma {
     warning = 0.18
     error = 1000.0
  }
}

thresholds IDAlign_PixResXGaussThresholds {
  limits Sigma {
     warning = 0.03
     error = 1000.0
  } 
}

thresholds IDAlign_PixResYGaussThresholds {
  limits Sigma {
     warning = 0.17
     error = 1000.0
  }
}

thresholds IDAlign_PixEcaResXGaussThresholds {
  limits Sigma {
     warning = 0.026
     error = 1000.0
  }
}

thresholds IDAlign_PixEccResXGaussThresholds {
  limits Sigma {
     warning = 0.026
     error = 1000.0
  }
}

thresholds IDAlign_PixEcaResYGaussThresholds {
  limits Sigma {
     warning = 0.15
     error = 1000.0
  }
}

thresholds IDAlign_PixEccResYGaussThresholds {
  limits Sigma {
     warning = 0.15
     error = 1000.0
  }
}

######################################################################


#
# Zee
#

thresholds IDPerfMon_Zee_Eopasym_pereven_Thresh {
  limits AbsXMean {
    warning = 0.005
    error = 1000.0
  }
}

thresholds IDPerfMon_Zee_Eopdiff_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Zee_Eopdiff_vs_invp_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Zee_trk_invmass_Thresh {
  limits P {	
    warning = 0.9
    error = 0.0
  }
}

thresholds IDPerfMon_Zee_invmass_Thresh {
  limits P {	
    warning = 0.9
    error = 0.0
  }
}

thresholds IDPerfMon_Zee_trackmatch_eff_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Zee_Eopmatch_eff_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Zee_Eop_incl_Thresh {
  limits AbsXMean {
    warning = 0.05
    error = 1000.0
  }
}

thresholds IDPerfMon_Zee_Eop_lt1_gt1_Thresh {
  limits AbsXMean {
    warning = 0.05
    error = 1000.0
  }
}

thresholds IDPerfMon_Zee_frac_Eop_lt1_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

#
# Wenu
#

thresholds IDPerfMon_Wenu_Eopdiff_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Wenu_Eopdiff_vs_invp_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Wenu_trk_transmass_sel_Thresh {
  limits P {	
    warning = 0.9
    error = 0.0
  }
}

thresholds IDPerfMon_Wenu_met_sel_Thresh {
  limits P {	
    warning = 0.9
    error = 0.0
  }
}

thresholds IDPerfMon_Wenu_trackmatch_eff_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Wenu_Eopmatch_eff_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

thresholds IDPerfMon_Wenu_Eop_incl_Thresh {
  limits AbsXMean {
    warning = 0.05
    error = 1000.0
  }
}

thresholds IDPerfMon_Wenu_Eop_lt1_gt1_Thresh {
  limits AbsXMean {
    warning = 0.05
    error = 1000.0
  }
}

thresholds IDPerfMon_Wenu_frac_Eop_lt1_vs_eta_Thresh {
  limits NBins {
    warning = 1
    error = 1000
  }
}

#
# JpsiUpsilon
#
thresholds IDPerf_Jpsi_FitThresh {
  limits Sigma {
    warning = 0.05
    error = 1000.0
  }
  limits MeanDeviation {
    warning = 0.01
    error = 1000.0
  }
  limits Chi2NDF {
    warning = 5.
    error = 1000.0
  }
}

thresholds IDPerf_Upsilon_FitThresh {
  limits Sigma {
    warning = 1.5
    error = 1000.0
  }
  limits MeanDeviation {
    warning = 1.5
    error = 1000.0
  }
  limits Chi2NDF {
    warning = 30.
    error = 1000.0
  }
}
thresholds IDPerf_BinContentCompThresh {
  limits NBins {
    warning = 2
    error = 1000
  }
}


#
# Kshort
#
thresholds IDPerfMon_Kshort_BinsDiffFromAvgThresh {
  limits NBins {
    warning = 1
    error = 1000.0
  }
}

thresholds IDPerf_Kshort_GaussFitThresh {
  limits Sigma {
    warning = 0.03
    error = 1000.0
  }
}
thresholds IDPerf_Kshort_BinContentCompThresh {
  limits NBins {
    warning = 10
    error = 1000
  }
}

#
# ZMM
#
thresholds IDPerf_ZMM_FitThresh {
  limits Sigma {
    warning = 4.
    error = 1000.0
  }
  limits MeanDeviation {
    warning = 1.
    error = 1000.0
  }
  limits Chi2NDF {
    warning = 5.
    error = 10000.0
  }
}

