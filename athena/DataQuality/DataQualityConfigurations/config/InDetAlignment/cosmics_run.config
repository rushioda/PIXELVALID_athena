# **********************************************************************
# $Id: cosmics_run.config 659101 2015-04-06 11:15:38Z kastanas $
# **********************************************************************

############################################################
# InDetAlignment
############################################################

#############
# Output
#############

output top_level {
  
  output InnerDetector {
    output IDAlignment {
      output Tracks_NoTriggerSelection {
        output HitEfficiencies {
        }
        output HitEfficiencies_Detail {
	}
	output HitEfficiencies_Expert {
        }
        output Residuals {
        }
        output GenericTracks {
        }
        output GenericTracks_Detail {
        }
        output TrackSegmentComparisonUpvsDown {
        }
#        output TrackSegmentComparisonPixelvsSCT {
#        }
#        output TrackSegmentComparisonSCTvsTRT {
#        }
      }
    }
  }
}

#######################
# Histogram Assessments
#######################

dir IDAlignMon {
#  algorithm = IDAlign_GatherData
#  reference = IDAlignShiftHists_Ref
  dir Tracks_NoTriggerSelection {
    dir HitEfficiencies {
      hist measurements_eff_vs_layer_barrel {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_Sil_barrel
      }
      hist measurements_eff_vs_layer_eca {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_Sil_ec
      }
      hist measurements_eff_vs_layer_ecc {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_Sil_ec
      }
      hist hits_eff_vs_phiSector_trt_b0 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_TRTB
      }
      hist hits_eff_vs_phiSector_trt_b1 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_TRTB
      }
      hist hits_eff_vs_phiSector_trt_b2 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies
        algorithm = IDAlign_Eff_TRTB
      }
      hist measurements_eff_vs_Eta_Phi_pix_b0 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b1 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b2 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_pix_b3 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b0 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b1 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b2 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist measurements_eff_vs_Eta_Phi_sct_b3 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Detail
        algorithm = Histogram_Not_Empty
      }
      hist holes_eff_vs_layer_barrel {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_eff_vs_layer_eca {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_eff_vs_layer_ecc {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_pix_b0 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_pix_b1 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_pix_b2 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_pix_b3 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_sct_b0 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_sct_b1 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_sct_b2 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
      hist  holes_vs_Eta_Phi_sct_b3 {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/HitEfficiencies_Expert
        algorithm = Histogram_Not_Empty
      }
    }
    dir Residuals {
      output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/Residuals
      #PIX
      hist pix_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResXGaussFit
        display = StatBox,gaus(-0.05,0.05) # for plotting the fit function on top of the histogram
                                           # same algorithm and fit range (xmin,xmax) as used in algorithm = IDAlign_PixResXGaussFit

      }
      hist pix_b_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }
      hist pix_b0_residualx {
        algorithm = Histogram_Not_Empty
      }
      hist pix_b0_residualy {
        algorithm = Histogram_Not_Empty
      }

      hist pix_eca_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }

      hist pix_ecc_residualx {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResXGaussFit
        display = StatBox,gaus(-0.1,0.1)
      }
      
      hist pix_eca_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEcaResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      hist pix_ecc_residualy {
#       algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
        algorithm = IDAlign_PixEccResYGaussFit
        display = StatBox,gaus(-0.5,0.5)
      }

      #Si
      hist si_barrel_resX_mean {
        algorithm = IDAlign_Si_Barrel_ResX_BinContentAbsComp
      }
      hist si_eca_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_ecc_resX_mean {
        algorithm = IDAlign_Si_EC_ResX_BinContentAbsComp
      }
      hist si_barrel_resY_mean {
        algorithm = IDAlign_Si_Barrel_ResY_BinContentAbsComp
      }
      hist si_eca_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }
      hist si_ecc_resY_mean {
        algorithm = IDAlign_Si_EC_ResY_BinContentAbsComp
      }
      hist sct_b_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctBarrelXGaussFit
	 display = Statbox,gaus(-0.08,0.08)
      }
      hist sct_eca_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEcaXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }
      hist sct_ecc_residualx {
#        algorithm = IDAlign_Res_CheckHisto_Mean&GatherData
         algorithm = IDAlign_SctEccXGaussFit
	 display = Statbox,gaus(-0.5,0.5)
      }
      
      #TRT
      hist trt_b_aveRes_l0 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l1 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_b_aveRes_l2 {
        algorithm = IDAlign_TRT_Barrel_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_A {
        algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }
      hist trt_ec_aveResVsRing_Endcap_C {
        algorithm = IDAlign_TRT_EC_Res_BinContentAbsComp
      }
      hist trt_b_residualR {
        algorithm = IDAlign_TrtResRGaussFit
        display = StatBox,gaus(-0.3,0.3)
      }
      hist trt_ec_residualR_Endcap_A {
        algorithm = IDAlign_TrtEaRGaussFit
        display = StatBox,gaus(-1,1)
      }
      hist trt_ec_residualR_Endcap_C {
        algorithm = IDAlign_TrtEcRGaussFit
        display = StatBox,gaus(-1,1)
      }
    }
    dir GenericTracks {
      output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks
      hist eta {
        algorithm = IDAlign_GatherData
        display = StatBox
        reference = CentrallyManagedReferences
      }
      hist phi {
        algorithm = IDAlign_GatherData
        display = StatBox
      }
      hist pT {
        algorithm = IDAlign_GatherData
        display = StatBox
      }
      hist trk_d0_barrel {
        algorithm = IDAlign_GatherData
        display = StatBox
      }
      hist trk_z0_barrel {
        algorithm = IDAlign_GatherData
        display = StatBox
      }
      hist chi2oDoF {
        algorithm = IDAlign_GatherData
        display = StatBox
      }
      hist Npixhits_per_track {
        algorithm = IDAlign_Gen_SideBand
        display = StatBox
      }
      hist Nscthits_per_track {
        algorithm = IDAlign_Gen_SideBand
        display = StatBox
      }
      hist Ntrthits_per_track {
        algorithm = IDAlign_Gen_SideBand
        display = StatBox
      }
      hist Npixhits_per_track_barrel {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Npixhits_per_track_ecc {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Npixhits_per_track_eca {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Nscthits_per_track_barrel {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Nscthits_per_track_ecc {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Nscthits_per_track_eca {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Ntrthits_per_track_barrel {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Ntrthits_per_track_ecc {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
      hist Ntrthits_per_track_eca {
        output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/GenericTracks_Detail
        algorithm = IDAlign_Gen_SideBand
      }
    }
    dir TrackSegments {
      output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/TrackSegmentComparisonUpvsDown
      hist delta_d0 {
#     	algorithm = IDAlign_GatherData
        algorithm = IDAlign_deltad0GaussFit
        display = AxisRange(-1.0,1.0,"X"),StatBox,gaus(-0.1,0.1)
      } 
      hist delta_phi0 {
#     	algorithm = IDAlign_GatherData
        algorithm = IDAlign_deltaPhi0GaussFit 
        display = AxisRange(-0.01,0.01,"X"),StatBox,gaus(-0.001,0.001)
      } 
      hist delta_qOverPt {
#        algorithm = IDAlign_GatherData
         algorithm = IDAlign_deltaqOverPtGaussFit
         display = AxisRange(-0.1,0.1,"X"),StatBox,gaus(-0.005,0.005)
      } 
      hist delta_z0 {
#       algorithm = IDAlign_GatherData
        algorithm = IDAlign_deltaz0GaussFit 
        display = StatBox,gaus(-0.6,0.6)
     } 
     hist delta_eta0 {
#      algorithm = IDAlign_GatherData
       algorithm = IDAlign_deltaEta0GaussFit
       display = AxisRange(-0.05,0.05,"X"),StatBox,gaus(-0.01,0.01)
     }
   }
  }
#  dir InDetCosmic_TracksUp_InDetCosmic_TracksLow_NoTriggerSelection {
#    dir TrackSegments {
#       output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/TrackSegmentComparisonUpvsDown
#       hist delta_d0 {
##         algorithm = IDAlign_GatherData
#         algorithm = IDAlign_deltad0GaussFit
#         display = AxisRange(-1.0,1.0,"X"),StatBox,gaus(-0.1,0.1)
#       } 
#       
#       hist delta_phi0 {
##         algorithm = IDAlign_GatherData
#         algorithm = IDAlign_deltaPhi0GaussFit 
#         display = AxisRange(-0.01,0.01,"X"),StatBox,gaus(-0.001,0.001)
#       } 
#       hist delta_qOverPt {
##         algorithm = IDAlign_GatherData
#         algorithm = IDAlign_deltaqOverPtGaussFit
#         display = AxisRange(-0.1,0.1,"X"),StatBox,gaus(-0.005,0.005)
#       } 
#       hist delta_z0 {
##         algorithm = IDAlign_GatherData
#         algorithm = IDAlign_deltaz0GaussFit 
#         display = StatBox,gaus(-0.6,0.6)
#       } 
#       hist delta_eta0 {
##         algorithm = IDAlign_GatherData
#         algorithm = IDAlign_deltaEta0GaussFit
#         display = AxisRange(-0.05,0.05,"X"),StatBox,gaus(-0.01,0.01)
#       }
#        
#    }
#  }
#  dir ResolvedPixelTracks_ResolvedSCTTracks_NoTriggerSelection {
#    dir TrackSegments {
#       output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/TrackSegmentComparisonPixelvsSCT
#       hist delta_d0 {
#         algorithm = IDAlign_GatherData
#         display = AxisRange(-1.0,1.0,"X"),StatBox
#       } 
#       hist delta_phi0 {
#         algorithm = IDAlign_GatherData
#         display = AxisRange(-0.01,0.01,"X"),StatBox
#       } 
#       hist delta_qoverp {
#         algorithm = IDAlign_GatherData
#         display = AxisRange(-0.1,0.1,"X"),StatBox
#       } 
#       hist delta_z0 {
#         algorithm = IDAlign_GatherData
#         display = StatBox
#       } 
#       hist delta_eta0 {
#         algorithm = IDAlign_GatherData
#         display = AxisRange(-0.05,0.05,"X"),StatBox
#       } 
#    }
#  }
#  dir ResolvedSCTTracks_TRTStandaloneTRTTracks_NoTriggerSelection {
#    dir TrackSegments {	
#       output = InnerDetector/IDAlignment/Tracks_NoTriggerSelection/TrackSegmentComparisonSCTvsTRT
#       hist delta_d0 {
#         algorithm = IDAlign_GatherData
#         display = StatBox
#       } 
#       hist delta_phi0 {
#         algorithm = IDAlign_GatherData
#         display = StatBox
#       } 
#       hist delta_qoverp {
#         algorithm = IDAlign_GatherData
#         display = StatBox
#       } 
#    }
#  }
}



#############
# Algorithms
#############

algorithm IDAlign_PixResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixResXGaussThresholds
  xmin = -0.05
  xmax = 0.05
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  reference = CentrallyManagedReferences
}

algorithm IDAlign_PixEcaResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# only simple gaus, double gaus would cause undefined status for other plots
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEcaResXGaussThresholds
  xmin = -0.1
  xmax = 0.1
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixEccResXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEccResXGaussThresholds
  xmin = -0.1
  xmax = 0.1
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixEcaResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEcaResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_PixEccResYGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_PixEccResYGaussThresholds
  xmin = -0.5
  xmax = 0.5
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_SctBarrelXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# doublegaus would cause undefined status for other plots (e.g pix_b_residualx), but ok for itself !
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctResXGaussThresholds
  xmin = -0.08     
  xmax = 0.08       
  MinStat = 100
  reference = CentrallyManagedReferences
}

algorithm IDAlign_SctEcaXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctEcaXGaussThresholds
  xmin = -0.5     
  xmax = 0.5       
  MinStat = 100
  reference = CentrallyManagedReferences
}

algorithm IDAlign_SctEccXGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_SctEccXGaussThresholds
  xmin = -0.5     
  xmax = 0.5       
  MinStat = 100
  reference = CentrallyManagedReferences
}

algorithm IDAlign_TrtResRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
# doublegaus would cause undefined status for other plots (e.g pix_b_residualx), but ok for itself !
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtResRGaussThresholds
  xmin = -0.3
  xmax = 0.3
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_TrtEaRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtEaRGaussThresholds
  xmin = -1
  xmax = 1
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_TrtEcRGaussFit {
  libname = libdqm_algorithms.so
  name = Simple_gaus_Fit
#  name = Simple_doublegaus_Fit
  thresholds = IDAlign_TrtEcRGaussThresholds
  xmin = -1
  xmax = 1
  MinStat = 100
  reference = CentrallyManagedReferences
 }


algorithm IDAlign_deltad0GaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_doublegaus_Fit
  name = Simple_gaus_Fit
  thresholds = IDAlign_deltad0GaussThresholds
  xmin = -0.1
  xmax = 0.1
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_deltaPhi0GaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_doublegaus_Fit
  name = Simple_gaus_Fit
  thresholds = IDAlign_deltaPhi0GaussThresholds
  xmin = -0.001
  xmax = 0.001
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_deltaqOverPtGaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_doublegaus_Fit
  name = Simple_gaus_Fit
  thresholds = IDAlign_deltaqOverPtGaussThresholds
  xmin = -0.005
  xmax = 0.005
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_deltaz0GaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_doublegaus_Fit
  name = Simple_gaus_Fit
  thresholds = IDAlign_deltaz0GaussThresholds
  xmin = -0.6
  xmax = 0.6
  MinStat = 100
  reference = CentrallyManagedReferences
 }

algorithm IDAlign_deltaEta0GaussFit {
  libname = libdqm_algorithms.so
#  name = Simple_doublegaus_Fit
  name = Simple_gaus_Fit
  thresholds = IDAlign_deltaEta0GaussThresholds
  xmin = -0.01
  xmax = 0.01
  MinStat = 100
  reference = CentrallyManagedReferences
 }





#
#GenericTracks
#
algorithm IDAlign_Gen_SideBand {
  libname = libdqm_algorithms.so
  name = SideBand_Absolute
  thresholds = IDAlign_Gen_SideThresh
  reference = CentrallyManagedReferences
  UseUnderFlow = 0
  UseOverFlow = 1
  Min = 0.0
  Max = 0.0
}

#
# Efficiencies
#
compositeAlgorithm Bins_LessThan_Threshold&BinPrint {
  libnames = libdqm_algorithms.so
  subalgs = Bins_LessThan_Threshold,BinPrint
} 
algorithm IDAlign_Eff_Sil_barrel {
  name = Bins_LessThan_Threshold&BinPrint
  thresholds = IDAlign_Eff_Sil_Thresh
  reference = CentrallyManagedReferences
  BinThreshold = 0.97
  MinStat = 5000
  UnMask_All = 11
}
algorithm IDAlign_Eff_Sil_ec {
  name = Bins_LessThan_Threshold&BinPrint
  thresholds = IDAlign_Eff_Sil_Thresh
  reference = CentrallyManagedReferences
  BinThreshold = 0.97
  MinStat = 5000
  UnMask_All = 21
}

#algorithm IDAlign_Eff_Sil {
#  libname = libdqm_algorithms.so
#  name = Bins_LessThan_Threshold
#  thresholds = IDAlign_Eff_Sil_Thresh
#  reference = CentrallyManagedReferences
#  BinThreshold = 0.97
#  MinStat = 5000
#}

algorithm IDAlign_Eff_TRTB {
  libname = libdqm_algorithms.so
  name = Bins_Diff_FromAvg
  reference = CentrallyManagedReferences
  thresholds = IDAlign_Eff_TRTB_Thresh
  NSigma = 5
  PublishBins = 1
  MinStat = 5000
  
#  algorithm MaxDiffrel {
#    MaxDiffRel = 0.01
#  }
}

#algorithm IDAlign_Eff_BinContentComp {
#  libname = libdqm_algorithms.so
#  name = BinContentComp
#  thresholds = IDAlign_Eff_Sil_Thresh
#  reference = CentrallyManagedReferences
#  NSigma = 5
#  Value = -999999
#  PublishBins = 1
#}

#
# Residuals
#
#algorithm IDAlign_Res_BinContentCompLoose {
#  libname = libdqm_algorithms.so
#  name = BinContentComp
#  reference = CentrallyManagedReferences
#  thresholds = IDAlign_Res_BinContentCompLooseThresh
#  NSigma = 5
#  Value = 0
#  
##  algorithm MaxDiffabs {
##    MaxDiffAbs = 0.003
##  }
#}
compositeAlgorithm Bins_LessThanAbs_Threshold&BinPrint {
  libnames = libdqm_algorithms.so
  subalgs = Bins_LessThanAbs_Threshold,BinPrint
} 

algorithm IDAlign_Si_Barrel_ResY_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.01
  thresholds = IDAlign_Si_Barrel_ResY_BinContentAbsCompThresh  
  UnMask_All = 3
}

algorithm IDAlign_Si_EC_ResY_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_Si_EC_ResY_BinContentAbsCompThresh  
  UnMask_All = 3
}
algorithm IDAlign_Si_Barrel_ResX_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.01
  thresholds = IDAlign_Si_Barrel_ResX_BinContentAbsCompThresh  
  UnMask_All = 11
}

algorithm IDAlign_Si_EC_ResX_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_Si_EC_ResX_BinContentAbsCompThresh  
  UnMask_All = 21
}


algorithm IDAlign_TRT_Barrel_Res_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.02
  thresholds = IDAlign_TRT_Barrel_Res_BinContentAbsCompThresh  
  UnMask_All = 32
}

algorithm IDAlign_TRT_EC_Res_BinContentAbsComp {
  name = Bins_LessThanAbs_Threshold&BinPrint
  reference = CentrallyManagedReferences
  BinThreshold = 0.1
  thresholds = IDAlign_TRT_EC_Res_BinContentAbsCompThresh  
  UnMask_All = 40
}

compositeAlgorithm IDAlign_CheckHisto_Mean&GatherData {
  subalgs = GatherData,CheckHisto_Mean
  libnames = libdqm_algorithms.so
}

#algorithm IDAlign_Res_CheckHisto_Mean&GatherData {
#  reference = CentrallyManagedReferences
#  name = IDAlign_CheckHisto_Mean&GatherData
#  thresholds = IDAlign_Res_CheckMean_Thresh
#  MinStat = 100
#}


#############
# Thresholds
#############

#
# GenericTracks
#

thresholds IDAlign_Gen_SideThresh {
  limits Threshold {
    warning = 10
    error = 1
  }
}

#
# Efficiencies
#
thresholds IDAlign_Eff_Sil_Thresh {
  limits NBins {
    warning = 1
    error = 3
  }
}

thresholds IDAlign_Eff_TRTB_Thresh {
  limits NBins {
    warning = 1
    error = 3
  }
}

#
# Residuals
#
#thresholds IDAlign_Res_BinContentCompLooseThresh {
#  limits NBins {
#    warning = 1
#    error = 3
#  }
#}

thresholds IDAlign_Si_Barrel_ResY_BinContentAbsCompThresh {
  limits NBins {
    warning = 11
    error = 9
  } 
}

thresholds IDAlign_Si_EC_ResY_BinContentAbsCompThresh {
  limits NBins {
    warning = 21
    error = 19
  } 
}

thresholds IDAlign_Si_Barrel_ResX_BinContentAbsCompThresh {
  limits NBins {
    warning = 11
    error = 9
  } 
}

thresholds IDAlign_Si_EC_ResX_BinContentAbsCompThresh {
  limits NBins {
    warning = 19
    error = 15
  } 
}

thresholds IDAlign_TRT_Barrel_Res_BinContentAbsCompThresh {
  limits NBins {
    warning = 29
    error = 26
  } 
}

thresholds IDAlign_TRT_EC_Res_BinContentAbsCompThresh {
  limits NBins {
    warning = 37
    error = 34
  } 
}

#thresholds IDAlign_Res_CheckMean_Thresh {
#  limits AbsXMean {
#    warning = 0.01
#    error = 0.05
#  }
#}


thresholds IDAlign_PixResXGaussThresholds {
  limits Sigma {
     warning = 0.04
     error = 0.07
  } 
}

thresholds IDAlign_PixResYGaussThresholds {
  limits Sigma {
     warning = 0.15
     error = 0.2
  }
}

thresholds IDAlign_PixEcaResXGaussThresholds {
  limits Sigma {
     warning = 0.06
     error = 0.08
  }
}

thresholds IDAlign_PixEccResXGaussThresholds {
  limits Sigma {
     warning = 0.06
     error = 0.08
  }
}

thresholds IDAlign_PixEcaResYGaussThresholds {
  limits Sigma {
     warning = 0.5
     error = 0.7
  }
}

thresholds IDAlign_PixEccResYGaussThresholds {
  limits Sigma {
     warning = 0.5
     error = 0.7
  }
}

thresholds IDAlign_SctResXGaussThresholds {
  limits Sigma {
     warning = 0.04
     error = 0.07
  }
}

thresholds IDAlign_SctEcaXGaussThresholds {
  limits Sigma {
     warning = 10.
     error = 20.
  }
}

thresholds IDAlign_SctEccXGaussThresholds {
  limits Sigma {
     warning = 10.
     error = 20.
  }
}

thresholds IDAlign_TrtResRGaussThresholds {
  limits Sigma {
     warning = 0.18
     error = 0.20
  }
}

thresholds IDAlign_TrtEaRGaussThresholds {
  limits Sigma {
     warning = 0.7
     error = 0.9
  }
}

thresholds IDAlign_TrtEcRGaussThresholds {
  limits Sigma {
     warning = 0.7
     error = 0.9
  }
}

thresholds IDAlign_deltad0GaussThresholds {
  limits Sigma {
     warning = 0.05
     error = 0.075
  }
}

thresholds IDAlign_deltaPhi0GaussThresholds {
  limits Sigma {
     warning = 0.0003
     error = 0.0005
  }
}

thresholds IDAlign_deltaqOverPtGaussThresholds {
  limits Sigma {
     warning = 0.0015
     error = 0.0025
  }
}

thresholds IDAlign_deltaz0GaussThresholds {
  limits Sigma {
     warning = 0.2
     error = 0.3
  }
}

thresholds IDAlign_deltaEta0GaussThresholds {
  limits Sigma {
     warning = 0.003
     error = 0.005
  }
}




