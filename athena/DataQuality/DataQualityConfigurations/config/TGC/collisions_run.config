# **********************************************************************
# $Id: collisions_run.config 768155 2016-08-16 11:07:43Z tuna $
# **********************************************************************

###########################################################
# TGC
###########################################################


########################
# References
#######################

reference TGCShift2015thr_Ref {
   location = /eos/atlas/atlascerngroupdisk/data-dqm/references/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/
  file = data15_13TeV.00279813.express_express.merge.HIST.f628_h79._0001.1
   path = run_279813
   name = same_name
}
reference TGCShift2016thr_Ref {
   location = /eos/atlas/atlascerngroupdisk/data-dqm/references/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/
  file = data16_13TeV.00304008.express_express.merge.HIST.f716_h151._0001.1
   path = run_304008
   name = same_name
}

#############
# Output
#############

output top_level {
  algorithm = TGC_WorstCaseSummary
  output MuonDetectors {
    algorithm = TGC_WorstCaseSummary
    
########################
# Muon Lv1
    output L1MU {
      algorithm = TGC_WorstCaseSummary
      output L1MUE {
        algorithm = TGC_WorstCaseSummary
        
  # Endcap Lv1 Shift
        output Shift {
          algorithm = TGC_WorstCaseSummary
          output TGCEA {
            algorithm = TGC_WorstCaseSummary
            output Coverage {
              algorithm = TGC_WorstCaseSummary
            }
            output Efficiency {
              algorithm = TGC_WorstCaseSummary
            }
            output Timing {
              algorithm = TGC_WorstCaseSummary
            }
          }
          output TGCEC {
            algorithm = TGC_WorstCaseSummary
            output Coverage {
              algorithm = TGC_WorstCaseSummary
            }
            output Efficiency {
              algorithm = TGC_WorstCaseSummary
            }
            output Timing {
              algorithm = TGC_WorstCaseSummary
            }
          }
        } # Shift
        
  # Endcap Lv1 Expert
        output Expert {
	  weight = 0
          algorithm = TGC_WorstCaseSummary
          output Global_Summary {
            algorithm = TGC_WorstCaseSummary
          }
          
          output TGCEA {
            algorithm = TGC_WorstCaseSummary
            output Coverage {
              algorithm = TGC_WorstCaseSummary
            }
            output Efficiency {
              algorithm = TGC_WorstCaseSummary
            }
            output Timing {
              algorithm = TGC_WorstCaseSummary
            }






          }
          
          output TGCEC {
            algorithm = TGC_WorstCaseSummary
            output Coverage {
              algorithm = TGC_WorstCaseSummary
            }
            output Efficiency {
              algorithm = TGC_WorstCaseSummary
            }
            output Timing {
              algorithm = TGC_WorstCaseSummary
            }
          }
          
        } # Expert
        
      } # L1MUE
    } # L1MU
    
# TGCraw
    output TGC {
      algorithm = TGC_WorstCaseSummary
      
  # TGCRaw Shift
      output Shift {
        algorithm = TGC_WorstCaseSummary
        output TGCEA {
          algorithm = TGC_WorstCaseSummary
        }
        output TGCEC {
          algorithm = TGC_WorstCaseSummary
        }
      } # Shift
      
  # TGCRaw Expert
      output Expert {
	weight = 0
        algorithm = TGC_WorstCaseSummary
        output Global_Summary {
          algorithm = TGC_WorstCaseSummary
        }
        
        output MDTvsTGCEA {
          algorithm = TGC_WorstCaseSummary
        }
        output MDTvsTGCEC {
          algorithm = TGC_WorstCaseSummary
        }

        output TGCEA {
          algorithm = TGC_WorstCaseSummary
          output Coverage {
            algorithm = TGC_WorstCaseSummary
          }
          output Efficiency {
            algorithm = TGC_WorstCaseSummary
          }
          output Inner_Coin {
            algorithm = TGC_WorstCaseSummary
          }
        }
        
        output TGCEC {
          algorithm = TGC_WorstCaseSummary
          output Coverage {
            algorithm = TGC_WorstCaseSummary
          }
          output Efficiency {
            algorithm = TGC_WorstCaseSummary
          }
          output Inner_Coin {
            algorithm = TGC_WorstCaseSummary
	  }
        }
        
      } # Expert
      
    } # TGCraw
    
    
  } ##MuonDetectors  
}

#######################
# Histogram Assessments
#######################

dir Muon {
  dir MuonRawDataMonitoring {
    
########################
# Muon Lv1
    dir TGCLV1 {
      dir Global {
	hist RoI_Eta_Vs_Phi_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT1_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT2_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT3_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT4_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT5_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist RoI_Eta_Vs_Phi_PT6_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}
	hist SL_Chamber_All {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	}

        dir Summary {
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_E1_T9 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_E2_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_E3_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_E4_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_E5_T5 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
	  hist Summary_Of_SL_Timing_Per_Chamber_Type_F_T2 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
	  }
        }
      } # Global
      
      dir TGCEA {
	output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA
        hist SL_Timing_More_Than_PT1_TGC_Triggered_A {
	  algorithm = TGC_Trigger_Timing
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Timing
        }
        hist SL_Timing_More_Than_PT1_RPC_Low_Triggered_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Timing
        }
        hist SL_Timing_More_Than_PT1_RPC_High_Triggered_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Timing
        }
        hist SL_Timing_More_Than_PT1_L1Calo_Triggered_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Timing
        }

        hist SL_Timing_More_Than_PT1_Muid_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Timing
        }

        hist Low_Pt_Timing_More_Than_PT1_Muid_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Timing
        }

        hist SL_Chamber_A {
	  algorithm = TGC_SL_Map
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_A {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT1_A {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT2_A {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT3_A {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT4_A {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT5_A {
	  algorithm = TGC_RoI_Map_PT5
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT6_A {
	  algorithm = TGC_RoI_Map_PT6
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
	
        hist Pt_Threshold_A {
	  algorithm = TGC_Pt_Threshold
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Coverage
        }
        hist LB_VS_SL_Trigger_Sector_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Coverage
          display = TCanvas(900,490)
        }

        dir Rate {
          dir Ratio {
	    hist Number_Of_SL_Triggers_Per_Event_Vs_2LB_A {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Coverage
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT1_Triggers_Per_Event_Vs_2LB_A {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT2_Triggers_Per_Event_Vs_2LB_A {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT3_Triggers_Per_Event_Vs_2LB_A {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	  }
	} # Rate
	
        dir Eff {
          hist Trigger_Efficiency_PT4_Muid_A {
            algorithm = alg_L1eff_eta_vs_phi 
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Efficiency
          }
          
	  hist Trigger_Efficiency_Posi_PT1_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT2_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT3_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT4_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT5_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT6_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }

	  hist Trigger_Efficiency_Nega_PT1_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT2_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT3_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT4_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT5_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT6_Muid_A {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
          }
          
          hist Trigger_Turn_On_Curve_PT4_Muid_A_Fit {
            algorithm = TGC_flat_fit_PT4
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_PT5_Muid_A_Fit {
            algorithm = TGC_flat_fit_PT5
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_PT6_Muid_A_Fit {
            algorithm = TGC_flat_fit_PT6
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Efficiency
            display = TCanvas(900,490)
          }

          hist Trigger_Turn_On_Curve_Posi_PT1_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT1
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT2_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT2
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT3_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT3
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT4_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT4
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT5_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT5
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT6_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT6
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }

          hist Trigger_Turn_On_Curve_Nega_PT1_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT1
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT2_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT2
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
               display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT3_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT3
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT4_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT4
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT5_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT5
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT6_Muid_A_Fit {
	    algorithm = TGC_flat_fit_PT6
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Efficiency
            display = TCanvas(900,490)
          }
	} # Eff
        
        hist SL_Sector_A {
	  algorithm = TGC_Trigger_Sector
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist Low_Pt_Wire_Sector_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist Low_Pt_Strip_Sector_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist High_Pt_Wire_Sector_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist High_Pt_Strip_Sector_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }

        hist Low_Pt_Wire_Chamber_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist Low_Pt_Strip_Chamber_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist High_Pt_Wire_Chamber_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        hist High_Pt_Strip_Chamber_A {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEA/Coverage
        }
        dir Summary {
	  hist Summary_Of_Low_Pt_Timing_A {
	    algorithm = alg_summary_timming_fraction 
	    output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Timing
          }
          hist Summary_Of_SL_Timing_A {
            algorithm = alg_summary_timming_fraction 
	    output = MuonDetectors/L1MU/L1MUE/Shift/TGCEA/Timing
          }
        } # Summary
        #Inn coin
        hist EIFI_Lumi_VS_Bit_A {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/TGCEA/Inner_Coin
        }
        hist EIFI_Sector_VS_Bit_A {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/TGCEA/Inner_Coin
        }


      } # TGCEA

      dir TGCEC {
	output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC
        hist SL_Timing_More_Than_PT1_TGC_Triggered_C {
	  algorithm = TGC_Trigger_Timing
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Timing
        }
        hist SL_Timing_More_Than_PT1_RPC_Low_Triggered_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Timing
        }
        hist SL_Timing_More_Than_PT1_RPC_High_Triggered_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Timing
        }
        hist SL_Timing_More_Than_PT1_L1Calo_Triggered_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Timing
        }

        hist SL_Timing_More_Than_PT1_Muid_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Timing
        }

        hist Low_Pt_Timing_More_Than_PT1_Muid_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Timing
        }

        hist SL_Chamber_C {
	  algorithm = TGC_SL_Map
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Coverage
       }
        hist RoI_Eta_Vs_Phi_C {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT1_C {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT2_C {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT3_C {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT4_C {
	  algorithm = TGC_RoI_Map
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT5_C {
	  algorithm = TGC_RoI_Map_PT5
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist RoI_Eta_Vs_Phi_PT6_C {
	  algorithm = TGC_RoI_Map_PT6
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
	
        hist Pt_Threshold_C {
	  algorithm = TGC_Pt_Threshold
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Coverage	
        }
        hist LB_VS_SL_Trigger_Sector_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Coverage
          display = TCanvas(900,490)
        }

        dir Rate {
          dir Ratio {
	    hist Number_Of_SL_Triggers_Per_Event_Vs_2LB_C {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Coverage
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT1_Triggers_Per_Event_Vs_2LB_C {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT2_Triggers_Per_Event_Vs_2LB_C {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	    hist Number_Of_PT3_Triggers_Per_Event_Vs_2LB_C {
	      algorithm = TGC_GatherData
	      output = MuonDetectors/L1MU/L1MUE/Expert/Global_Summary
              display = TCanvas(900,490)
            }
	  }
	} # Rate
        
        dir Eff {
          hist Trigger_Efficiency_PT4_Muid_C {
            algorithm = alg_L1eff_eta_vs_phi 
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Efficiency
          }
          
	  hist Trigger_Efficiency_Posi_PT1_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT2_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT3_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT4_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT5_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Posi_PT6_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }

	  hist Trigger_Efficiency_Nega_PT1_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT2_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT3_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT4_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT5_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }
	  hist Trigger_Efficiency_Nega_PT6_Muid_C {
	    algorithm = TGC_GatherData
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
          }

          hist Trigger_Turn_On_Curve_Posi_PT1_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT1
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT2_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT2
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT3_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT3
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT4_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT4
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT5_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT5
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Posi_PT6_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT6
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          
          hist Trigger_Turn_On_Curve_PT4_Muid_C_Fit {
            algorithm = TGC_flat_fit_PT4
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
	  hist Trigger_Turn_On_Curve_PT5_Muid_C_Fit {
            algorithm = TGC_flat_fit_PT5
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
	  hist Trigger_Turn_On_Curve_PT6_Muid_C_Fit {
            algorithm = TGC_flat_fit_PT6
            output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
 
          hist Trigger_Turn_On_Curve_Nega_PT1_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT1
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT2_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT2
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT3_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT3
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT4_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT4
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT5_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT5
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
          hist Trigger_Turn_On_Curve_Nega_PT6_Muid_C_Fit {
	    algorithm = TGC_flat_fit_PT6
	    output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Efficiency
            display = TCanvas(900,490)
          }
	} # Eff
        
        hist SL_Sector_C {
	  algorithm = TGC_Trigger_Sector
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist Low_Pt_Wire_Sector_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist Low_Pt_Strip_Sector_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist High_Pt_Wire_Sector_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist High_Pt_Strip_Sector_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }

        hist Low_Pt_Wire_Chamber_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist Low_Pt_Strip_Chamber_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist High_Pt_Wire_Chamber_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        hist High_Pt_Strip_Chamber_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/L1MU/L1MUE/Expert/TGCEC/Coverage
        }
        
	dir Summary {
	  hist Summary_Of_Low_Pt_Timing_C {
	    algorithm = alg_summary_timming_fraction 
	    output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Timing
          }
	  hist Summary_Of_SL_Timing_C {
	    algorithm = alg_summary_timming_fraction 
	    output = MuonDetectors/L1MU/L1MUE/Shift/TGCEC/Timing
          }
	} # Summary

        #Inner coin
        hist EIFI_Lumi_VS_Bit_C {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/TGCEC/Inner_Coin
        }
        hist EIFI_Sector_VS_Bit_C {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/TGCEC/Inner_Coin
        }

      } # TGCEC
    } # TGCLV1

########################
# TGCraw
    dir TGC {
      dir Global {
        dir Summary {
  	  output = MuonDetectors/TGC/Expert/Global_Summary

# wire M1
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station1_E1_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station1_E2_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station1_E3_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station1_E4_T3 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station1_F_T1 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

# wire M2
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_E1_T9 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_E2_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_E3_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_E4_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_E5_T4 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station2_F_T2 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

# wire M3
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_E1_T9 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_E2_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_E3_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_E4_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_E5_T5 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Wire_Efficiency_Per_Chamber_Type_Station3_F_T2 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

# strip M1
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station1_E1_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station1_E2_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station1_E3_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station1_E4_T3 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station1_F_T1 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

# strip M2
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_E1_T9 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_E2_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_E3_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_E4_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_E5_T4 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station2_F_T2 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

# strip M3
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_E1_T9 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_E2_T8 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_E3_T7 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_E4_T6 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_E5_T5 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }
	  hist Summary_Of_Strip_Efficiency_Per_Chamber_Type_Station3_F_T2 {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/Global_Summary
	  }

        } # Summary
      } # Global
      
      dir TGCEA {
	output = MuonDetectors/TGC/Expert/TGCEA

        hist Number_Of_TGC_Hits_Per_Event_A {
	  algorithm = TGC_Hits
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogY
	}
        hist Doublet_Triplet_Hits_A {
	  algorithm = TGC_OccupancyHoleFinder_imp
  	  output = MuonDetectors/TGC/Shift/TGCEA
	  display = LogZ,TCanvas(900,490)
	}
        hist Wire_Strip_Coincidence_Per_GasGap_A {
	  algorithm = TGC_Coverage
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        
        dir Efficiency {
          hist Efficiency_A {
	    algorithm = TGC_Efficiency
  	    output = MuonDetectors/TGC/Shift/TGCEA
          }
          hist Strip_Efficiency_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Wire_Efficiency_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Strip_Efficiency_Map_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Wire_Efficiency_Map_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
        } # Efficiency
        
	dir Occupancy {
	  hist Strip_Occupancy_Map_A {
	    algorithm = TGC_OccupancyMapStrip
	    output = MuonDetectors/TGC/Shift/TGCEA
	    display = LogZ
          }
	  hist Wire_Occupancy_Map_A {
	    algorithm = TGC_OccupancyMapWire
	    output = MuonDetectors/TGC/Shift/TGCEA
	    display = LogZ
          }
	} # Occupancy
        
        hist XY_View_A {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer1 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer2 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer3 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer4 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer5 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer6 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer7 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer8 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        hist XY_View_A_Layer9 {
	  algorithm = TGC_GatherData
  	  output = MuonDetectors/TGC/Expert/TGCEA/Coverage
	  display = LogZ
	}
        
        dir Summary {
          hist Summary_Of_Log10_Strip_Occupancy_Per_GasGap_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Summary_Of_Log10_Wire_Occupancy_Per_GasGap_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Summary_Of_Strip_Efficiency_Per_GasGap_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
          hist Summary_Of_Wire_Efficiency_Per_GasGap_A {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEA/Efficiency
          }
    	} # Summary




      } # TGCEA
      
      dir TGCEC {
	output = MuonDetectors/TGC/Expert/TGCEC

        hist Number_Of_TGC_Hits_Per_Event_C {
	  algorithm = TGC_Hits
  	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogY
	}
        hist Doublet_Triplet_Hits_C {
	  algorithm = TGC_OccupancyHoleFinder_imp
  	  output = MuonDetectors/TGC/Shift/TGCEC
	  display = LogZ,TCanvas(900,490)
	}        
        hist Wire_Strip_Coincidence_Per_GasGap_C {
	  algorithm = TGC_Coverage
  	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        
        dir Efficiency {
          hist Efficiency_C {
	    algorithm = TGC_Efficiency
  	    output = MuonDetectors/TGC/Shift/TGCEC
	  }
          hist Strip_Efficiency_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Wire_Efficiency_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Strip_Efficiency_Map_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Wire_Efficiency_Map_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
        } # Efficiency
        
	dir Occupancy {
	  hist Strip_Occupancy_Map_C {
	    algorithm = TGC_OccupancyMapStrip
	    output = MuonDetectors/TGC/Shift/TGCEC
	    display = LogZ
          }
	  hist Wire_Occupancy_Map_C {
	    algorithm = TGC_OccupancyMapWire
	    output = MuonDetectors/TGC/Shift/TGCEC
	    display = LogZ
          }
	} # Occupancy
        
        hist XY_View_C {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer1 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer2 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer3 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer4 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer5 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer6 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer7 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer8 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        hist XY_View_C_Layer9 {
	  algorithm = TGC_GatherData
	  output = MuonDetectors/TGC/Expert/TGCEC/Coverage
	  display = LogZ
	}
        
        dir Summary {
          hist Summary_Of_Log10_Strip_Occupancy_Per_GasGap_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Summary_Of_Log10_Wire_Occupancy_Per_GasGap_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Summary_Of_Strip_Efficiency_Per_GasGap_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
          hist Summary_Of_Wire_Efficiency_Per_GasGap_C {
	    algorithm = TGC_GatherData
  	    output = MuonDetectors/TGC/Expert/TGCEC/Efficiency
          }
	} # Summary
        
      } # TGCEC
    } # TGC(Raw)
    
    
    
    
    
    
    
    
    
    dir MDTvsTGC {
      dir TGCEA {
       output = MuonDetectors/MDTvsTGC/TGCEA
       hist Strip_EfficiencyAgainstMDT_Map_A {
         algorithm = TGC_GatherData
         output = MuonDetectors/TGC/Expert/MDTvsTGCEA
       }
       hist Wire_EfficiencyAgainstMDT_Map_A {
         algorithm = TGC_GatherData
         output = MuonDetectors/TGC/Expert/MDTvsTGCEA
       }
      }
    }
    dir MDTvsTGC {
      dir TGCEC {
        output = MuonDetectors/MDTvsTGC/TGCEC
        hist Strip_EfficiencyAgainstMDT_Map_C {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/MDTvsTGCEC
        }
        hist Wire_EfficiencyAgainstMDT_Map_C {
          algorithm = TGC_GatherData
          output = MuonDetectors/TGC/Expert/MDTvsTGCEC
        }
      }
    }
  } ## closing MuonRawDataMonitoring
}

#############
# Algorithms
############# 

algorithm TGC_Hits {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = th_TGC_Mean_Of_Hits
  MinStat = 1000
}
algorithm TGC_OccupancyMapWire {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_OccupancyMapWireThreshold
  MinStat = 1500
  BinThreshold = 0.02
  TotalBins = 1794
}
algorithm TGC_OccupancyMapStrip {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_OccupancyMapStripThreshold
  MinStat = 1200
  BinThreshold = 0.02
  TotalBins = 1578
}
algorithm TGC_Efficiency {
#  libname = libdqm_algorithms.so
#  name = Bins_LessThan_Threshold
#  thresholds = th_TGC_EfficiencyThreshold
#  MinStat = 14
#  BinThreshold = 0.8
##  BinThreshold = 0
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold&TGCBinContentDump&Histogram_Not_Empty
  thresholds = th_TGC_EfficiencyThreshold 
  reference = TGCShift2016thr_Ref
#  MinStat = 20000
  BinThreshold = 0.90
  TotalBins = 13
}
algorithm TGC_Coverage {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_Coverage
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 20000
  TotalBins = 1794
}
compositeAlgorithm Bins_GreaterThan_Threshold&TGCBinContentDump&Histogram_Not_Empty {
  subalgs = Bins_GreaterThan_Threshold,BinContentDump,Histogram_Not_Empty
  reference = TGCShift2016thr_Ref
}
compositeAlgorithm SideBand_Relative&Histogram_Not_Empty {
  subalgs = SideBand_Relative,Histogram_Not_Empty
  libname = libdqm_algorithms.so
}
algorithm TGC_Trigger_Timing {
  name = SideBand_Relative
  thresholds = th_TGC_TriggerTimingThreshold
  MinStat = 100
  UseUnderFlow = 0
  UseOverFlow = 0
  Min = 1
  Max = 1.99
}

algorithm TGC_Trigger_Sector {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_TGC_Trigger_Sector_Threshold
  MinStat = 5000
  BinThreshold = 1
}
algorithm TGC_RoI_Map {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640		
}
algorithm TGC_RoI_Map_PT5 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map_PT5
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640		
}
algorithm TGC_RoI_Map_PT6 {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_RoI_Map_PT6
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 45000
  TotalBins = 8640		
}
#algorithm TGC_SL_Map {
#  libname = libdqm_algorithms.so
#  name = Bins_GreaterThan_Threshold
#  thresholds = th_TGC_SL_Map
#  MinStat = 10000
#  BinThreshold = 1
#}
algorithm TGC_SL_Map {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_TGC_SL_Map
  BinThreshold = 0.02
  MinBinThreshold = 1
  MinStat = 4000
  TotalBins = 264		
}
algorithm TGC_Pt_Threshold {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThan_Threshold
  thresholds = th_TGC_Pt_Threshold
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences 
  MinStat = 1000
  BinThreshold = 1.0
}
algorithm TGC_Histogram_Not_Empty {
  libname = libdqm_algorithms.so
  name = Histogram_Not_Empty
}

### fermi fits temporarily disabled as they frequently give false alarms
## turn-on fermi
## PT1
#algorithm TGC_fermi_fit_PT1 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT1
#  MinPoint = 50
#  ImproveFit = 1.0
#}
## PT2
#algorithm TGC_fermi_fit_PT2 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT2
#  MinPoint = 50
#  ImproveFit = 1.0
#}
## PT3
#algorithm TGC_fermi_fit_PT3 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT3
#  MinPoint = 60
#  ImproveFit = 1.0
#}
## PT4
#algorithm TGC_fermi_fit_PT4 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT4
#  MinPoint = 60
#  ImproveFit = 1.0
#}
## PT5
#algorithm TGC_fermi_fit_PT5 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT5
#  MinPoint = 70
#  ImproveFit = 1.0
#}
## PT6
#algorithm TGC_fermi_fit_PT6 {
#  libname = libdqm_algorithms.so
#  name = Simple_fermi_Fit_Graph
#  thresholds = th_TGC_fermi_fit_PT6
#  MinPoint = 80
#  ImproveFit = 1.0
#}

### flat fits do not give false alarms
# turn-on flat
# PT1
algorithm TGC_flat_fit_PT1 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 40
  xmin = 6
}
algorithm TGC_flat_fit_PT2 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 40
  xmin = 8
}
algorithm TGC_flat_fit_PT3 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 50
  xmin = 10
}
algorithm TGC_flat_fit_PT4 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 12
}
algorithm TGC_flat_fit_PT5 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 14
}
algorithm TGC_flat_fit_PT6 {
  libname = libdqm_algorithms.so
  name = Simple_flat_Fit_Graph
  thresholds = th_TGC_flat_fit
  MinPoint = 80
  xmin = 16
}

algorithm TGC_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
}

# summary
algorithm TGC_WorstCaseSummary {
  libname = libdqm_summaries.so
  name = WorstCaseSummary
}
algorithm TGC_SimpleSummary {
  libname = libdqm_summaries.so
  name = SimpleSummary
}

algorithm TGC_AlwaysGreenSummary {
  libname = libdqm_summaries.so
  name = AlwaysGreenSummary
}

algorithm TGC_AlwaysUndefinedSummary {
  libname = libdqm_summaries.so
  name = AlwaysUndefinedSummary
}

algorithm TGC_OccupancyHoleFinder_imp {
  libname = libdqm_algorithms.so
  name = OccupancyHoleFinder
  MinMedian = 50
  MedianThreshold = 0.1
  ##Don't print info about lbn ranges above 95%
  SuppressThresh = 95
  ##Don't print info about dead chambers
  SuppressChamber = 1
  thresholds = th_TGC_OccupancyHoleFinder
}

algorithm alg_L1eff_eta_vs_phi {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanNonZeroMedian_Threshold
  thresholds = th_L1eff_eta_vs_phi
  BinThreshold = 0.90
  MinBinThreshold = 0.85
  MinStat = 20000
  TotalBins = 1296 
}

algorithm alg_summary_timming_fraction {
  libname = libdqm_algorithms.so
  name = SideBand_Relative 
  thresholds = th_summary_timming_fraction
  MinStat = 210
  UseUnderFlow = 1
  UseOverFlow = 1
  Min = 0.701 
  Max = 1.001

}


#############
# Thresholds
#############

thresholds th_TGC_Mean_Of_Hits {
  limits XMean {
    warning = 140
    error = 240
  }
}
thresholds th_TGC_OccupancyMapWireThreshold {
  limits NBins {
    warning = 1614
    error = 1434
  }
}
thresholds th_TGC_OccupancyMapStripThreshold {
  limits NBins {
    warning = 1420
    error = 1262
  }
}
thresholds th_TGC_EfficiencyThreshold {
  limits NBins {
    warning = 10
    error = 7 
  }
}
thresholds th_TGC_Coverage {
  limits NBins {
# 2064-1794=270 (no chamber)
#
#  only bottom 5 sectors are active for cosmic
# (1794 * 7/12 or 8/12 ) + 270 = 1316, 1466
#    warning = 1316
#    error = 1466
#
#  all sectors are active for physics
# (1794 * 0.1 or 2/12) + 270 = 449, 569
    warning = 1614
    error = 1613
  }
}
thresholds th_TGC_TriggerTimingThreshold {
  limits Threshold {
   warning = 0.40
   error = 0.4001
  }
}
thresholds th_TGC_Trigger_Sector_Threshold {
  limits NBins {
    warning = 0.5
    error = 0.0
  }
}
thresholds th_TGC_RoI_Map {
  limits NBins {
# 8640 * 0.92 = 7950 
# 8640 * 0.80 = 6912
# reduced to avoid warnings
    warning = 7950 
    error = 6912
  }
}
thresholds th_TGC_RoI_Map_PT5 {
  limits NBins {
# 8640 * 0.85 = 7344
# 8640 * 0.80 = 6912
    warning = 7344
    error = 6912
  }
}
thresholds th_TGC_RoI_Map_PT6 {
  limits NBins {
# 8640 * 0.92 = 7950
# 8640 * 0.80 = 6912 
    warning = 7950
    error = 6912
  }
}

thresholds th_TGC_SL_Map {
  limits NBins {
# 264 * 0.9 =237.6
    warning = 237
    error = 236
  }
}
thresholds th_TGC_Pt_Threshold {
  limits NBins {
    warning = 4
    error = 3
  }
}

### fermi fit thresholds, commented out whilst fermi algorithms are commented out
## turn-on thresholds
## PT1
#thresholds th_TGC_fermi_fit_PT1 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 3.0
#    error   = 2.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
#}
## PT2
#thresholds th_TGC_fermi_fit_PT2 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 4.0
#    error   = 3.0
#  }
#  limits Resolution {
#    warning = 1.0
#    error   = 2.0
#  }
#}
## PT3
#thresholds th_TGC_fermi_fit_PT3 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 7.0
#    error   = 6.0
#  }
#  limits Resolution {
#    warning = 2.0
#    error   = 3.0
#  }
#}
## PT4
#thresholds th_TGC_fermi_fit_PT4 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 11.0
#    error   = 10.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
#}
## PT5
#thresholds th_TGC_fermi_fit_PT5 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 11.0
#    error   = 10.0
#  }
#  limits Resolution {
#    warning = 3.0
#    error   = 4.0
#  }
#}
## PT6
#thresholds th_TGC_fermi_fit_PT6 {
#  limits Plateau {
#    warning = 0.8
#    error = 0.799
#  }
#  limits Threshold {
#    warning = 15.0
#    error   = 14.0
#  }
#  limits Resolution {
#    warning = 4.0
#    error   = 5.0
#  }
#}

# flat thresholds
thresholds th_TGC_flat_fit {
  limits Height {
    warning = 0.9
    error = 0.85
  }
}

thresholds th_TGC_OccupancyHoleFinder {
  limits NBins {
    #total 656/986
    warning = 90.001
    error = 90
  }
}

thresholds th_L1eff_eta_vs_phi {
  limits NBins {
    warning = 1166
    error =  1100
  }
}

thresholds th_summary_timming_fraction {
  limits Threshold {
   warning = 0.30
   error = 0.40
  }
}
