# **********************************************************************
# $Id: collisions_run.config 782236 2016-11-03 18:40:28Z harkusha $
# **********************************************************************


############################################################
# TileCal
############################################################

######################
# References
#####################

reference TileDigiErrorsLB {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
  file = TileDigiErrorsReferences_20170814.root
  name = TileDigiErrorsLB
}

reference TileDigiErrorsEB {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
  file = TileDigiErrorsReferences_20170814.root
  name = TileDigiErrorsEB
}

reference TileDigiErrorsEB_special {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
  file = TileDigiErrorsReferences_20170814.root
  name = TileDigiErrorsEB_special
}

reference TileDigiErrorsEB_innerMBTS {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
  file = TileDigiErrorsReferences_20170814.root
  name = TileDigiErrorsEB_innerMBTS
}

reference TileReference {
  location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Collisions/
  file = data12_8TeV.00214160.express_express.merge.HIST.f486_m1252_harkusha_20150704._0001.1
  path = run_214160
  name = same_name
}

#############
# Output
#############

output top_level {
  output TileCal {
    output Expert {
      output Cell {
        output bit0_RNDM {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit2_L1CAL {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit3_Muon {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
      }

      output Cluster {
        output bit0_RNDM {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit2_L1CAL {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit3_Muon {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
      }
      output MBTS {
        output Cell {
        }
      }
      output Tower {
        output bit0_RNDM {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit2_L1CAL {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
        output bit3_Muon {
          output AllPart {
          }
          output EBA {
          }
          output EBC {
          }
          output LBA {
          }
          output LBC {
          }
        }
      }
      output ROD {
        output AnyPhysTrig {
          output Summary {
          }
        }
        output  bit0_RNDM {
          output Summary {
          }
        }
        output bit2_L1CAL {
          output Summary {
          }
        }
        output bit3_Muon {
          output Summary {
          }
        }
      }
    }

    output Cell {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
        output CaloMon {
        }
      }
    }
    output Cluster {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
    }
    output MBTS {
      output Cell {
      }
    }
    output Muid {
      output AnyPhysTrig {
      }
    }
    output L2Muon {
      output AnyPhysTrig {
      }
    }
    output Tower {
      output AnyPhysTrig {
        output AllPart {
        }
        output EBA {
        }
        output EBC {
        }
        output LBA {
        }
        output LBC {
        }
      }
    }
    output Data_Corruption {
      output LBA {
      }
      output LBC {
      }
      output EBA {
      }
      output EBC {
      }
      output Per_lumiblock {
        output LBA {
        }
        output LBC {
        }
        output EBA {
        }
        output EBC {
        }
      }
    }
    output Collisions {
    }
    output Noise {
      output Digit {
      }
    }
    output Jet {
    }
  }
}

#######################
# Histogram Assessments
#######################

dir Tile {
  algorithm = Tile_GatherData/ref
  reference = CentrallyManagedReferences
  dir Cell {
    output = TileCal/Cell
    hist tileBadCell {
    }
    hist tileCellTimBalEBA {
    }
    hist tileCellTimBalEBC {
    }
    hist tileCellTimBalLBA {
    }
    hist tileCellTimBalLBC {
    }
    hist tileCellDetailNegOccMap_EBA {
    }
    hist tileCellDetailNegOccMap_EBC {
    }
    hist tileCellDetailNegOccMap_LBA {
    }
    hist tileCellDetailNegOccMap_LBC {
    }
    hist tileCellStatOnFly_EBA {
    }
    hist tileCellStatOnFly_EBC {
    }
    hist tileCellStatOnFly_LBA {
    }
    hist tileCellStatOnFly_LBC {
    }
    hist tileCellStatfromDB_LBA_LG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBA_HG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBC_LG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_LBC_HG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBA_LG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBA_HG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBC_LG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileCellStatfromDB_EBC_HG {
      display = SetGridx,SetGridy,SetGridStyle(1)
    }
    hist tileMaskChannOnFlyLumi_AllPart {
    }
    hist tileMaskChannOnFlyLumi_EBA {
    }
    hist tileMaskChannOnFlyLumi_EBC {
    }
    hist tileMaskChannOnFlyLumi_LBA {
    }
    hist tileMaskChannOnFlyLumi_LBC {
    }
    dir AnyPhysTrig {
      output = TileCal/Cell/AnyPhysTrig
      hist tileCellTimBalModPartAnyPhysTrig {
      }
      hist tileCellSynchAnyPhysTrig {
        algorithm = TileSynch_CheckMeanX
      }
      hist tileCellEneEtaPhiAllSampAnyPhysTrig {
        algorithm = Cell_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileCellEtaPhiOvThrAllSampAnyPhysTrig {
        algorithm = Cell_Occ
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileCellEneEtaPhiSampAAnyPhysTrig {
      }
      hist tileCellEneEtaPhiSampBAnyPhysTrig {
      }
      hist tileCellEneEtaPhiSampDAnyPhysTrig {
      }
      hist tileCellEneEtaPhiSampEAnyPhysTrig {
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cell/AnyPhysTrig/AllPart
        hist tileCellEneDiffAllSampAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEvEneSampEAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart
        }
        hist tileCellTimeDiffAllSampAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEAllPartAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileCellModuleCorrAllPartAnyPhysTrig {
          output = TileCal/Cell/AnyPhysTrig/AllPart
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cell/AnyPhysTrig/EBA
        hist tileCellDetailOccMapOvThr_EBAAnyPhysTrig {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBAAnyPhysTrig {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBAAnyPhysTrig {
        }
        hist tileCellEneDiffAllSampEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBAAnyPhysTrig {
        }
        hist tileCellEvEneLumiEBAAnyPhysTrig {
        }
        hist tileCellEvEneSampEEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBAAnyPhysTrig {
        }
        hist tileCellModuleCorrEBAAnyPhysTrig {
        }
        hist tileCellOccOvThrBCIDEBAAnyPhysTrig {
        }
        hist tileCellTimeEBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBAAnyPhysTrig {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBAAnyPhysTrig {
        }
        hist tileDigiPartTime_EBAAnyPhysTrig {
        }
        hist tilenCellsEBAAnyPhysTrig {
        }
        hist tilenCellsLBEBAAnyPhysTrig {
        }
      }
      dir EBC {
        output = TileCal/Cell/AnyPhysTrig/EBC
        hist tileCellDetailOccMapOvThr_EBCAnyPhysTrig {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBCAnyPhysTrig {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBCAnyPhysTrig {
        }
        hist tileCellEneDiffAllSampEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBCAnyPhysTrig {
        }
        hist tileCellEvEneLumiEBCAnyPhysTrig {
        }
        hist tileCellEvEneSampEEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBCAnyPhysTrig {
        }
        hist tileCellModuleCorrEBCAnyPhysTrig {
        }
        hist tileCellOccOvThrBCIDEBCAnyPhysTrig {
        }
        hist tileCellTimeEBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBCAnyPhysTrig {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBCAnyPhysTrig {
        }
        hist tileDigiPartTime_EBCAnyPhysTrig {
        }
        hist tilenCellsEBCAnyPhysTrig {
        }
        hist tilenCellsLBEBCAnyPhysTrig {
        }
      }
      dir LBA {
        output = TileCal/Cell/AnyPhysTrig/LBA
        hist tileCellDetailOccMapOvThr_LBAAnyPhysTrig {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBAAnyPhysTrig {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBAAnyPhysTrig {
        }
        hist tileCellEneDiffAllSampLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBAAnyPhysTrig {
        }
        hist tileCellEvEneLumiLBAAnyPhysTrig {
        }
        hist tileCellEvEneTimLBAAnyPhysTrig {
        }
        hist tileCellModuleCorrLBAAnyPhysTrig {
        }
        hist tileCellOccOvThrBCIDLBAAnyPhysTrig {
        }
        hist tileCellTimeLBAAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBAAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBAAnyPhysTrig {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBAAnyPhysTrig {
        }
        hist tileDigiPartTime_LBAAnyPhysTrig {
        }
        hist tilenCellsLBAAnyPhysTrig {
        }
        hist tilenCellsLBLBAAnyPhysTrig {
        }
      }
      dir LBC {
        output = TileCal/Cell/AnyPhysTrig/LBC
        hist tileCellDetailOccMapOvThr_LBCAnyPhysTrig {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCAnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBCAnyPhysTrig {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBCAnyPhysTrig {
        }
        hist tileCellEneDiffAllSampLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBCAnyPhysTrig {
        }
        hist tileCellEvEneLumiLBCAnyPhysTrig {
        }
        hist tileCellEvEneTimLBCAnyPhysTrig {
        }
        hist tileCellModuleCorrLBCAnyPhysTrig {
        }
        hist tileCellOccOvThrBCIDLBCAnyPhysTrig {
        }
        hist tileCellTimeLBCAnyPhysTrig {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBCAnyPhysTrig {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBCAnyPhysTrig {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBCAnyPhysTrig {
        }
        hist tileDigiPartTime_LBCAnyPhysTrig {
        }
        hist tilenCellsLBCAnyPhysTrig {
        }
        hist tilenCellsLBLBCAnyPhysTrig {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Expert/Cell/bit0_RNDM
      hist tileCellTimBalModPartbit0_RNDM {
      }
      hist tileCellSynchbit0_RNDM {
        algorithm = TileSynch_CheckMeanX
      }
      hist tileCellEneEtaPhiAllSampbit0_RNDM {
        algorithm = Cell_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileCellEtaPhiOvThrAllSampbit0_RNDM {
        algorithm = Cell_Occ
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Expert/Cell/bit0_RNDM/AllPart
        hist tileCellEneDiffAllSampAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEvEneSampEAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart
        }
        hist tileCellTimeDiffAllSampAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEAllPartbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cell/bit0_RNDM/EBA
        hist tileCellDetailOccMapOvThr_EBAbit0_RNDM {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBAbit0_RNDM {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBAbit0_RNDM {
        }
        hist tileCellEneDiffAllSampEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBAbit0_RNDM {
        }
        hist tileCellEvEneLumiEBAbit0_RNDM {
        }
        hist tileCellEvEneSampEEBAbit0_RNDM {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBAbit0_RNDM {
        }
        hist tileCellModuleCorrEBAbit0_RNDM {
        }
        hist tileCellOccOvThrBCIDEBAbit0_RNDM {
        }
        hist tileCellTimeEBAbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBAbit0_RNDM {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBAbit0_RNDM {
        }
        hist tileDigiPartTime_EBAbit0_RNDM {
        }
        hist tilenCellsEBAbit0_RNDM {
        }
        hist tilenCellsLBEBAbit0_RNDM {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cell/bit0_RNDM/EBC
        hist tileCellDetailOccMapOvThr_EBCbit0_RNDM {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBCbit0_RNDM {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBCbit0_RNDM {
        }
        hist tileCellEneDiffAllSampEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBCbit0_RNDM {
        }
        hist tileCellEvEneLumiEBCbit0_RNDM {
        }
        hist tileCellEvEneSampEEBCbit0_RNDM {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBCbit0_RNDM {
        }
        hist tileCellModuleCorrEBCbit0_RNDM {
        }
        hist tileCellOccOvThrBCIDEBCbit0_RNDM {
        }
        hist tileCellTimeEBCbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBCbit0_RNDM {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBCbit0_RNDM {
        }
        hist tileDigiPartTime_EBCbit0_RNDM {
        }
        hist tilenCellsEBCbit0_RNDM {
        }
        hist tilenCellsLBEBCbit0_RNDM {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cell/bit0_RNDM/LBA
        hist tileCellDetailOccMapOvThr_LBAbit0_RNDM {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBAbit0_RNDM {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBAbit0_RNDM {
        }
        hist tileCellEneDiffAllSampLBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBAbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBAbit0_RNDM {
        }
        hist tileCellEvEneLumiLBAbit0_RNDM {
        }
        hist tileCellEvEneTimLBAbit0_RNDM {
        }
        hist tileCellModuleCorrLBAbit0_RNDM {
        }
        hist tileCellOccOvThrBCIDLBAbit0_RNDM {
        }
        hist tileCellTimeLBAbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBAbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBAbit0_RNDM {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBAbit0_RNDM {
        }
        hist tileDigiPartTime_LBAbit0_RNDM {
        }
        hist tilenCellsLBAbit0_RNDM {
        }
        hist tilenCellsLBLBAbit0_RNDM {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cell/bit0_RNDM/LBC
        hist tileCellDetailOccMapOvThr_LBCbit0_RNDM {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCbit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBCbit0_RNDM {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBCbit0_RNDM {
        }
        hist tileCellEneDiffAllSampLBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBCbit0_RNDM {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBCbit0_RNDM {
        }
        hist tileCellEvEneLumiLBCbit0_RNDM {
        }
        hist tileCellEvEneTimLBCbit0_RNDM {
        }
        hist tileCellModuleCorrLBCbit0_RNDM {
        }
        hist tileCellOccOvThrBCIDLBCbit0_RNDM {
        }
        hist tileCellTimeLBCbit0_RNDM {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBCbit0_RNDM {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBCbit0_RNDM {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBCbit0_RNDM {
        }
        hist tileDigiPartTime_LBCbit0_RNDM {
        }
        hist tilenCellsLBCbit0_RNDM {
        }
        hist tilenCellsLBLBCbit0_RNDM {
        }
      }
    }
    dir bit2_L1CAL {
      output = TileCal/Expert/Cell/bit2_L1CAL
      hist tileCellTimBalModPartbit2_L1CAL {
      }
      hist tileCellSynchbit2_L1CAL {
        algorithm = TileSynch_CheckMeanX
      }
      hist tileCellEneEtaPhiAllSampbit2_L1CAL {
        algorithm = Cell_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileCellEtaPhiOvThrAllSampbit2_L1CAL {
        algorithm = Cell_Occ
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Expert/Cell/bit2_L1CAL/AllPart
        hist tileCellEneDiffAllSampAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEvEneSampEAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart
        }
        hist tileCellTimeDiffAllSampAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEAllPartbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cell/bit2_L1CAL/EBA
        hist tileCellDetailOccMapOvThr_EBAbit2_L1CAL {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBAbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBAbit2_L1CAL {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBAbit2_L1CAL {
        }
        hist tileCellEneDiffAllSampEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBAbit2_L1CAL {
        }
        hist tileCellEvEneLumiEBAbit2_L1CAL {
        }
        hist tileCellEvEneSampEEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBAbit2_L1CAL {
        }
        hist tileCellModuleCorrEBAbit2_L1CAL {
        }
        hist tileCellOccOvThrBCIDEBAbit2_L1CAL {
        }
        hist tileCellTimeEBAbit2_L1CAL {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBAbit2_L1CAL {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBAbit2_L1CAL {
        }
        hist tileDigiPartTime_EBAbit2_L1CAL {
        }
        hist tilenCellsEBAbit2_L1CAL {
        }
        hist tilenCellsLBEBAbit2_L1CAL {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cell/bit2_L1CAL/EBC
        hist tileCellDetailOccMapOvThr_EBCbit2_L1CAL {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBCbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBCbit2_L1CAL {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBCbit2_L1CAL {
        }
        hist tileCellEneDiffAllSampEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBCbit2_L1CAL {
        }
        hist tileCellEvEneLumiEBCbit2_L1CAL {
        }
        hist tileCellEvEneSampEEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBCbit2_L1CAL {
        }
        hist tileCellModuleCorrEBCbit2_L1CAL {
        }
        hist tileCellOccOvThrBCIDEBCbit2_L1CAL {
        }
        hist tileCellTimeEBCbit2_L1CAL {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBCbit2_L1CAL {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBCbit2_L1CAL {
        }
        hist tileDigiPartTime_EBCbit2_L1CAL {
        }
        hist tilenCellsEBCbit2_L1CAL {
        }
        hist tilenCellsLBEBCbit2_L1CAL {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cell/bit2_L1CAL/LBA
        hist tileCellDetailOccMapOvThr_LBAbit2_L1CAL {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBAbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBAbit2_L1CAL {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBAbit2_L1CAL {
        }
        hist tileCellEneDiffAllSampLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBAbit2_L1CAL {
        }
        hist tileCellEvEneLumiLBAbit2_L1CAL {
        }
        hist tileCellEvEneTimLBAbit2_L1CAL {
        }
        hist tileCellModuleCorrLBAbit2_L1CAL {
        }
        hist tileCellOccOvThrBCIDLBAbit2_L1CAL {
        }
        hist tileCellTimeLBAbit2_L1CAL {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBAbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBAbit2_L1CAL {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBAbit2_L1CAL {
        }
        hist tileDigiPartTime_LBAbit2_L1CAL {
        }
        hist tilenCellsLBAbit2_L1CAL {
        }
        hist tilenCellsLBLBAbit2_L1CAL {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cell/bit2_L1CAL/LBC
        hist tileCellDetailOccMapOvThr_LBCbit2_L1CAL {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBCbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCbit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBCbit2_L1CAL {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBCbit2_L1CAL {
        }
        hist tileCellEneDiffAllSampLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBCbit2_L1CAL {
        }
        hist tileCellEvEneLumiLBCbit2_L1CAL {
        }
        hist tileCellEvEneTimLBCbit2_L1CAL {
        }
        hist tileCellModuleCorrLBCbit2_L1CAL {
        }
        hist tileCellOccOvThrBCIDLBCbit2_L1CAL {
        }
        hist tileCellTimeLBCbit2_L1CAL {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBCbit2_L1CAL {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBCbit2_L1CAL {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBCbit2_L1CAL {
        }
        hist tileDigiPartTime_LBCbit2_L1CAL {
        }
        hist tilenCellsLBCbit2_L1CAL {
        }
        hist tilenCellsLBLBCbit2_L1CAL {
        }
      }
    }
    dir bit3_Muon {
      output = TileCal/Expert/Cell/bit3_Muon
      hist tileCellTimBalModPartbit3_Muon {
      }
      hist tileCellSynchbit3_Muon {
        algorithm = TileSynch_CheckMeanX
      }
      hist tileCellEneEtaPhiAllSampbit3_Muon {
        algorithm = Cell_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileCellEtaPhiOvThrAllSampbit3_Muon {
        algorithm = Cell_Occ
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Expert/Cell/bit3_Muon/AllPart
        hist tileCellEneDiffAllSampAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEvEneSampEAllPartbit3_Muon {
          algorithm = TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart
        }
        hist tileCellTimeDiffAllSampAllPartbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAAllPartbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBAllPartbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDAllPartbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEAllPartbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cell/bit3_Muon/EBA
        hist tileCellDetailOccMapOvThr_EBAbit3_Muon {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBAbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBAbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBAbit3_Muon {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBAbit3_Muon {
        }
        hist tileCellEneDiffAllSampEBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBAbit3_Muon {
        }
        hist tileCellEvEneLumiEBAbit3_Muon {
        }
        hist tileCellEvEneSampEEBAbit3_Muon {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBAbit3_Muon {
        }
        hist tileCellModuleCorrEBAbit3_Muon {
        }
        hist tileCellOccOvThrBCIDEBAbit3_Muon {
        }
        hist tileCellTimeEBAbit3_Muon {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBAbit3_Muon {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBAbit3_Muon {
        }
        hist tileDigiPartTime_EBAbit3_Muon {
        }
        hist tilenCellsEBAbit3_Muon {
        }
        hist tilenCellsLBEBAbit3_Muon {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cell/bit3_Muon/EBC
        hist tileCellDetailOccMapOvThr_EBCbit3_Muon {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_EBCbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_EBCbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_EBCbit3_Muon {
          algorithm = Cell_E_EB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDEBCbit3_Muon {
        }
        hist tileCellEneDiffAllSampEBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampAEBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBEBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDEBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampEEBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
        }
        hist tileCellEnergyEBCbit3_Muon {
        }
        hist tileCellEvEneLumiEBCbit3_Muon {
        }
        hist tileCellEvEneSampEEBCbit3_Muon {
          algorithm = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
        }
        hist tileCellEvEneTimEBCbit3_Muon {
        }
        hist tileCellModuleCorrEBCbit3_Muon {
        }
        hist tileCellOccOvThrBCIDEBCbit3_Muon {
        }
        hist tileCellTimeEBCbit3_Muon {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampEBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampAEBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBEBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDEBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampEEBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
        }
        hist tileChanModTime_EBCbit3_Muon {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_EBCbit3_Muon {
        }
        hist tileDigiPartTime_EBCbit3_Muon {
        }
        hist tilenCellsEBCbit3_Muon {
        }
        hist tilenCellsLBEBCbit3_Muon {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cell/bit3_Muon/LBA
        hist tileCellDetailOccMapOvThr_LBAbit3_Muon {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBAbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBAbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBAbit3_Muon {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBAbit3_Muon {
        }
        hist tileCellEneDiffAllSampLBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBAbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBAbit3_Muon {
        }
        hist tileCellEvEneLumiLBAbit3_Muon {
        }
        hist tileCellEvEneTimLBAbit3_Muon {
        }
        hist tileCellModuleCorrLBAbit3_Muon {
        }
        hist tileCellOccOvThrBCIDLBAbit3_Muon {
        }
        hist tileCellTimeLBAbit3_Muon {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBAbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBAbit3_Muon {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBAbit3_Muon {
        }
        hist tileDigiPartTime_LBAbit3_Muon {
        }
        hist tilenCellsLBAbit3_Muon {
        }
        hist tilenCellsLBLBAbit3_Muon {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cell/bit3_Muon/LBC
        hist tileCellDetailOccMapOvThr_LBCbit3_Muon {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapHiGainOvThr_LBCbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMapLowGainOvThr_LBCbit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellDetailOccMap_LBCbit3_Muon {
          algorithm = Cell_Occ_LB
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist tileCellEneBCIDLBCbit3_Muon {
        }
        hist tileCellEneDiffAllSampLBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
        }
        hist tileCellEneDiffSampALBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampBLBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEneDiffSampDLBCbit3_Muon {
          algorithm = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
        }
        hist tileCellEnergyLBCbit3_Muon {
        }
        hist tileCellEvEneLumiLBCbit3_Muon {
        }
        hist tileCellEvEneTimLBCbit3_Muon {
        }
        hist tileCellModuleCorrLBCbit3_Muon {
        }
        hist tileCellOccOvThrBCIDLBCbit3_Muon {
        }
        hist tileCellTimeLBCbit3_Muon {
          algorithm = TileCheckMeanCellTime
        }
        hist tileCellTimeDiffAllSampLBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
        }
        hist tileCellTimeDiffSampALBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampBLBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileCellTimeDiffSampDLBCbit3_Muon {
          algorithm = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
        }
        hist tileChanModTime_LBCbit3_Muon {
          algorithm = TileCheckChanModTimeGreaterThanAbsValue
        }
        hist tileChanPartTime_LBCbit3_Muon {
        }
        hist tileDigiPartTime_LBCbit3_Muon {
        }
        hist tilenCellsLBCbit3_Muon {
        }
        hist tilenCellsLBLBCbit3_Muon {
        }
      }
    }
  }
  dir Cluster {
    dir AnyPhysTrig {
      output = TileCal/Cluster/AnyPhysTrig
      hist tileClusterEtaPhiAnyPhysTrig {
        output = TileCal/Cluster/AnyPhysTrig
        algorithm = Cluster_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhiDiffAnyPhysTrig {
        output = TileCal/Cluster/AnyPhysTrig
        algorithm = Cluster_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaAnyPhysTrig {
        output = TileCal/Cluster/AnyPhysTrig
        algorithm = TileCluster_Eta
      }
      hist tileClusterPhiAnyPhysTrig {
        output = TileCal/Cluster/AnyPhysTrig
        algorithm = TileCluster_Phi
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Cluster/AnyPhysTrig/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Cluster/AnyPhysTrig/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Cluster/AnyPhysTrig/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Cluster/AnyPhysTrig/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Cluster/AnyPhysTrig/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Expert/Cluster/bit0_RNDM
      hist tileClusterAllEtaPhibit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = Cluster_AllEP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtaPhibit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = Cluster_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhibit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = Cluster_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhiDiffbit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = Cluster_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtabit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterEtabit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterPhibit0_RNDM {
        output = TileCal/Expert/Cluster/bit0_RNDM
        algorithm = TileCluster_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Cluster/bit0_RNDM
      }
      dir AllPart {
        output = TileCal/Expert/Cluster/bit0_RNDM/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cluster/bit0_RNDM/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cluster/bit0_RNDM/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cluster/bit0_RNDM/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cluster/bit0_RNDM/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit2_L1CAL {
      output = TileCal/Expert/Cluster/bit2_L1CAL
      hist tileClusterAllEtaPhibit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = Cluster_AllEP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtaPhibit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = Cluster_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhibit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = Cluster_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhiDiffbit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = Cluster_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtabit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterEtabit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterPhibit2_L1CAL {
        output = TileCal/Expert/Cluster/bit2_L1CAL
        algorithm = TileCluster_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Cluster/bit2_L1CAL
      }
      dir AllPart {
        output = TileCal/Expert/Cluster/bit2_L1CAL/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cluster/bit2_L1CAL/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cluster/bit2_L1CAL/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cluster/bit2_L1CAL/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cluster/bit2_L1CAL/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit3_Muon {
      output = TileCal/Expert/Cluster/bit3_Muon
      hist tileClusterAllEtaPhibit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = Cluster_AllEP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtaPhibit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = Cluster_E
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhibit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = Cluster_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEtaPhiDiffbit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = TileCluster_CheckMeanX
        display = SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileClusterEneEtabit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterEtabit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = TileCluster_CheckMeanX
      }
      hist tileClusterPhibit3_Muon {
        output = TileCal/Expert/Cluster/bit3_Muon
        algorithm = TileCluster_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Cluster/bit3_Muon
      }
      dir AllPart {
        output = TileCal/Expert/Cluster/bit3_Muon/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Cluster/bit3_Muon/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Cluster/bit3_Muon/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Cluster/bit3_Muon/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Cluster/bit3_Muon/LBC
        hist all_in_dir {
        }
      }
    }
  }
  dir Muid {
    dir AnyPhysTrig {
      output = TileCal/Muid/AnyPhysTrig
      hist tileMuid1TagEtaPhiAnyPhysTrig {
        output = TileCal/Muid/AnyPhysTrig
        algorithm = Muid_1TagEP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileMuid2TagEtaPhiAnyPhysTrig {
        output = TileCal/Muid/AnyPhysTrig
        algorithm = Muid_2TagEP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileMuidEtaPhiAnyPhysTrig {
        output = TileCal/Muid/AnyPhysTrig
        algorithm = Muid_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist all_in_dir {
        output = TileCal/Muid/AnyPhysTrig
      }
    }
  }
  dir L2Muon {
    dir AnyPhysTrig {
      output = TileCal/L2Muon/AnyPhysTrig
      hist tileL2DeltaEnergyAnyPhysTrig {
        algorithm = TileCheckMeanL2DeltaEnergy
        display = LogY
      }
      hist tileL2EnergyMapAnyPhysTrig {
        algorithm = TileCheckMeanL2Energy
        display = SetGridx,SetGridy,SetGridStyle(2)
      }
      hist tileL2EtaPhiAnyPhysTrig {
        algorithm = L2Muon_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist all_in_dir {
        output = TileCal/L2Muon/AnyPhysTrig
      }
    }
  }
  dir Tower {
    dir AnyPhysTrig {
      output = TileCal/Tower/AnyPhysTrig
      hist TowerEtaPhiAnyPhysTrig {
        output = TileCal/Tower/AnyPhysTrig
        algorithm = Tower_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtaPhiDiffAnyPhysTrig {
        output = TileCal/Tower/AnyPhysTrig
        algorithm = Tower_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtaAnyPhysTrig {
        output = TileCal/Tower/AnyPhysTrig
        algorithm = TileTower_CheckMeanX
      }
      hist TowerPhiAnyPhysTrig {
        output = TileCal/Tower/AnyPhysTrig
        algorithm = TileTower_CheckMeanX
      }
      hist all_in_dir {
      }
      dir AllPart {
        output = TileCal/Tower/AnyPhysTrig/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Tower/AnyPhysTrig/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Tower/AnyPhysTrig/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Tower/AnyPhysTrig/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Tower/AnyPhysTrig/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Expert/Tower/bit0_RNDM
      hist TowerEtaPhibit0_RNDM {
        output = TileCal/Expert/Tower/bit0_RNDM
        algorithm = Tower_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtaPhiDiffbit0_RNDM {
        output = TileCal/Expert/Tower/bit0_RNDM
        algorithm = Tower_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtabit0_RNDM {
        output = TileCal/Expert/Tower/bit0_RNDM
        algorithm = TileTower_CheckMeanX
      }
      hist TowerPhibit0_RNDM {
        output = TileCal/Expert/Tower/bit0_RNDM
        algorithm = TileTower_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Tower/bit0_RNDM
      }
      dir AllPart {
        output = TileCal/Expert/Tower/bit0_RNDM/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Tower/bit0_RNDM/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Tower/bit0_RNDM/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Tower/bit0_RNDM/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Tower/bit0_RNDM/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit2_L1CAL {
      output = TileCal/Expert/Tower/bit2_L1CAL
      hist TowerEtaPhibit2_L1CAL {
        output = TileCal/Expert/Tower/bit2_L1CAL
        algorithm = Tower_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtaPhiDiffbit2_L1CAL {
        output = TileCal/Expert/Tower/bit2_L1CAL
        algorithm = Tower_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtabit2_L1CAL {
        output = TileCal/Expert/Tower/bit2_L1CAL
        algorithm = TileTower_CheckMeanX
      }
      hist TowerPhibit2_L1CAL {
        output = TileCal/Expert/Tower/bit2_L1CAL
        algorithm = TileTower_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Tower/bit2_L1CAL
      }
      dir AllPart {
        output = TileCal/Expert/Tower/bit2_L1CAL/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Tower/bit2_L1CAL/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Tower/bit2_L1CAL/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Tower/bit2_L1CAL/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Tower/bit2_L1CAL/LBC
        hist all_in_dir {
        }
      }
    }
    dir bit3_Muon {
      output = TileCal/Expert/Tower/bit3_Muon
      hist TowerEtaPhibit3_Muon {
        output = TileCal/Expert/Tower/bit3_Muon
        algorithm = Tower_EP
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtaPhiDiffbit3_Muon {
        output = TileCal/Expert/Tower/bit3_Muon
        algorithm = Tower_EPDiff
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist TowerEtabit3_Muon {
        output = TileCal/Expert/Tower/bit3_Muon
        algorithm = TileTower_CheckMeanX
      }
      hist TowerPhibit3_Muon {
        output = TileCal/Expert/Tower/bit3_Muon
        algorithm = TileTower_CheckMeanX
      }
      hist all_in_dir {
        output = TileCal/Expert/Tower/bit3_Muon
      }
      dir AllPart {
        output = TileCal/Expert/Tower/bit3_Muon/AllPart
        hist all_in_dir {
        }
      }
      dir EBA {
        output = TileCal/Expert/Tower/bit3_Muon/EBA
        hist all_in_dir {
        }
      }
      dir EBC {
        output = TileCal/Expert/Tower/bit3_Muon/EBC
        hist all_in_dir {
        }
      }
      dir LBA {
        output = TileCal/Expert/Tower/bit3_Muon/LBA
        hist all_in_dir {
        }
      }
      dir LBC {
        output = TileCal/Expert/Tower/bit3_Muon/LBC
        hist all_in_dir {
        }
      }
    }
  }
  dir ROD {
    dir AnyPhysTrig {
      output = TileCal/Expert/ROD/AnyPhysTrig
      hist tileRodFragmentSize_AnyPhysTrig {
      }
      hist tileRodFragmentSizeLB_AnyPhysTrig {
      }
      dir Summary {
        output = TileCal/Expert/ROD/AnyPhysTrig/Summary
        hist TileAvgDspRefEn_LBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_AnyPhysTrig {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_AnyPhysTrig {
          #algorithm = TileROD_compare_DspRefEnMeanY        # zakomment pod voprosom
        }
        hist TileDspRefTim_Summary_AnyPhysTrig {
          #algorithm = TileROD_compare_DspRefTimMeanY        # zakomment pod voprosom
        }
        hist Tdsp_Profile_LBA_AnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_LBC_AnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBA_AnyPhysTrig {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBC_AnyPhysTrig {
          #display = SetGridx,SetGridy,SetGridStyle(2)
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist TileDspRefEnSummary_LBA_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefEnSummary_LBC_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefEnSummary_EBA_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefEnSummary_EBC_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefTimSummary_LBA_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefTimSummary_LBC_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefTimSummary_EBA_AnyPhysTrig {
          display = LogY
        }
        hist TileDspRefTimSummary_EBC_AnyPhysTrig {
          display = LogY
        }
        hist all_in_dir {
        }
      }
    }
    dir bit0_RNDM {
      output = TileCal/Expert/ROD/bit0_RNDM
      hist tileRodFragmentSize_bit0_RNDM {
      }
      hist tileRodFragmentSizeLB_bit0_RNDM {
      }
      dir Summary {
        output = TileCal/Expert/ROD/bit0_RNDM/Summary
        hist TileAvgDspRefEn_LBA_bit0_RNDM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_bit0_RNDM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_bit0_RNDM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_bit0_RNDM {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_bit0_RNDM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_bit0_RNDM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_bit0_RNDM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_bit0_RNDM {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_bit0_RNDM {
          #algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_bit0_RNDM {
          #algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist Tdsp_Profile_LBA_bit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_LBC_bit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBA_bit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBC_bit0_RNDM {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist TileDspRefEnSummary_LBA_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefEnSummary_LBC_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefEnSummary_EBA_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefEnSummary_EBC_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefTimSummary_LBA_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefTimSummary_LBC_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefTimSummary_EBA_bit0_RNDM {
          display = LogY
        }
        hist TileDspRefTimSummary_EBC_bit0_RNDM {
          display = LogY
        }

        hist all_in_dir {
        }
      }
    }
    dir bit2_L1CAL {
      output = TileCal/Expert/ROD/bit2_L1CAL
      hist tileRodFragmentSize_bit2_L1CAL {
      }
      hist tileRodFragmentSizeLB_bit2_L1CAL {
      }
      dir Summary {
        output = TileCal/Expert/ROD/bit2_L1CAL/Summary
        hist TileAvgDspRefEn_LBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_bit2_L1CAL {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_bit2_L1CAL {
          #algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_bit2_L1CAL {
          #algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist Tdsp_Profile_LBA_bit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_LBC_bit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBA_bit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBC_bit2_L1CAL {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist TileDspRefEnSummary_LBA_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefEnSummary_LBC_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefEnSummary_EBA_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefEnSummary_EBC_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefTimSummary_LBA_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefTimSummary_LBC_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefTimSummary_EBA_bit2_L1CAL {
          display = LogY
        }
        hist TileDspRefTimSummary_EBC_bit2_L1CAL {
          display = LogY
        }

        hist all_in_dir {
        }
      }
    }
    dir bit3_Muon {
      output = TileCal/Expert/ROD/bit3_Muon
      hist tileRodFragmentSize_bit3_Muon {
      }
      hist tileRodFragmentSizeLB_bit3_Muon {
      }
      dir Summary {
        output = TileCal/Expert/ROD/bit3_Muon/Summary
        hist TileAvgDspRefEn_LBA_bit3_Muon {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_LBC_bit3_Muon {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBA_bit3_Muon {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefEn_EBC_bit3_Muon {
          algorithm = TileROD_check_DspRefEnMeanY
        }
        hist TileAvgDspRefTim_LBA_bit3_Muon {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_LBC_bit3_Muon {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBA_bit3_Muon {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileAvgDspRefTim_EBC_bit3_Muon {
          algorithm = TileROD_check_DspRefTimMeanY
        }
        hist TileDspRefEn_Summary_bit3_Muon {
          #algorithm = TileROD_compare_DspRefEnMeanY
        }
        hist TileDspRefTim_Summary_bit3_Muon {
          #algorithm = TileROD_compare_DspRefTimMeanY
        }
        hist Tdsp_Profile_LBA_bit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_LBC_bit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBA_bit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist Tdsp_Profile_EBC_bit3_Muon {
          display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
        }
        hist TileDspRefEnSummary_LBA_bit3_Muon {
          display = LogY
        }
        hist TileDspRefEnSummary_LBC_bit3_Muon {
          display = LogY
        }
        hist TileDspRefEnSummary_EBA_bit3_Muon {
          display = LogY
        }
        hist TileDspRefEnSummary_EBC_bit3_Muon {
          display = LogY
        }
        hist TileDspRefTimSummary_LBA_bit3_Muon {
          display = LogY
        }
        hist TileDspRefTimSummary_LBC_bit3_Muon {
          display = LogY
        }
        hist TileDspRefTimSummary_EBA_bit3_Muon {
          display = LogY
        }
        hist TileDspRefTimSummary_EBC_bit3_Muon {
          display = LogY
        }

        hist all_in_dir {
        }
      }
    }
  }
  dir DMUErrors {
    algorithm = Tile_GatherData/ref
    hist TileGlobalCRC_errors_bottom {
      algorithm = Tile_GatherData/ref
      output = TileCal/Data_Corruption
    }
    hist TileGlobalCRC_errors_top {
      algorithm = Tile_GatherData/ref
      output = TileCal/Data_Corruption
    }
    hist TileDigiErrorsLBA\d{2} {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/LB
      output = TileCal/Data_Corruption/LBA
      display = TCanvas(850,490),Draw=TEXTCOLZ
    }
    hist TileDigiErrorsLBC\d{2} {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/LB
      output = TileCal/Data_Corruption/LBC
      display = TCanvas(850,490),Draw=TEXTCOLZ
    }

    hist (?!.*15|.*39|.*4[012]|.*5[5678])TileDigiErrorsEBA\d{2} {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB
      output = TileCal/Data_Corruption/EBA
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist TileDigiErrorsEBA(?:39|4[012]|5[5678]) {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB_innerMBTS
      output = TileCal/Data_Corruption/EBA
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist TileDigiErrorsEBA15 {
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB_special
      output = TileCal/Data_Corruption/EBA
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(0,0,1,1),TDota(0,1,1,2),TDota(0,2,1,3),TDota(0,3,1,4),TDota(0,4,1,5),TDota(0,5,1,6),TDota(0,6,1,7),TDota(0,7,1,8),TDota(0,8,1,9),TDota(0,9,1,10),TDota(0,10,1,11),TDota(0,11,1,12),TDota(0,12,1,13),TDota(0,13,1,14),TDota(0,14,1,15),TDota(0,15,1,16),TDota(0,16,1,17),TDota(0,17,1,18),TDota(0,18,1,19),TDota(0,19,1,20),TDota(0,20,1,21),TDota(0,21,1,22),TDota(0,22,1,23),TDota(0,23,1,24),TDota(0,24,1,25),TDota(0,25,1,26),TDota(0,26,1,27),TDota(0,27,1,28),TDota(0,28,1,29),TDota(0,29,1,30),TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist (?!.*18|.*39|.*4[012]|.*5[5678])TileDigiErrorsEBC\d{2} {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB_innerMBTS
      output = TileCal/Data_Corruption/EBC
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist TileDigiErrorsEBC(?:39|4[012]|5[5678]) {
      regex = 1
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB_innerMBTS
      output = TileCal/Data_Corruption/EBC
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist TileDigiErrorsEBC18 {
      algorithm = Tile_TileDigiErrors_CheckNonZeroBins/EB_special
      output = TileCal/Data_Corruption/EBC
      display = TCanvas(850,490),Draw=TEXTCOLZ,TDota(0,0,1,1),TDota(0,1,1,2),TDota(0,2,1,3),TDota(0,3,1,4),TDota(0,4,1,5),TDota(0,5,1,6),TDota(0,6,1,7),TDota(0,7,1,8),TDota(0,8,1,9),TDota(0,9,1,10),TDota(0,10,1,11),TDota(0,11,1,12),TDota(0,12,1,13),TDota(0,13,1,14),TDota(0,14,1,15),TDota(0,15,1,16),TDota(0,16,1,17),TDota(0,17,1,18),TDota(0,18,1,19),TDota(0,19,1,20),TDota(0,20,1,21),TDota(0,21,1,22),TDota(0,22,1,23),TDota(0,23,1,24),TDota(0,24,1,25),TDota(0,25,1,26),TDota(0,26,1,27),TDota(0,27,1,28),TDota(0,28,1,29),TDota(0,29,1,30),TDota(8,0,10,1),TDota(8,1,10,2),TDota(8,2,10,3),TDota(8,3,10,4),TDota(8,4,10,5),TDota(8,5,10,6),TDota(8,6,10,7),TDota(8,7,10,8),TDota(8,8,10,9),TDota(8,9,10,10),TDota(8,10,10,11),TDota(8,11,10,12),TDota(8,12,10,13),TDota(8,13,10,14),TDota(8,14,10,15),TDota(8,15,10,16),TDota(8,16,10,17),TDota(8,17,10,18),TDota(8,18,10,19),TDota(8,19,10,20),TDota(8,20,10,21),TDota(8,21,10,22),TDota(8,22,10,23),TDota(8,23,10,24),TDota(8,24,10,25),TDota(8,25,10,26),TDota(8,26,10,27),TDota(8,27,10,28),TDota(8,28,10,29),TDota(8,29,10,30),TDota(14,0,16,1),TDota(14,1,16,2),TDota(14,2,16,3),TDota(14,3,16,4),TDota(14,4,16,5),TDota(14,5,16,6),TDota(14,6,16,7),TDota(14,7,16,8),TDota(14,8,16,9),TDota(14,9,16,10),TDota(14,10,16,11),TDota(14,11,16,12),TDota(14,12,16,13),TDota(14,13,16,14),TDota(14,14,16,15),TDota(14,15,16,16),TDota(14,16,16,17),TDota(14,17,16,18),TDota(14,18,16,19),TDota(14,19,16,20),TDota(14,20,16,21),TDota(14,21,16,22),TDota(14,22,16,23),TDota(14,23,16,24),TDota(14,24,16,25),TDota(14,25,16,26),TDota(14,26,16,27),TDota(14,27,16,28),TDota(14,28,16,29),TDota(14,29,16,30)
    }

    hist FracTileDigiErrorsLBA\d{2} {
      regex = 1
      #algorithm = Tile_GatherData
      algorithm = Tile_FracTileDigiErrors_PrintNonZeroBins
      output = TileCal/Data_Corruption/Per_lumiblock/LBA
    }
    hist FracTileDigiErrorsLBC\d{2} {
      regex = 1
      #algorithm = Tile_GatherData
      algorithm = Tile_FracTileDigiErrors_PrintNonZeroBins
      output = TileCal/Data_Corruption/Per_lumiblock/LBC
    }
    hist FracTileDigiErrorsEBA\d{2} {
      regex = 1
      #algorithm = Tile_GatherData
      algorithm = Tile_FracTileDigiErrors_PrintNonZeroBins
      output = TileCal/Data_Corruption/Per_lumiblock/EBA
    }
    hist FracTileDigiErrorsEBC\d{2} {
      regex = 1
      #algorithm = Tile_GatherData
      algorithm = Tile_FracTileDigiErrors_PrintNonZeroBins
      output = TileCal/Data_Corruption/Per_lumiblock/EBC
    }

    dir BadDrawers {
      output = TileCal/Data_Corruption
      hist TileBadChannelsNegMapNonMaskEBA {
      }
      hist TileBadChannelsNegMapNonMaskEBC {
      }
      hist TileBadChannelsNegMapNonMaskLBA {
      }
      hist TileBadChannelsNegMapNonMaskLBC {
      }
      hist TileBadChannelsJumpMapNonMaskEBA {
      }
      hist TileBadChannelsJumpMapNonMaskEBC {
      }
      hist TileBadChannelsJumpMapNonMaskLBA {
      }
      hist TileBadChannelsJumpMapNonMaskLBC {
      }
      hist TileConsecutiveBad {
      }
      hist TileConsecutiveBadLB {
      }
      hist TileEventsWithErrEventinfo {
      }
    }

  } # end DMUErrors

  dir MBTS {
    dir Cell {
      hist TimeDiff_A-C {
        output = TileCal/Collisions
      }
      hist TimeDiff_A-C_LB {
        output = TileCal/Collisions
      }
      hist SummaryTime {
        output = TileCal/MBTS/Cell
        algorithm = TileCheckSummaryTimeGraterThanAbsValue
      }
    } # end Cell
  } # end MBTS

  dir DigiNoise {
    output = TileCal/Noise/Digit
    hist noisemap_.*_hi_.* {
      regex = 1
    }
  }

  dir Jet {
    dir DQ {
      output = TileCal/Jet
      hist EBA {
      }
      hist EBC {
      }
      hist LBA {
      }
      hist LBC {
      }
      hist tileJetChanTimeEBA {
      }
      hist tileJetChanTimeEBC {
      }
      hist tileJetChanTimeLBA {
      }
      hist tileJetChanTimeLBC {
      }
    }
  }

} # end Tile

# TileCal cells from CaloMonitoring package
dir CaloMonitoring {
  algorithm = Tile_GatherData/ref
  dir TileCellMon_NoTrigSel {
    dir General {
      hist CellsXN {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXE {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsNoiseTile {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox,gaus(-6.,6.),LogY
      }
      hist CellsXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXEtaVSPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist CellsXModuleS1 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXModuleS2 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXModuleS3 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXModuleS4 {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXTower {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsNoiseXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsNoiseXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsRMSXEta {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsRMSXPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsNoiseXEtaVSPhi {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist CellsNoiseXEtaVSPhiAcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        algorithm = CellsNoise_EP_A
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist CellsNoiseXEtaVSPhiBCcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        algorithm = CellsNoise_EP_B
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist CellsNoiseXEtaVSPhiDcells {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        algorithm = CellsNoise_EP_D
        display = TCanvas(1100,980),SetGridx,SetGridy,SetGridStyle(2)
      }
      hist CellsRMSXEta_divNoiseDB {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsRMSXPhi_divNoiseDB {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = StatBox
      }
      hist CellsXNoiseXHash {
        output = TileCal/Cell/AnyPhysTrig/CaloMon
        display = LogY
      }
    } # end General
  } # end TileCellMon_NoTrigSel
} # end CaloMonitoring package


#############
# Algorithms
#############

algorithm Tile_GatherData {
  libname = libdqm_algorithms.so
  name = GatherData
  algorithm ref {
    reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  }
}

algorithm TileSynch_CheckMeanX {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileSynch_thMeanX
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCluster_CheckMeanX {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCluster_thMeanX
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileTower_CheckMeanX {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileTower_thMeanX
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckChanModTimeGreaterThanAbsValue {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanAbs_Threshold
  BinThreshold = 5
  PublishBins = 1
  MinStat = 5000
  thresholds = TileCheckChanModTimeGreaterThanAbsValueThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckSummaryTimeGraterThanAbsValue {
  libname = libdqm_algorithms.so
  name = Bins_GreaterThanAbs_Threshold
  BinThreshold = 5
  PublishBins = 1
  MinStat = 5000
  thresholds = TileCheckSummaryTimeGraterThanAbsValueThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMeanCellTime {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanCellTimeThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}


compositeAlgorithm TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp {
  name = TileCheckMean_CellEneDiff_AllSamp&TileCheckRMS_CellEneDiff_AllSamp
  CheckHisto_Mean|thresholds = TileCheckMeanCellEneDiffAllSampThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellEneDiffAllSampThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}


compositeAlgorithm TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD {
  name = TileCheckMean_CellEneDiff_SampABD&TileCheckRMS_CellEneDiff_SampABD
  CheckHisto_Mean|thresholds = TileCheckMeanCellEneDiffSampABDThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellEneDiffSampABDThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}


compositeAlgorithm TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE {
  name = TileCheckMean_CellEneDiff_SampE&TileCheckRMS_CellEneDiff_SampE
  CheckHisto_Mean|thresholds = TileCheckMeanCellEneDiffSampEThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellEneDiffSampEThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}




compositeAlgorithm TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp {
  name = TileCheckMean_CellTimeDiff_AllSamp&TileCheckRMS_CellTimeDiff_AllSamp
  CheckHisto_Mean|thresholds = TileCheckMeanCellTimeDiffAllSampThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellTimeDiffAllSampThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}


compositeAlgorithm TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD {
  name = TileCheckMean_CellTimeDiff_SampABD&TileCheckRMS_CellTimeDiff_SampABD
  CheckHisto_Mean|thresholds = TileCheckMeanCellTimeDiffSampABDThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellTimeDiffSampABDThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}


compositeAlgorithm TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE {
  name = TileCheckMean_CellTimeDiff_SampE&TileCheckRMS_CellTimeDiff_SampE
  CheckHisto_Mean|thresholds = TileCheckMeanCellTimeDiffSampEThr
  CheckHisto_RMS|thresholds = TileCheckRMSCellTimeDiffSampEThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}


compositeAlgorithm TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart {
  name = TileCheckMean_CellEvEne_SampE_AllPart&TileCheckRMS_CellEvEne_SampE_AllPart
  CheckHisto_Mean|thresholds = TileCheckMeanCellEvEneSampEThr_AllPart
  CheckHisto_RMS|thresholds = TileCheckRMSCellEvEneSampEThr_AllPart
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}

compositeAlgorithm TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB {
  libnames = libdqm_algorithms.so
  subalgs = CheckHisto_Mean,CheckHisto_RMS
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB {
  name = TileCheckMean_CellEvEne_SampE_EB&TileCheckRMS_CellEvEne_SampE_EB
  CheckHisto_Mean|thresholds = TileCheckMeanCellEvEneSampEThr_EB
  CheckHisto_RMS|thresholds = TileCheckRMSCellEvEneSampEThr_EB
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  #MinStat = 500
}

algorithm TileCheckMeanL2DeltaEnergy {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanL2DeltaEnergyThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileCheckMeanL2Energy {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileCheckMeanL2EnergyThr
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileROD_check_DspRefEnMeanY {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileROD_DspRefEnMeanY
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}

algorithm TileROD_check_DspRefTimMeanY {
  libname = libdqm_algorithms.so
  name = CheckHisto_Mean
  thresholds = TileROD_DspRefTimMeanY
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
}


algorithm TileCluster_Eta {
  libname = libdqm_algorithms.so
  name = AlgChiComp_Basic
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  thresholds = TileCluster_EtaThr
}
algorithm TileCluster_Phi {
  libname = libdqm_algorithms.so
  name = AlgChiComp_Basic
  reference = stream=physics_Main:CentrallyManagedReferences_Main;CentrallyManagedReferences
  thresholds = TileCluster_PhiThr
}

# test
algorithm Cell_E_EB {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  useStripsOfConstantY = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 1
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 511
  ignoreval = 0
  IterDeviationTresh = 1
  #GreaterThan = 1
  #FindOutliersUsingErrors = 1
  #UseMeanErrorForScale = 1
  #SigmaThresh = 0
  #AbsDiffGreenThresh = 1
  #MinAbsDiffFromAvg = 5
  #nIterations = 1
  thresholds = Cell_E_EB_tresh
}

algorithm Cell_Occ_LB {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  useStripsOfConstantY = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cell_Occ_LB_tresh
}

algorithm Cell_E {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 1
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  #xmin = -1.65
  #xmax = 1.65
  thresholds = Cell_E_tresh
}

algorithm Cell_Occ {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cell_Occ_tresh
}

algorithm Cluster_EP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cluster_EP_tresh
}

algorithm Cluster_EPDiff {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cluster_EPDiff_tresh
}

algorithm Cluster_AllEP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10n
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cluster_AllEP_tresh
}

algorithm Cluster_E {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Cluster_E_tresh
}

algorithm Muid_1TagEP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Muid_1TagEP_tresh
}

algorithm Muid_2TagEP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Muid_2TagEP_tresh
}

algorithm Muid_EP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Muid_EP_tresh
}

algorithm L2Muon_EP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = L2Muon_EP_tresh
}

algorithm Tower_EP {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Tower_EP_tresh
}

algorithm Tower_EPDiff {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = Tower_EPDiff_tresh
}

algorithm CellsNoise_EP_A {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = CellsNoise_EP_A_tresh
}

algorithm CellsNoise_EP_B {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = CellsNoise_EP_B_tresh
}

algorithm CellsNoise_EP_D {
  libname = libdqm_algorithms.so
  name = BinsDiffByStrips
  PublishBins = 1
  MinBinsAfterSkimming = 30
  ClusterResults = 0
  CombineStripsBeforeSkimming = 0
  NBinsRedToRedStatus = 10
  NBinsYellowToYellowStatus = 5
  MinStat = 500
  ignoreval = 0
  thresholds = CellsNoise_EP_D_tresh
}


algorithm Tile_TileDigiErrors_CheckNonZeroBins {
  libname = libdqm_algorithms.so
  name = MaskedBinRow
  OkBin = 1
  MaskedBin = 15
  TestRows = 0
  thresholds = DMU_thr
  DoRate = 1
  UseReference = 1
  UseTotalEntries = 1
  algorithm LB {
    reference = TileDigiErrorsLB
  }
  algorithm EB {
    reference = TileDigiErrorsEB
  }
  algorithm EB_special {
    reference = TileDigiErrorsEB_special
  }
  algorithm EB_innerMBTS {
    reference = TileDigiErrorsEB_innerMBTS
  }
}

algorithm Tile_FracTileDigiErrors_PrintNonZeroBins {
  libname = libdqm_algorithms.so
  name = BinPrint
  UseValue = 2
  Value = 0
  UseMaskValue = -2
  MaskValue = 0
}


#############
# Thresholds
#############

thresholds TileSynch_thMeanX {
  limits XMean {
    warning = -40.
    error = -80.
  }
}

thresholds TileCluster_thMeanX {
  limits AbsXMean {
    warning = 0.1
    error = 0.2
  }
}

thresholds TileTower_thMeanX {
  limits AbsXMean {
    warning = 0.1
    error = 0.2
  }
}

thresholds TileCheckChanModTimeGreaterThanAbsValueThr {
  limits NBins {
    warning = 0
    error = 1
  }
}


thresholds TileCheckSummaryTimeGraterThanAbsValueThr {
  limits NBins {
    warning = 0
    error = 1
  }
}

thresholds TileROD_DspRefEnMeanY {
  limits AbsYMean {
    warning = 0.015
    error = 0.03
  }
}

thresholds TileROD_DspRefTimMeanY {
  limits AbsYMean {
    warning = 1.00
    error = 5.00
  }
}

thresholds TileCheckMeanCellTimeThr {
  limits AbsXMean {
    warning = 25
    error = 50
  }
}


thresholds TileCheckMeanCellEneDiffAllSampThr {
  limits AbsXMean {
    warning = 10
    error = 50
  }
}

thresholds TileCheckRMSCellEneDiffAllSampThr {
  limits XRMS {
    warning = 250
    error = 270
  }
}


thresholds TileCheckMeanCellEneDiffSampABDThr {
  limits AbsXMean {
    warning = 10
    error = 50
  }
}

thresholds TileCheckRMSCellEneDiffSampABDThr {
  limits XRMS {
    warning = 250
    error = 270
  }
}


thresholds TileCheckMeanCellEneDiffSampEThr {
  limits AbsXMean {
    warning = 600
    error = 800
  }
}

thresholds TileCheckRMSCellEneDiffSampEThr {
  limits XRMS {
    warning = 300
    error = 500
  }
}



thresholds TileCheckMeanCellTimeDiffAllSampThr {
  limits AbsXMean {
    warning = 0.5
    error = 1.0
  }
}

thresholds TileCheckRMSCellTimeDiffAllSampThr {
  limits XRMS {
    warning = 3
    error = 5
  }
}


thresholds TileCheckMeanCellTimeDiffSampABDThr {
  limits AbsXMean {
    warning = 0.5
    error = 1.0
  }
}

thresholds TileCheckRMSCellTimeDiffSampABDThr {
  limits XRMS {
    warning = 3
    error = 5
  }
}


thresholds TileCheckMeanCellTimeDiffSampEThr {
  limits AbsXMean {
    warning = 1.1
    error = 1.2
  }
}

thresholds TileCheckRMSCellTimeDiffSampEThr {
  limits XRMS {
    warning = 0.01
    error = 0.025
  }
}

thresholds TileCheckMeanCellEvEneSampEThr_AllPart {
  limits AbsXMean {
    warning = 12000
    error = 15000
  }
}

thresholds TileCheckRMSCellEvEneSampEThr_AllPart {
  limits XRMS {
    warning = 15000
    error = 18000
  }
}

thresholds TileCheckMeanCellEvEneSampEThr_EB {
  limits AbsXMean {
    warning = 6000
    error = 7000
  }
}

thresholds TileCheckRMSCellEvEneSampEThr_EB {
  limits XRMS {
    warning = 9500
    error = 11000
  }
}


thresholds TileCheckMeanL2DeltaEnergyThr {
  limits AbsXMean {
    warning = 0.015
    error = 0.15
  }
}

thresholds TileCheckMeanL2EnergyThr {
  limits AbsXMean {
    warning = 0.015
    error = 0.15
  }
}


thresholds TileCluster_EtaThr {
  limits ChiSqPerNdof {
    warning = 20
    error = 40
  }
}

thresholds TileCluster_PhiThr {
  limits ChiSqPerNdof {
    warning = 5
    error = 10
  }
}

thresholds Cell_E_EB_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Cell_E_tresh {
  limits MaxDeviation {
    warning = 0.65
    error = 1.2
  }
}

thresholds Cell_Occ_LB_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Cell_Occ_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds DMU_thr {
  limits BinThreshold {
    warning = 0.001
    error = 0.01
  }
}

thresholds Cluster_EP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Cluster_EPDiff_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Cluster_AllEP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Cluster_E_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Muid_1TagEP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Muid_2TagEP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Muid_EP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds L2Muon_EP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Tower_EP_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds Tower_EPDiff_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds CellsNoise_EP_A_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds CellsNoise_EP_B_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

thresholds CellsNoise_EP_D_tresh {
  limits MaxDeviation {
    warning = 3
    error = 5
  }
}

