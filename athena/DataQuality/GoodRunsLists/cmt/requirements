package GoodRunsLists

author Max Baak <mbaak@cern.ch>

use  AtlasPolicy                AtlasPolicy-*                   

use  AthenaBaseComps            AthenaBaseComps-*               Control
use  AthenaKernel               AthenaKernel-*                  Control
use  AtlasROOT                  AtlasROOT-*                     External
use  GaudiInterface             GaudiInterface-*                External

use  xAODEventInfo               xAODEventInfo-*                 Event/xAOD
use  AsgTools                   AsgTools-*                      Control/AthToolSupport

use AsgAnalysisInterfaces      AsgAnalysisInterfaces-*          PhysicsAnalysis/Interfaces

private
use  DetectorStatus             DetectorStatus-*                DetectorDescription/DetDescrCond
use  EventInfo                  EventInfo-*                     Event
use  PathResolver               PathResolver-*                  Tools
use  StoreGate                  StoreGate-*                     Control
end_private

# Inform cmake of the required ROOT and xml components (invisible to CMT)
apply_pattern cmake_add_command command="find_package( ROOT COMPONENTS XMLIO XMLParser )"
apply_pattern cmake_add_command command="find_package( xml )"

## macros
apply_tag       ROOTBasicLibs
apply_tag       ROOTMathLibs

# Create a named installed library
library GoodRunsListsLib "../Root/*.cxx"
apply_pattern named_installed_library library=GoodRunsListsLib

# Create the CINT dictionary
apply_pattern have_root_headers root_headers="TLumiBlockRange.h RegularFormula.h TGoodRunsListReader.h TGoodRunsListWriter.h DQHelperFunctions.h ../Root/LinkDef.h" \
              headers_lib=GoodRunsListsLib

## Create a component library
library GoodRunsLists *.cxx components/*.cxx
macro_append GoodRunsLists_dependencies " GoodRunsListsLib"
apply_pattern component_library

## requirements file, scripts, jobOptions and python modules
apply_pattern declare_scripts files="../scripts/define* ../scripts/create* ../scripts/merge* ../scripts/verify* ../scripts/overlap* ../scripts/diff*"
apply_pattern declare_python_modules files="*.py"

## install rtt configuration file
macro GoodRunsLists_TestConfiguration "../test/GoodRunsLists_DefaultConfiguration.xml"
apply_pattern declare_runtime extras = "../test/*.xml"

private
macro_append GoodRunsListsLib_cppflags " `xml2-config --cflags`"
apply_tag       ROOTCintexLibs
## xml libraries
macro_append GoodRunsListsLib_use_linkopts " -L$(ROOTSYS)/lib -lXMLIO -lXMLParser"
macro_append GoodRunsListsLib_use_linkopts " -lxml2" slc4-gcc34 " /usr/lib/libxml2.so.2"
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
end_private

private
use     AtlasReflex     AtlasReflex-*   External -no_auto_imports
apply_pattern lcgdict dict=GoodRunsLists selectionfile=selection.xml headerfiles="../GoodRunsLists/GoodRunsListsDict.h"
end_private


# Set up the unit test(s):
use TestTools TestTools-* AtlasTest

apply_pattern UnitTest_run unit_test=GRLSelectionTool
