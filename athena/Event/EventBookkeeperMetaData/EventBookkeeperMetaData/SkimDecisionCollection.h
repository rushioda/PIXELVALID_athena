/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

/////////////////////////////////////////////////////////////////// 
// Header file for class SkimDecisionCollection
// Author: David Cote, September 2008. <david.cote@cern.ch>
/////////////////////////////////////////////////////////////////// 
#ifndef SKIMDECISIONCOLLECTION_H 
#define SKIMDECISIONCOLLECTION_H 
 
// STL includes
#include <iostream>

// DataModel includes
#include "DataModel/DataVector.h"
#include "EventBookkeeperMetaData/SkimDecision.h"

// CLIDSvc includes (for persistency)
#include "CLIDSvc/CLASS_DEF.h"

class SkimDecisionCollection: public DataVector<SkimDecision> 
{
 public:
  // Default Constructor
  SkimDecisionCollection();

  // Copy constructor: 
  SkimDecisionCollection( const SkimDecisionCollection& rhs );
 
  // Assignment operator: 
  SkimDecisionCollection& operator=( const SkimDecisionCollection& rhs ); 

  //Constructor with parameters: to setup the ownership policy
  SkimDecisionCollection( const SG::OwnershipPolicy own );

  //  Destructor
  ~SkimDecisionCollection();

};

 inline 
 SkimDecisionCollection::~SkimDecisionCollection()
 {}

//this is automatically generated by: 'clid -m SkimDecisionCollection'
CLASS_DEF( SkimDecisionCollection , 1312137372 , 1 )

// Tell StoreGate that SkimDecisionCollection derives from DataVector<SkimDecision>
SG_BASE(SkimDecisionCollection, DataVector<SkimDecision>);

#endif //> EVENTBOOKKEEPERCOLLECTION_H
