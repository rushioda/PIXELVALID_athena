package LArG4GenShowerLib

author S. Glazov
author W. Ehrenfeld <wolfgang.ehrenfeld@desy.de>

public
use AthenaBaseComps     AthenaBaseComps-*       Control
use AtlasPolicy         AtlasPolicy-*
use AtlasCLHEP          AtlasCLHEP-*            External
use CLIDSvc             CLIDSvc-*               Control
use DataModel           DataModel-*             Control
use GaudiInterface      GaudiInterface-*        External
use G4AtlasInterfaces   G4AtlasInterfaces-*          Simulation/G4Atlas
use G4AtlasTools        G4AtlasTools-*          Simulation/G4Atlas
use StoreGate           StoreGate-*             Control
use LArG4Code           LArG4Code-*             LArCalorimeter/LArG4

private
use AtlasROOT           AtlasROOT-*             External
use CxxUtils            CxxUtils-*              Control
use EventInfo           EventInfo-*             Event
use Geant4              Geant4-*                External
use GeneratorObjects    GeneratorObjects-*      Generators
use GeoModelInterfaces  GeoModelInterfaces-*    DetectorDescription/GeoModel
use LArG4ShowerLib      LArG4ShowerLib-*        LArCalorimeter/LArG4
end_private

# Convert from a pure component library to a dual_use library because the lcgdict pattern
# doesn't work with the former when building with cmake. This does expose the clients to
# an additional installed library, but with the default as-needed linkopts this is harmless
# apart from a slight increase in the build time.
apply_pattern dual_use_library files=*.cxx
#library LArG4GenShowerLib *.cxx -s=components *.cxx
#apply_pattern component_library

apply_pattern declare_scripts files="-s=../share *.py"

apply_pattern declare_python_modules files="-s=../python *.py"

#for dictionaries
private
#apply_tag notAsNeeded
use AtlasReflex           AtlasReflex-*          External -no_auto_imports
apply_pattern lcgdict dict=LArG4GenShowerLib selectionfile=selection.xml \
        headerfiles="../LArG4GenShowerLib/LArG4GenShowerLibDict.h"
end_private
