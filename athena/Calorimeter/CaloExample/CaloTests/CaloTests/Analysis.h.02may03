// TheAnalysis.h
//

#ifndef _Analysis_Analysis_H
#define _Analysis_Analysis_H

#include <string>

// Gaudi includes

#include "GaudiKernel/Algorithm.h"
#include "GaudiKernel/IHistogramSvc.h"
#include "AIDA/IHistogram1D.h"
#include "AIDA/IHistogram2D.h"
#include "StoreGate/StoreGateSvc.h"

namespace MyAnalysis {

  class Analysis : public Algorithm {
  public:
    //Gaudi style constructor and execution methods
    /** Standard Athena-Algorithm Constructor */
    Analysis(const std::string& name, ISvcLocator* pSvcLocator);
    /** Default Destructor */
    ~Analysis();
    
    /** standard Athena-Algorithm method */
    StatusCode          initialize();
    /** standard Athena-Algorithm method */
    StatusCode          execute();
    /** standard Athena-Algorithm method */
    StatusCode          finalize();
  private:

  //---------------------------------------------------
  // Member variables
  //---------------------------------------------------
  /** The StoreGate Service */
  StoreGateSvc* m_sgSvc;

  IHistogram1D* m_hist_muon;
  IHistogram1D* m_hist_elec;
  IHistogram2D* m_hist_map;
  IHistogram2D* m_hist_map0;
  IHistogram2D* m_hist_map1;
  IHistogram2D* m_hist_map2;
  IHistogram2D* m_hist_map3;
  IHistogram2D* m_hist_map4;
  IHistogram2D* m_hist_map5;
  IHistogram2D* m_hist_map6;
  IHistogram2D* m_hist_map7;

  IHistogram1D* m_hist_hit0;
  IHistogram1D* m_hist_hit1;
  IHistogram1D* m_hist_hit2;
  IHistogram1D* m_hist_hit3;
  IHistogram1D* m_hist_mbe;
  IHistogram1D* m_hist_mbe2;
  IHistogram1D* m_hist_mbe3;

  IHistogram1D* m_hist_cl1;
  IHistogram1D* m_hist_cl2;
  IHistogram1D* m_hist_cl3;
  IHistogram1D* m_hist_cl4;

  IHistogram1D* m_hist_nbcl;
  IHistogram2D* m_hist_clet;
  IHistogram2D* m_hist_clet2;
  IHistogram2D* m_hist_time;

  //---------------------------------------------------
  // Parameters of this algorithm
  //---------------------------------------------------
  double m_ptMuonMin;   // Minimun pt muon
  double m_ptElecMin;   // Minimun pt muon

  int m_nevt;

  };
} // end of namespace bracket
#endif
