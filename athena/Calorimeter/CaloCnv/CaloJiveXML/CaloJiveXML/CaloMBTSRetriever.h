/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

#ifndef JIVEXML_CALOMBTSRETRIEVER_H
#define JIVEXML_CALOMBTSRETRIEVER_H

#include <string>
#include <vector>
#include <cstddef>
#include <map>

#include "CaloIdentifier/CaloCell_ID.h"
#include "TileEvent/TileCellContainer.h"
#include "TileConditions/TileCondToolEmscale.h"

#include "JiveXML/IDataRetriever.h"
#include "AthenaBaseComps/AthAlgTool.h"
#include "GaudiKernel/ToolHandle.h"

class IToolSvc;
class Identifier;
class TileTBID;

namespace JiveXML{
  
  /**
   * @class CaloMBTSRetriever
   * @brief Retrieves all @c Calo Cluster @c objects 
   *
   *  - @b Properties
   *    - StoreGateKeyMBTS: default is 'MBTSContainer'. Don't change.
   *	- MBTSThreshold: default is 0.05 (geV)
   *	- RetrieveMBTS: activate retriever, default is true
   *	- DoMBTSDigits: write MBTS digits (ADC), default is false
   *   
   *  - @b Retrieved @b Data
   *    - location in phi and eta
   *    - numCells: number of cells in each cluster
   *    - cells: identifier and adc counts of each cell 
   */
  class CaloMBTSRetriever : virtual public IDataRetriever,
                                   public AthAlgTool {
    
    public:
      
      /// Standard Constructor
      CaloMBTSRetriever(const std::string& type,const std::string& name,const IInterface* parent);
      
      /// Retrieve all the data
      virtual StatusCode retrieve(ToolHandle<IFormatTool> &FormatTool); 
      const DataMap getMBTSData(const TileCellContainer* tileMBTSCellContainer);

      /// Return the name of the data type
      virtual std::string dataTypeName() const { return m_typeName; };
	
      ///Default AthAlgTool methods
      StatusCode initialize();

    private:
      ///The data type that is generated by this retriever
      const std::string m_typeName;

      const TileTBID*    m_tileTBID;

      ///properties:
      std::string m_sgKeyMBTS; 
      double m_mbtsThreshold;
      bool m_mbts;
      bool m_mbtsdigit;
  };
}
#endif
