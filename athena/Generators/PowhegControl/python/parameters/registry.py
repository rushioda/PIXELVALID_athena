# Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration

import atlas_common
import collections
from ..decorators import Singleton


class Registry(object):
    """! Class to store information about Powheg parameters.

    @author James Robinson  <james.robinson@cern.ch>
    """

    __metaclass__ = Singleton
    __register = {}

    def __init__(self):
        """! Constructor: initialise the registry."""
        self.add_default("allrad", 0, description="turns on multiple shower scheme. Keeps hardest radiation from production and all resonances. [1:enabled]")
        self.add_default("alpha", -1, description="[-1:use Powheg default]")
        self.add_default("alphaem_inv", 1.0 / float(atlas_common.alphaem), description="EM coupling reciprocal")
        self.add_default("alphaem_z", atlas_common.alphaem, description="EM coupling at the Z-boson mass")
        self.add_default("alphaem", atlas_common.alphaem, description="EM coupling")
        self.add_default("alphaem0", atlas_common.alphaem_0, description="EM coupling at 0")
        self.add_default("alphaqcd", atlas_common.alphaqcd, description="strong coupling")
        self.add_default("alphas_from_lhapdf", -1, description="get strong coupling from LHAPDF")
        self.add_default("alphaspdf", atlas_common.alphaqcd, description="strong coupling")
        self.add_default("altmap", 0, description="mapping that preserves the relative kinematics of the emitter where possible. [1:enabled]")
        self.add_default("always_quad", 1, description="compute always using quadruple precision [1:enabled]")
        self.add_default("arXiv:1207.5018", -1, frozen=True, description="compare to arXiv:1207.5018. [>0:enabled]")
        self.add_default("atlas_scale", -1, description="[-1:use Powheg default]")
        self.add_default("bcut", -1, description="[-1:use Powheg default]")
        self.add_default("bmass_in_minlo", 0, description="use non-zero b-mass in MiNLO. [0:disabled; 1:enabled]")
        self.add_default("bmass_lhe", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV (for momentum reshuffling)")
        self.add_default("Bmass", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV")
        self.add_default("bmass", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV")
        self.add_default("bornktmin", -1, description="generation cut: minimum kt in underlying Born. [<0:default to 0]")
        self.add_default("bornonly", 0, description="calculate only Born-level process. [1:enabled]")
        self.add_default("bornsuppfact", -1, description="mass parameter for Born suppression factor. [<0:disabled]")
        self.add_default("bornsuppfactV", -1, description="[-1:use Powheg default]")
        self.add_default("bornsuppfactW", -1, description="[-1:use Powheg default]")
        self.add_default("bornzerodamp", 1, description="use damping where the Born is strongly suppressed (or 0). [1:enabled]")
        self.add_default("bottommass", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV (loops disabled if <= 0)",)
        self.add_default("bottomthr", atlas_common.mass.b, description="minimum pT in GeV for generating emission off b-quarks. [<0:default to 5.0]")
        self.add_default("bottomthrpdf", atlas_common.mass.b, description="threshold in GeV at which b-quark PDF becomes non-zero. [<0:default to 5.0]")
        self.add_default("BR_t_to_Wb", atlas_common.branching_ratio.t_to_Wb, description="top branching ratio to b-quarks")
        self.add_default("BR_t_to_Wd", atlas_common.branching_ratio.t_to_Wd, description="top branching ratio to d-quarks")
        self.add_default("BR_t_to_Ws", atlas_common.branching_ratio.t_to_Ws, description="top branching ratio to s-quarks")
        self.add_default("BR_W_to_hadrons", atlas_common.branching_ratio.W_to_hadrons, description="total W branching ratio to hadrons")
        self.add_default("BR_W_to_leptons", atlas_common.branching_ratio.W_to_leptons, description="total W branching ratio to leptons")
        self.add_default("brpar_diexp", -1, description="[-1:use Powheg default]")
        self.add_default("brpar_dijexp", -1, description="[-1:use Powheg default]")
        self.add_default("btildeborn", -1, description="Born contributions. [0:disabled]")
        self.add_default("btildecoll", -1, description="collinear contributions. [0:disabled]")
        self.add_default("btildereal", -1, description="for fixed order: distinguish real terms from Born/virtual/subtraction. [0:disabled]")
        self.add_default("btildevirt", -1, description="virtual contributions [0:disabled]")
        self.add_default("btlscalect", -1, description="use the scales of the underlying-Born configuration for the subtraction terms. [1:enabled]")
        self.add_default("btlscalereal", -1, description="compute scales that depend on the real kinematics. [1:enabled]")
        self.add_default("bwcutoff", 15, description="mass window is object_mass +/- bwcutoff * object_width")
        self.add_default("bwshape", 1, description="functional form of Breit-Wigner used to distribute Higgs virtuality. [1:running width; 2:hwidth]")
        self.add_default("chainA", "''", frozen=True, description="UNUSED. weakino decay chain.")
        self.add_default("chainB", "''", frozen=True, description="UNUSED. weakino decay chain.")
        self.add_default("charmmass", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV (loops enabled if <= 0)")
        self.add_default("charmthr", atlas_common.mass.c, description="minimum pT in GeV for generating emission off c-quarks. [<0:default to 1.5]")
        self.add_default("charmthrpdf", atlas_common.mass.c, description="threshold in GeV at which c-quark PDF becomes non-zero. [<0:default to 1.5]")
        self.add_default("check_bad_st2", -1, description="check stage 2 output and discard bad grids. [1:enabled]")
        self.add_default("cHHH", -1, description="")
        self.add_default("chklimseed", -1, description="check limit seed")
        self.add_default("ckkwscalup", 1, description="scalup scale for subsequent shower. [0:Powheg; 1:CKKW (use the smallest kt in the final state)]")
        self.add_default("CKM_diagonal", 0, description="Set CKM matrix diagonal. [0:False; 1:True]")
        self.add_default("CKM_Vcb", atlas_common.CKM.Vcb, description="CKM element: Vcb")
        self.add_default("CKM_Vcd", atlas_common.CKM.Vcd, description="CKM element: Vcd")
        self.add_default("CKM_Vcs", atlas_common.CKM.Vcs, description="CKM element: Vcs")
        self.add_default("CKM_Vtb", atlas_common.CKM.Vtb, description="CKM element: Vtb")
        self.add_default("CKM_Vtd", atlas_common.CKM.Vtd, description="CKM element: Vtd")
        self.add_default("CKM_Vts", atlas_common.CKM.Vts, description="CKM element: Vts")
        self.add_default("CKM_Vub", atlas_common.CKM.Vub, description="CKM element: Vub")
        self.add_default("CKM_Vud", atlas_common.CKM.Vud, description="CKM element: Vud")
        self.add_default("CKM_Vus", atlas_common.CKM.Vus, description="CKM element: Vus")
        self.add_default("clobberlhe", -1, frozen=True, description="allow LHE files to be overwritten. [1:enabled]")
        self.add_default("cmass_lhe", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV (for momentum reshuffling)")
        self.add_default("Cmass", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV")
        self.add_default("collremnsamp\"", -1, name="collremnsamp", description="[-1:use Powheg default]")
        self.add_default("colltest", 1, description="check collinear limits. [0:disabled]")
        self.add_default("comparison_paper", -1, frozen=True, description="compare to paper. [>0:enabled]")
        self.add_default("complexGFermi", 1, description="use complex G_F [0:disabled]")
        self.add_default("complexmass", -1, description="complex mass")
        self.add_default("complexpolescheme", 0, description="use complex pole scheme (Passarino et al.) [>0:enabled]")
        self.add_default("compress_lhe", -1, frozen=True, description="compress LHE output.")
        self.add_default("compress_upb", -1, frozen=True, description="[-1:use Powheg default]")
        self.add_default("compute_rwgt", 0, frozen=True, description="whether to compute a reweighting factor. [1:enabled]")
        self.add_default("corI", 1, description="particle pair to correlate - corI and corJ should be different and a number between 1 and 4.")
        self.add_default("corJ", 2, description="particle pair to correlate - corI and corJ should be different and a number between 1 and 4.")
        self.add_default("cutallpairs", -1, description="[-1:use Powheg default]")
        self.add_default("dec1", -1, hidden=True, description="Weakino decay 1. UNUSED")
        self.add_default("dec2", -1, hidden=True, description="Weakino decay 2. UNUSED")
        self.add_default("dec3", -1, hidden=True, description="Weakino decay 3. UNUSED")
        self.add_default("dec4", -1, hidden=True, description="Weakino decay 4. UNUSED")
        self.add_default("decaymode", 0, description="Dark matter decay mode")
        self.add_default("delg1_g", 0, description="Delta_g1(Gamma)")
        self.add_default("delg1_z", 0, description="Delta_g1(Z)")
        self.add_default("delk_g", 0, description="Delta_K(Gamma)")
        self.add_default("delk_z", 0, description="Delta_K(Z)")
        self.add_default("delta_mbbmin", 0, description="if non-zero, use generation cut on m_bb")
        self.add_default("delta_mttmin", 0, description="if non-zero, use generation cut on m_tt")
        self.add_default("Deltak_gam", 0, description="Delta_K(Gamma)")
        self.add_default("deltar", -1, description="[-1:use Powheg default]")
        self.add_default("diagCKM", 0, description="which CKM matrix to use [0:normal CKM; 1:diagonal CKM]")
        self.add_default("Dmass", atlas_common.mass.d, name="mass_d", description="d-quark mass in GeV")
        self.add_default("DMgDM", 1.0, name="gDM", description="X-Xbar-med coupling")
        self.add_default("DMgSM", 1.0, name="gSM", description="q-q-med coupling")
        self.add_default("DMLambda", 10, name="DM_Lambda", description="UV suppression scale in EFT")
        self.add_default("DMmass", 10, name="DM_mass", description="DM-candidate mass")
        self.add_default("DMphimass", 100, name="phi_mass", description="mediator mass")
        self.add_default("DMphiwidth", 42.494, name="phi_width", description="mediator width")
        self.add_default("DMVmass", 100, name="V_mass", description="mediator mass")
        self.add_default("DMVwidth", 42.494, name="V_width", description="mediator width")
        self.add_default("doublefsr", 0, description="reduce observable spikes by suppressing FSR emissions harder than the emitter. [>0:enabled]")
        self.add_default("doubleresonant", 0, description="double-resonant decay")
        self.add_default("dronly", 0, description="include only double resonant diagrams. [1:enabled]")
        self.add_default("dummyvirtual", 1, description="run with dummy virtual. [1:enabled]")
        self.add_default("ebeam1", 6500, name="beam_energy", frozen=True, description="energy of beam in GeV")
        self.add_default("ebeam2", 6500, name="beam_energy", frozen=True, description="energy of beam in GeV")
        self.add_default("elbranching", atlas_common.branching_ratio.W_to_enu, name="BR_W_to_enu", description="W branching ratio to ev")
        self.add_default("Elmass", atlas_common.mass.e, name="mass_e", description="mass of electron in GeV")
        self.add_default("enhancereg", -1, description="enhance reg")
        self.add_default("evenmaxrat", 1, description="speed up upper-bound calculation by taking maximum of identical processes. [1:enabled]")
        self.add_default("ew_renorm_scheme", -1, description="[-1:use Powheg default]")
        self.add_default("ew", 1, description="EW corrections. (0:disabled; 1:enabled)")
        self.add_default("ewi", 0.01, description="regulator for on-shell divergences")
        self.add_default("ewscheme", 2, description="EW scheme. [1: MZ, MW, Gmu; 2:MZ, MW, alpha]")
        self.add_default("expm2bb", -1, description="[-1:use Powheg default]")
        self.add_default("facscfact", 1.0, name="mu_F", description="factorization scale factor: mu_fact = mu_ref * facscfact")
        self.add_default("factsc2min", 2.0, description="value at which the factorization scale is frozen (needed with MiNLO)")
        self.add_default("fakevirt", 0, description="set virtual amplitude proportional to Born amplitude when generating grids - DO NOT USE when generating events. [1:enabled]")
        self.add_default("fakevirtuals", 0, description="generate the grid with fake virtuals. [1:enabled]")
        self.add_default("fastbtlbound", 1, description="use fast btilde bound. [0: disabled; 1: enabled]")
        self.add_default("ffltest", -1, description="[-1:use Powheg default]")
        self.add_default("fin1", -1, description="PDG ID for final state weakinos. [neu10 = 1000022, neu20 = 1000023, neu30 = 1000025, neu40 = 1000035, cha1+ = 1000024, cha2+ = 1000037]")
        self.add_default("fin2", -1, description="PDG ID for final state weakinos. [neu10 = 1000022, neu20 = 1000023, neu30 = 1000025, neu40 = 1000035, cha1+ = 1000024, cha2+ = 1000037]")
        self.add_default("fixedgrid", -1, description="[-1:use Powheg default]")
        self.add_default("fixedscale", -1, description="use reference renormalisation and factorisation scales [>=0: enabled]")
        self.add_default("flg_debug", 0, description="write extra information to LHEF. Breaks PYTHIA showering. [1: enabled]")
        self.add_default("foldcsi", 1, description="number of folds on csi integration. [allowed: 1, 2, 5, 10, 25, 50]")
        self.add_default("foldphi", 1, description="number of folds on phi integration. [allowed: 1, 2, 5, 10, 25, 50]")
        self.add_default("foldy", 1, description="number of folds on y integration. [allowed: 1, 2, 5, 10, 25, 50]")
        self.add_default("for_reweighting", 0, description="run the whole chain without virtual corrections and add these during reweighting. [1:enabled]")
        self.add_default("frensc2min", 2.0, description="value at which the renormalisation scale is frozen (needed with MiNLO)")
        self.add_default("fullphsp", -1, description="enable ISR/FSR phase space parametrization for process with >=2 jet in the ME. [1:enabled]")
        self.add_default("fullrwgt", -1, description="experimental! Must ONLY be used for processes with no Born-level parton radiation. [1:enabled]")
        self.add_default("fullrwgtmode", -1, description="[1:MiNLO style; 2:Simplified (HERWIG); 3:Simplified (Sjostrand); -1,4:Exact]")
        self.add_default("G_F", atlas_common.G_F, description="Fermi coupling")
        self.add_default("G_mu", atlas_common.G_F, description="Fermi coupling")
        self.add_default("gfermi", atlas_common.G_F, name="G_F", description="Fermi constant")
        self.add_default("ggproc", -1, description="[-1:use Powheg default]")
        self.add_default("gmu", atlas_common.G_F, name="G_F", description="Fermi constant")
        self.add_default("gqbproc", -1, description="[-1:use Powheg default]")
        self.add_default("hdamp", -1, description="apply damping factor (in GeV) for high-pT radiation: h**2/(pt2+h**2). [>0:enabled]")
        self.add_default("hdecaymode", 0, frozen=True, description="UNUSED. This specifies decay mode in Powheg's PYTHIA/HERWIG which we do not use.")
        self.add_default("hdecaywidth", 0, description="Higgs width determination. [0:use hwidth; >0:read total decay width from HDECAY sm.br2 file]")
        self.add_default("hfact", -1, description="apply damping factor for high-pT radiation. [>0:enabled]")
        self.add_default("higgsfixedwidth", 0, description="[0:running width; 1:fixed width in Breit-Wigner]")
        self.add_default("Hmass", atlas_common.mass.H, name="mass_H", description="Higgs boson mass in GeV")
        self.add_default("hmass", atlas_common.mass.H, name="mass_H", description="Higgs boson mass in GeV")
        self.add_default("Hwidth", atlas_common.width.H, name="width_H", description="Higgs boson width in GeV")
        self.add_default("hwidth", atlas_common.width.H, name="width_H", description="Higgs boson width in GeV")
        self.add_default("HWJsudakov", -1, description="[-1:use Powheg default]")
        self.add_default("icsimax", 1, description="number of intervals (<= 10) csi grid to compute upper bounds")
        self.add_default("idDM", 1000022, description="PDG ID of DM particles")
        self.add_default("idvecbos", 24, description="PDG ID for vector boson to be produced")
        self.add_default("iftopinloop", -1, description="[-1:use Powheg default]")
        self.add_default("ih1", 1, name="beam_1_type", description="hadron content of beam 1. [(-)1:(anti)proton; (-)2:(anti)neutron; (-)3:(-)pion]")
        self.add_default("ih2", 1, name="beam_2_type", description="hadron content of beam 2. [(-)1:(anti)proton; (-)2:(anti)neutron; (-)3:(-)pion]")
        self.add_default("incomingflavors", 5, description="number of incoming flavours")
        self.add_default("inv_alpha", 1.0 / float(atlas_common.alphaem), description="EM coupling reciprocal")
        self.add_default("iseed", 1, name="random_seed", frozen=True, description="seed for the random number generator")
        self.add_default("itmx1", 1, description="number of iterations for initializing the integration grid")
        self.add_default("itmx1btl", -1, description="number of iterations for btilde during grid generation")
        self.add_default("itmx1btlbrn", -1, description="number of iterations for Born-level btilde during grid generation")
        self.add_default("itmx1osres", -1, description="number of iterations for initializing the integration grid of on-shell resonances (only required for DSUB_II)")
        self.add_default("itmx1reg", -1, description="[-1:use Powheg default]")
        self.add_default("itmx1rm", -1, description="number of iterations for initializing the integration grid for the remnant. [<0:use itmx1]")
        self.add_default("itmx2", 1, description="number of iterations for computing the integral and finding upper bound")
        self.add_default("itmx2btl", -1, description="number of iterations for btilde during integral/upper bound finding")
        self.add_default("itmx2btlbrn", -1, description="number of iterations for Born-level btilde during integral/upper bound finding")
        self.add_default("itmx2osres", -1, description="number of iterations for computing the integral of on-shell resonances (only required for DSUB_II)")
        self.add_default("itmx2reg", -1, description="[-1:use Powheg default]")
        self.add_default("itmx2rm", -1, description="number of iterations for computing the integral and finding upper bound for the remnant. [<0:use itmx2]")
        self.add_default("iupperfsr", -1, description="choice of FSR upper bounding functional form. [<0:use default - usually 2]")
        self.add_default("iupperisr", -1, description="choice of ISR upper bounding functional form. [<0:use default - usually 1]")
        self.add_default("iymax", 1, description="number of intervals (<= 10) in y grid to compute upper bounds")
        self.add_default("jacsing", -1, description="[-1:use Powheg default]")
        self.add_default("kappa_ghb", 1.0, description="multiplicative kappa-factor of the Higgs-bottom coupling. ONLY USED FOR REWEIGHTING.")
        self.add_default("kappa_ght", 1.0, description="multiplicative kappa-factor of the Higgs-top coupling. ONLY USED FOR REWEIGHTING.")
        self.add_default("kappa_ghw", 1.0, description="multiplicative kappa-factor of the Higgs-W coupling. ONLY USED FOR REWEIGHTING.")
        self.add_default("kappa_ghz", 1.0, description="multiplicative kappa-factor of the Higgs-Z coupling. ONLY USED FOR REWEIGHTING.")
        self.add_default("kt2minqed", 0.8, description="kt2_rad_min for photon radiation from leptons. [<0: use 0.8]")
        self.add_default("ktmerging", -1, description="[-1:use Powheg default]")
        self.add_default("lambda_g", 0, description="Lambda(gamma)")
        self.add_default("Lambda_gam", 0, description="Lambda(gamma)")
        self.add_default("lambda_z", 0, description="Lambda(Z)")
        self.add_default("lambdaHHH", 1, description="coupling modifier for trilinear Higgs coupling. [SM: 1]")
        self.add_default("largecorrfact", -1, description="[-1:use Powheg default]")
        self.add_default("lepaslight", -1, description="[-1:use Powheg default]")
        self.add_default("lhans1", 260000, name="PDF", description="PDF set for hadron 1. [LHAPDF numbering]")
        self.add_default("lhans2", 260000, name="PDF", description="PDF set for hadron 2. [LHAPDF numbering]")
        self.add_default("lhapdf6maxsets", 200, description="Maximum number of PDF sets to keep in memory. [<0:default to 10]")
        self.add_default("lhfm/bmass", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV")
        self.add_default("lhfm/cmass", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV")
        self.add_default("lhfm/emass", atlas_common.mass.e, name="mass_e", description="mass of electron in GeV")
        self.add_default("lhfm/mumass", atlas_common.mass.mu, name="mass_mu", description="mass of muon in GeV")
        self.add_default("lhfm/taumass", atlas_common.mass.tau, name="mass_tau", description="mass of tau in GeV")
        self.add_default("lhrwgt_descr", "nominal", frozen=True, description="weight description.")
        self.add_default("lhrwgt_group_combine", "none", frozen=True, description="reweighting combination method.")
        self.add_default("lhrwgt_group_name", "nominal", frozen=True, description="group description.")
        self.add_default("lhrwgt_id", 0, frozen=True, description="weight ID.")
        self.add_default("LOevents", 0, description="produce LOPS events (scalup=ptj); in this case bornonly should also be enabled. [0:disabled; 1:enabled]")
        self.add_default("m2bb", -1, description="[-1:use Powheg default]")
        self.add_default("MadSpin_decays", [], description="decays allowed by MadSpin")
        self.add_default("MadSpin_enabled", True, description="use MadSpin for top decays (only if decays are disabled in Powheg). [False:disabled; True:enabled]")
        self.add_default("MadSpin_mode", "full", description="which spin mode to use in MadSpin. ['full'; 'bridge'; 'none']")
        self.add_default("MadSpin_model", "loop_sm-ckm", description="which model to import in MadSpin.")
        self.add_default("MadSpin_nFlavours", "4", description="which flavour scheme to use. [4; 5]")
        self.add_default("MadSpin_process", "", description="process that MadSpin is operating on")
        self.add_default("MadSpin_taus_are_leptons", True, description="whether lepton definitions should include taus. [False: do not include taus, True: include taus]")
        self.add_default("manyseeds", 0, description="read multiple seeds for the random number generator from pwgseeds.dat. [1:enabled]")
        self.add_default("mass_b", atlas_common.mass.b, description="b-quark mass in GeV")
        self.add_default("mass_c", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV")
        self.add_default("mass_d", atlas_common.mass.d, description="d-quark mass in GeV")
        self.add_default("mass_e", atlas_common.mass.e, description="mass of electron in GeV")
        self.add_default("mass_H", atlas_common.mass.H, description="Higgs boson mass in GeV")
        self.add_default("mass_high", -1, description="If set then require M_object < mass_high; otherwise allow internal Powheg computation. [-1:use Powheg default]")
        self.add_default("mass_low", -1, description="If set then require M_object > mass_low; otherwise allow internal Powheg computation. [-1:use Powheg default]")
        self.add_default("mass_mu", atlas_common.mass.mu, description="mass of muon in GeV")
        self.add_default("mass_s", atlas_common.mass.s, description="s-quark mass in GeV")
        self.add_default("mass_t", atlas_common.mass.t, description="top quark mass in GeV")
        self.add_default("mass_tau", atlas_common.mass.tau, description="mass of tau in GeV")
        self.add_default("mass_u", atlas_common.mass.u, description="u-quark mass in GeV")
        self.add_default("mass_W", atlas_common.mass.W, description="W boson mass in GeV")
        self.add_default("mass_Z", atlas_common.mass.Z, description="Z boson mass in GeV")
        self.add_default("massivebottom", 1, name="use_massive_b", description="enable bottom quark loops. [0:disabled; 1:enabled]")
        self.add_default("massivetop", 1, name="use_massive_t", description="enable top quark loops. [0:disabled; 1:enabled]")
        self.add_default("massren", 0, description="[0:OS; 1:MSBAR; 2:DRBAR]")
        self.add_default("masswindow_high", -1, description="DEPRECATED: use mass_high instead")
        self.add_default("masswindow_low", -1, description="DEPRECATED: use mass_low instead")
        self.add_default("masswindow", 10.0, description="number of widths around hmass in the BW for an off-shell Higgs boson")
        self.add_default("max_h_mass", 14000.0, name="mass_H_high", description="Require Higgs boson mass < mass high")
        self.add_default("max_io_bufsize", -1, description="size of I/O buffer. [<0:default to 100000]")
        self.add_default("max_W_mass", 14000.0, name="mass_W_high", description="Require W boson mass < mass high")
        self.add_default("max_w_mass", 14000.0, name="mass_W_high", description="Require W boson mass < mass high")
        self.add_default("max_z_mass", 14000.0, name="mass_Z_high", description="Require Z boson mass < mass high")
        self.add_default("max_Z_mass", 14000.0, name="mass_Z_high", description="Require Z boson mass < mass high")
        self.add_default("maxseeds", -1, frozen=True, description="maximum number of seeds to use. [<0:default to 200]")
        self.add_default("mglowidth", -1, description="MG5 LO width")
        self.add_default("min_h_mass", 10., name="mass_H_low", description="Require Higgs boson mass > mass low")
        self.add_default("min_w_mass", 1.0, name="mass_W_low", description="Require W boson mass > mass low")
        self.add_default("min_W_mass", 1.0, name="mass_W_low", description="Require W boson mass > mass low")
        self.add_default("min_Z_mass", 1.0, name="mass_Z_low", description="Require Z boson mass > mass low")
        self.add_default("min_z_mass", 1.0, name="mass_Z_low", description="Require Z boson mass > mass low")
        self.add_default("minlo_nnll", 1, description="enable MiNLO NNLL. [0:disabled; 1:enabled]")
        self.add_default("minlo", 0, description="use MiNLO (if minlo is set for unsupported processes, Powheg will crash with an 'st_bornorder' error) [1:enabled]")
        self.add_default("minloscfac", 1, description="MiNLO scaling factor:  q2merge=q2merge * (minloscfac)**2")
        self.add_default("mint_density_map", -1, description="keep track of the distribution of integrand values while doing the integration (for debugging).")
        self.add_default("mintupbratlim", -1, description="while computing btilde upper bound, disregard points with btilde/born ratio greater than mintupbratlim")
        self.add_default("mintupbxless", -1, description="mint upbx less")
        self.add_default("mll_gencut", -1, description="cut on the invariant dilepton mass in GeV (minimum 15). Needed to avoid singularities from virtual photon decays to two massless leptons")
        self.add_default("mllmax", 13000, description="minimum invariant mass in GeV of lepton pairs from decay.")
        self.add_default("mllmin", 4, description="minimum invariant mass in GeV of lepton pairs from decay.")
        self.add_default("mockoffshelltop", 0, description="mock off-shell tops")
        self.add_default("model", 0, description="[0 = SM]")
        self.add_default("modept2gamlep", 0, description="pt_rel definition in setlocalscales")
        self.add_default("msbar", 1, description="1 MSbar renormalization; 0 On-Shell renormalization" )
        self.add_default("MSbarscheme", 1, description="use five-flavour-scheme unless specified otherwise. [0:four-flavour-scheme]")
        self.add_default("mtdep", 0, description="ggHH production: [0:Higgs effective field theory (HEFT); 1:Born improved HEFT; 2:approximated full theory (FTapprox); 3:full theory]")
        self.add_default("Mumass", atlas_common.mass.mu, name="mass_mu", description="mass of muon in GeV")
        self.add_default("ncall1", 100, description="number of calls for initializing the integration grid")
        self.add_default("ncall1btl", -1, description="number of calls btilde (itr1)")
        self.add_default("ncall1btlbrn", -1, description="number of calls btilde born-level (itr1)")
        self.add_default("ncall1osres", -1, description="number of calls for initializing the integration grid of on-shell resonances (only required for DSUB_II)")
        self.add_default("ncall1reg", -1, description="[-1:use Powheg default]")
        self.add_default("ncall1rm", -1, description="number of calls for initializing the integration grid for the remant. [<0:use ncall1]")
        self.add_default("ncall2", 100, description="number of calls for computing the integral and finding upper bound")
        self.add_default("ncall2btl", -1, description="number of calls btilde (itr2)")
        self.add_default("ncall2btlbrn", -1, description="Number of calls btilde born-level (itr2)")
        self.add_default("ncall2osres", -1, description="number of calls for computing the integral of on-shell resonances (only required for DSUB_II)")
        self.add_default("ncall2reg", -1, description="[-1:use Powheg default]")
        self.add_default("ncall2rm", -1, description="number of calls for computing the integral and finding upper bound for the remnant. [<0:use ncall2]")
        self.add_default("ncallfrominput", 1, frozen=True, description="read ncall parameters from run card. [1:enabled]")
        self.add_default("new_damp", -1, description="[-1:use Powheg default]")
        self.add_default("nloformfact", 0, description="include Higgs-specific corrections into GGS and GGP form factor. [1:enabled]")
        self.add_default("nlotestonly", 0, description="do NLO analysis only, using smooth isolation cut. [1:enabled]")
        self.add_default("nlowhich", 0, description="default is 0; set to 1 for no NLO corrections in decay")
        self.add_default("NNLO_output_weights", collections.OrderedDict(), description="dictionary of weight ID string => weight calculation in NNLOPS format")
        self.add_default("NNLO_reweighting_inputs", collections.OrderedDict(), description="dictionary of labels => (pre-existing) HNNLO output")
        self.add_default("nnlo", -1, description="enable NNLO rescaling. [-1:use Powheg default]")
        self.add_default("no_ew", 0, description="NLO EW corrections. [0:with; 1:without]")
        self.add_default("no_photon_radiation", -1, description="[-1:use Powheg default]")
        self.add_default("no_strong", 0, description="NLO QCD corrections. [0:with; 1:without]")
        self.add_default("noevents", -1, description="do not generate events. [1:enabled]")
        self.add_default("nohad", 0, frozen=True, description="UNUSED. This specifies hadronization in Powheg's PYTHIA/HERWIG which we do not use.")
        self.add_default("nores", 0, description="disable the resonance treatment. [1: disabled]")
        self.add_default("nospincorr", 0, description="wash out spin correlations. [1:enabled]")
        self.add_default("novirtual", -1, description="ignore virtual contributions. [1:enabled]")
        self.add_default("nubound", 100, description="number of calls to setup upper bounds for radiation")
        self.add_default("numevts", 5500, name="nEvents", description="number of events to be generated")
        self.add_default("nwidthcutoff", -1, description="[-1:use Powheg default]")
        self.add_default("offshellscales", -1, description="off-shell scales")
        self.add_default("offshelltop", 1, description="default is now 1; set to zero to do simple on-shell computation")
        self.add_default("olddij", -1, description="[-1:use Powheg default]")
        self.add_default("olpreset", -1, description="OpenLoops preset")
        self.add_default("olverbose", 0, description="OpenLoops verbosity")
        self.add_default("onshellhiggs", 1, frozen=True, description="force the Higgs to be on-shell (i.e. gamma_H=0). Required for HV/HVJ. [1:enabled]")
        self.add_default("openloops-stability", 1, name="openloops_stability", description="write OpenLoops stability information to log file.")
        self.add_default("openloopsreal", 1, description="OpenLoops real diagrams [0:disabled]")
        self.add_default("openloopsvirtual", 1, description="OpenLoops virtual diagrams [0:disabled]")
        self.add_default("par_2gsupp", -1, description="[<0:use 1.0]")
        self.add_default("par_diexp", -1, description="ISR singularity exponent (p1). [<0:default to 1.0]")
        self.add_default("par_dijexp", -1, description="FSR singularity exponent (p2). [<0:default to 1.0]")
        self.add_default("par_fsrtinycsi", -1, description="[-1:use Powheg default]")
        self.add_default("par_fsrtinyy", -1, description="[-1:use Powheg default]")
        self.add_default("par_isrtinycsi", -1, description="[-1:use Powheg default]")
        self.add_default("par_isrtinyy", -1, description="[-1:use Powheg default]")
        self.add_default("parallelstage", -1, description="which stage to perform in parallel. [1...4:specify stage; -1:disabled]")
        self.add_default("pdfreweight", 1, frozen=True, description="store PDF information. Deprecated for processes with XML-reweighting. [1:enabled]")
        self.add_default("Phasespace", 1, name="phasespace", description="phasespace to use. [1:standard; 2:use separate unweighted events from event.total.lhe as input]")
        self.add_default("photoninduced", -1, description="[-1:use Powheg default]")
        self.add_default("PHOTOS_enabled", True, description="use PHOTOS for photon radiation. [False:disabled; True:enabled]")
        self.add_default("phsp_Wm", atlas_common.mass.W, name="mass_W", description="W boson mass in GeV")
        self.add_default("phsp_Ww", atlas_common.width.W, name="width_W", description="W boson width in GeV")
        self.add_default("phsp_Zm", atlas_common.mass.Z, name="mass_Z", description="Z boson mass in GeV")
        self.add_default("phsp_Zw", atlas_common.width.Z, name="width_Z", description="Z boson width in GeV")
        self.add_default("phspseparation", 0.5, description="weight for phase space dual-channel sampling")
        self.add_default("polecheck", -1, description="[-1:use Powheg default]")
        self.add_default("powheg_top_decays_enabled", True, hidden=True, description="Have the input tops been decayed by Powheg. [False:undecayed, True:decayed]")
        self.add_default("powheg-c-lo", -1, name="powheg_c_lo", description="competition-at-LO scheme. [0:competition; 1:non-competition]")
        self.add_default("powheg-nc", -1, name="powheg_nc", description="competition-at-NLO scheme. [0:competition; 1:non-competition]")
        self.add_default("powhegv2opt", -1, description="[-1:use Powheg default]")
        self.add_default("psgen", -1, description="[-1:use Powheg default]")
        self.add_default("ptborncut", -1, description="[-1:use Powheg default]")
        self.add_default("ptHHcut_CT", 0.001, description="")
        self.add_default("ptHHcut", 0.001, description="")
        self.add_default("ptj_gencut", 20, description="generation cut on the jets pT in the phase space generator. Should be used when bornsuppfact is set to 0")
        self.add_default("ptmin_jet", 25, description="jet min pt in GeV for use in analysis code (not relevant here)")
        self.add_default("ptsqmin_em", 1e-6, description="minimum squared transverse momentum for photon radiation. Do NOT use it!")
        self.add_default("ptsqmin", -1, description="minimum pT in GeV for generating gluon emission off light quarks. [<0:default to 0.8]")
        self.add_default("ptsupp", -1, frozen=True, description="DEPRECATED: only included because PowhegBox checks for it")
        self.add_default("ptsuppfact", -1, description="Born pT suppression factor. [-1:use Powheg default]")
        self.add_default("ptVhigh", -1, description="[-1:use Powheg default]")
        self.add_default("ptVlow", -1, description="[-1:use Powheg default]")
        self.add_default("pyMEC", 1, description="try this flag to generate the corrections in decays (the default setting)")
        self.add_default("q2mergefac", -1, description="[-1:use Powheg default]")
        self.add_default("qed_qcd", 2, description="toggle QCD/QED corrections. [0: QCD only; 1: QED only;  2: QED+QCD]")
        self.add_default("qgproc", -1, description="[-1:use Powheg default]")
        self.add_default("qmass", -1, description="mass of heavy quark in GeV")
        self.add_default("qqbproc", -1, description="[-1:use Powheg default]")
        self.add_default("qqpproc", -1, description="[-1:use Powheg default]")
        self.add_default("qqproc", -1, description="[-1:use Powheg default]")
        self.add_default("quadrupleprec", -1, description="[-1:use Powheg default]")
        self.add_default("quarkmasseffects", 1, description="quark mass effects. [0: disabled; 1: enabled]")
        self.add_default("R_jet", 0.4, description="jet radius for use in internal Powheg analysis code (not relevant here)")
        self.add_default("radregion", -1, description="only generate radiation in the selected singular region (otherwise all regions). [>=0:which region to use]")
        self.add_default("raisingscales", -1, description="force CKKW scale to be increasing. [1: enabled]")
        self.add_default("rand1", 0, frozen=True, description="user-initiated random seed. [<0: defaults to 0]")
        self.add_default("rand2", 0, frozen=True, description="user-initiated random seed. [<0: defaults to 0]")
        self.add_default("rapsuppfact", -1, description="[-1:use Powheg default]")
        self.add_default("regridfix", -1, description="regularization grid is fixed")
        self.add_default("renscfact", 1.0, name="mu_R", description="renormalization scale factor: mu_ren = mu_ref * renscfact")
        self.add_default("resc_em_alpha", -1, description="[-1:use Powheg default]")
        self.add_default("rescue_reals", -1, description="")
        self.add_default("running_width", 0, description="use running width in propagator. (0:disabled; 1:enabled)")
        self.add_default("runningscale", 1, description="choice for mu_R and mu_F in Bbar integration.")
        self.add_default("runningscales", 0, description="[0:use fixed factorisation/renormalisation scale; 1:use running scale]")
        self.add_default("runningwidth", 0, description="use running width in propagator. [1:enabled]")
        self.add_default("rwl_add", 0, frozen=True, description="rerun adding additional weights. [1:enabled]")
        self.add_default("rwl_file", "", frozen=True, description="XML file used for reweighting")
        self.add_default("rwl_format_rwgt", 1, frozen=True, description="Use LHE standard for weights instead of Powheg standard. [1:enabled]")
        self.add_default("rwl_group_events", 1000, description="Number of events to group together when running reweighting. [<0:defaults to 1000]")
        self.add_default("scheme", 1, description="choice for EW NLO scheme. [0:Alpha(0); 1:G_mu]")
        self.add_default("select_EW_virt", 2, description="EW virtual corrections. [0: none; 1: full; 2: Sudakov approx; 3: full - Sudakov approx]")
        self.add_default("semileptonic", -1, description="only accept semileptonic decay]. [-1:use Powheg default]")
        self.add_default("shortlist_onlyb", -1, description="[-1:use Powheg default]")
        self.add_default("shortlist", -1, description="[-1:use Powheg default]")
        self.add_default("sin2cabibbo", atlas_common.sin2cabibbo, name="sin2cabibbo", description="sin(theta_Cabibbo)^2")
        self.add_default("skipextratests", -1, description="[-1:use Powheg default]")
        self.add_default("SLHA", "'input_parameters.slha'", frozen=True, description="name of the SLHA input-file")
        self.add_default("smartsig", 1, frozen=True, description="remember equal amplitudes. [0:disabled]")
        self.add_default("Smass", atlas_common.mass.s, description="s-quark mass in GeV")
        self.add_default("smincuts", -1, description="[-1:use Powheg default]")
        self.add_default("softmismch", 1, frozen=True, description="do soft step. [0:disabled]")
        self.add_default("softonly", -1, description="[-1:use Powheg default]")
        self.add_default("softtest", 1, description="check soft limits. [0:disabled]")
        self.add_default("stage2init", -1, description="[1:enabled]")
        self.add_default("sthw2", atlas_common.sin2thetaW, description="sin(theta_W)^2")
        self.add_default("storeinfo_rwgt", 0, frozen=True, description="write out PDF information for reweighting. [0:disabled; 1:enabled]")
        self.add_default("storemintupb", 1, description="cache cross sections (stage2 btilde calls) to speed up construction of upper bounding envelope. [1:enabled]")
        self.add_default("sudakovbb", -1, description="[-1:use Powheg default]")
        self.add_default("sudmw2mb", -1, description="[-1:use Powheg default]")
        self.add_default("sudscalevar", 1, description="also apply scale variation to Sudakov form factors in MiNLO. [0:disabled; 1:enabled]")
        self.add_default("Taumass", atlas_common.mass.tau, name="mass_tau", description="mass of tau in GeV")
        self.add_default("tbardec", 13, description="anti-top quark decay. [11:e-; 13:mu-; 15:tau-; 1:u~ d; 3:c~ s]")
        self.add_default("tdec/bmass", atlas_common.mass.b, name="mass_b", description="b-quark mass in GeV")
        self.add_default("tdec/cmass", atlas_common.mass.c, name="mass_c", description="c-quark mass in GeV")
        self.add_default("tdec/dmass", atlas_common.mass.d, name="mass_d", description="d-quark mass in GeV")
        self.add_default("tdec/elbranching", atlas_common.branching_ratio.W_to_enu, name="BR_W_to_enu", description="W branching ratio to ev")
        self.add_default("tdec/emass", atlas_common.mass.e, name="mass_e", description="mass of electron in GeV")
        self.add_default("tdec/mumass", atlas_common.mass.mu, name="mass_mu", description="mass of muon in GeV")
        self.add_default("tdec/sin2cabibbo", atlas_common.sin2cabibbo, name="sin2cabibbo", description="sin(theta_Cabibbo)^2")
        self.add_default("tdec/smass", atlas_common.mass.s, name="mass_s", description="s-quark mass in GeV")
        self.add_default("tdec/taumass", atlas_common.mass.tau, name="mass_tau", description="mass of tau in GeV")
        self.add_default("tdec/twidth", atlas_common.width.t, name="width_t", description="top quark width in GeV")
        self.add_default("tdec/umass", atlas_common.mass.u, name="mass_u", description="u-quark mass in GeV")
        self.add_default("tdec/wmass", atlas_common.mass.W, name="mass_W", description="W boson mass in GeV")
        self.add_default("tdec/wwidth", atlas_common.width.W, name="width_W", description="W boson width in GeV")
        self.add_default("testplots", 0, frozen=True, description="plot NLO and PWHG distributions. [1:enabled]")
        self.add_default("testsuda", 0, frozen=True, description="test Sudakov form factor by numerical integration. [1:enabled]")
        self.add_default("tevscale", -1, description="W form-factor scale, in TeV . [-1:use Powheg default]")
        self.add_default("theta_damp", -1, description="[-1:use Powheg default]")
        self.add_default("tmass_phsp", -1, description="[-1:use Powheg default]")
        self.add_default("Tmass", atlas_common.mass.t, name="mass_t", description="top quark mass in GeV")
        self.add_default("tmass", atlas_common.mass.t, name="mass_t", description="top quark mass in GeV")
        self.add_default("topdec", 11, description="top quark decay. [11:e+; 13:mu+; 15:tau+; 1:u d~; 3:c s~]")
        self.add_default("topdecaymode", 0, description="top quark decay. 5 digits indicating the maximum number of (e,mu,tau,u,c) allowed in decays")
        self.add_default("toploop", 1, description="1 include top loop effects; 0 disregard top loop effects" )
        self.add_default("topmass", atlas_common.mass.t, name="mass_t", description="top quark mass in GeV")
        self.add_default("topwidth", atlas_common.width.t, name="width_t", description="top quark width in GeV")
        self.add_default("ttype", 1, description="specify top or anti-top. [1:t; -1:tbar]")
        self.add_default("twidth", atlas_common.width.t, name="width_t", description="top quark width in GeV")
        self.add_default("ubexcess_correct", 1, description="whether to correct for upper bound violations in btilde/remnant generation. [1:enabled]")
        self.add_default("ubsigmadetails", 1, description="output calculated cross-sections. [1:enabled]")
        self.add_default("Umass", atlas_common.mass.u, description="u-quark mass in GeV")
        self.add_default("use-old-grid", 1, frozen=True, description="use old integration grid if available. [0:disabled]")
        self.add_default("use-old-ubound", 1, frozen=True, description="read norm of upper bounding function from pwgubound.dat, if present. [1:enabled]")
        self.add_default("use-OLP-interface", -1, name="use_OLP_interface", description="[-1:use Powheg default]")
        self.add_default("user_reshists_sep", -1, description="[-1:use Powheg default]")
        self.add_default("vdecaymode", None, description="vector boson decay mode")
        self.add_default("vdecaymodeW", None, description="W-boson decay mode.")
        self.add_default("vdecaymodeW1", None, description="first W decay mode.")
        self.add_default("vdecaymodew1", None, description="first W decay mode.")
        self.add_default("vdecaymodew2", None, description="second W decay mode.")
        self.add_default("vdecaymodeW2", None, description="second W decay mode.")
        self.add_default("vdecaymodeZ", None, description="Z-boson decay mode.")
        self.add_default("verytinypars", 0, description="set all ISR/FSR grid parameters to 1e-12. [1:enabled]")
        self.add_default("virtonly", -1, description="[-1:use Powheg default]")
        self.add_default("Vstep", -1, description="[-1:use Powheg default]")
        self.add_default("wdecaymode", None, description="W-boson decay mode: 5 digits indicating the maximum number of (e,mu,tau,u,c) allowed in decays")
        self.add_default("whichpwhgevent", -1, description="[-1:use Powheg default]")
        self.add_default("width_H", atlas_common.width.H, description="Higgs boson width in GeV")
        self.add_default("width_t", atlas_common.width.t, description="top quark width in GeV")
        self.add_default("width_W", atlas_common.width.W, name="width_W", description="W boson width in GeV")
        self.add_default("width_Z", atlas_common.width.Z, description="Z boson width in GeV")
        self.add_default("withbtilde", 1, frozen=True, description="do btilde step. [0:disabled]")
        self.add_default("withdamp", -1, description="enable hdamp and bornzerodamp. [1:enabled]")
        self.add_default("withfluxfactor", -1, description="[-1:use Powheg default]")
        self.add_default("withinterference", 1, description="(0:disabled; 1:enabled) include interference for like flavour charged leptons")
        self.add_default("withnegweights", 1, description="allow negative weights. [1:enabled]")
        self.add_default("withregular", -1, description="[-1:use Powheg default]")
        self.add_default("withremnants", 1, frozen=True, description="do remnant step. [0:disabled]")
        self.add_default("withsubtr", 1, frozen=True, description="subtract real counterterms. [0:disabled]")
        self.add_default("withthetacut", -1, description="[-1:use Powheg default]")
        self.add_default("Wmass", atlas_common.mass.W, name="mass_W", description="W boson mass in GeV")
        self.add_default("wmass", atlas_common.mass.W, name="mass_W", description="W boson mass in GeV")
        self.add_default("WmZevee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->e(-)nu. [1:enabled]")
        self.add_default("WmZevmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->e(-)nu. [1:enabled]")
        self.add_default("WmZevtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->e(-)nu. [1:enabled]")
        self.add_default("WmZmuvee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->mu(-)nu. [1:enabled]")
        self.add_default("WmZmuvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->mu(-)nu. [1:enabled]")
        self.add_default("WmZmuvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->mu(-)nu. [1:enabled]")
        self.add_default("WmZtauvee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->tau(-)nu. [1:enabled]")
        self.add_default("WmZtauvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->tau(-)nu. [1:enabled]")
        self.add_default("WmZtauvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->tau(-)nu. [1:enabled]")
        self.add_default("WpWmevev", 0, hidden=True, description="WW decay mode: W->e(+)nu W->e(-)nu. [1:enabled]")
        self.add_default("WpWmevmuv", 0, hidden=True, description="WW decay mode: W->e(+)nu W->mu(-)nu. [1:enabled]")
        self.add_default("WpWmevtauv", 0, hidden=True, description="WW decay mode: W->e(+)nu W->tau(-)nu. [1:enabled]")
        self.add_default("WpWmmuvev", 0, hidden=True, description="WW decay mode: W->mu(+)nu W->e(-)nu. [1:enabled]")
        self.add_default("WpWmmuvmuv", 0, hidden=True, description="WW decay mode: W->mu(+)nu W->mu(-)nu. [1:enabled]")
        self.add_default("WpWmmuvtauv", 0, hidden=True, description="WW decay mode: W->mu(+)nu W->tau(-)nu. [1:enabled]")
        self.add_default("WpWmtauvev", 0, hidden=True, description="WW decay mode: W->tau(+)nu W->e(-)nu. [1:enabled]")
        self.add_default("WpWmtauvmuv", 0, hidden=True, description="WW decay mode: W->tau(+)nu W->mu(-)nu. [1:enabled]")
        self.add_default("WpWmtauvtauv", 0, hidden=True, description="WW decay mode: W->tau(+)nu W->tau(-)nu. [1:enabled]")
        self.add_default("WpZevee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->e(+)nu. [1:enabled]")
        self.add_default("WpZevmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->e(+)nu. [1:enabled]")
        self.add_default("WpZevtautau", 0, hidden=True, description="WZ decay mode: Z->tau(-)tau(-) W->e(+)nu. [1:enabled]")
        self.add_default("WpZmuvee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->mu(+)nu. [1:enabled]")
        self.add_default("WpZmuvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->mu(+)nu. [1:enabled]")
        self.add_default("WpZmuvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(-)tau(-) W->mu(+)nu. [1:enabled]")
        self.add_default("WpZtauvee", 0, hidden=True, description="WZ decay mode: Z->e(-)e(-) W->tau(+)nu. [1:enabled]")
        self.add_default("WpZtauvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(-)mu(-) W->tau(+)nu. [1:enabled]")
        self.add_default("WpZtauvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->tau(+)nu. [1:enabled]")
        self.add_default("WWevmuv", 0, hidden=True, description="WW decay mode: W->enu W->munu. [1:enabled]")
        self.add_default("WWevtauv", 0, hidden=True, description="WW decay mode: W->enu W->taunu. [1:enabled]")
        self.add_default("Wwidth", atlas_common.width.W, name="width_W", description="W boson width in GeV")
        self.add_default("wwidth", atlas_common.width.W, name="width_W", description="W boson width in GeV")
        self.add_default("WWlvlv", 0, hidden=True, description="WW decay mode: W->lnu W->lnu. [1:enabled]")
        self.add_default("WWlvqq", 0, hidden=True, description="WW decay mode: W->lnu W->qq. [1:enabled]")
        self.add_default("WWmuvtauv", 0, hidden=True, description="WW decay mode: W->munu W->taunu. [1:enabled]")
        self.add_default("WWqqqq", 0, hidden=True, description="WW decay mode: W->qq W->qq. [1:enabled]")
        self.add_default("WZevee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->e(+/-)nu. [1:enabled]")
        self.add_default("WZevmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->e(+/-)nu. [1:enabled]")
        self.add_default("WZevtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->e(+/-)nu. [1:enabled]")
        self.add_default("WZlvll", 0, hidden=True, description="WZ decay mode: Z->ll W->lnu. [1:enabled]")
        self.add_default("WZlvqq", 0, hidden=True, description="WZ decay mode: Z->qq W->lnu. [1:enabled]")
        self.add_default("WZlvvv", 0, hidden=True, description="WZ decay mode: Z->vv W->lnu. [1:enabled]")
        self.add_default("WZmuvee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->mu(+/-)nu. [1:enabled]")
        self.add_default("WZmuvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->mu(+/-). [1:enabled]")
        self.add_default("WZmuvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->mu(+/-)nu. [1:enabled]")
        self.add_default("WZqqll", 0, hidden=True, description="WZ decay mode: Z->ll W->qq. [1:enabled]")
        self.add_default("WZqqqq", 0, hidden=True, description="WZ decay mode: Z->qq W->qq. [1:enabled]")
        self.add_default("WZqqvv", 0, hidden=True, description="WZ decay mode: Z->vv W->qq. [1:enabled]")
        self.add_default("WZtauvee", 0, hidden=True, description="WZ decay mode: Z->e(+)e(-) W->tau(+/-)nu. [1:enabled]")
        self.add_default("WZtauvmumu", 0, hidden=True, description="WZ decay mode: Z->mu(+)mu(-) W->tau(+/-)nu. [1:enabled]")
        self.add_default("WZtauvtautau", 0, hidden=True, description="WZ decay mode: Z->tau(+)tau(-) W->tau(+/-). [1:enabled]")
        self.add_default("xgriditeration", 1, frozen=True, description="iteration level for the calculation of the importance sampling grid (only relevant when parallelstage=1).")
        self.add_default("xupbound", 1, description="increase upper bound for radiation generation by this factor")
        self.add_default("ZbbNLO", 1, description="correct for non-zero b-mass in Z->bb decays. [0:disabled]")
        self.add_default("zerowidth", 0, description="use on-shell quarks/bosons only. [1:enabled]")
        self.add_default("zfixedwidth", -1, description="[-1:use Powheg default]")
        self.add_default("zmass", atlas_common.mass.Z, description="Z boson mass in GeV")
        self.add_default("Zmass", atlas_common.mass.Z, name="mass_Z", description="Z boson mass in GeV")
        self.add_default("zwidth", atlas_common.width.Z, name="width_Z", description="Z boson width in GeV")
        self.add_default("Zwidth", atlas_common.width.Z, name="width_Z", description="Z boson width in GeV")
        self.add_default("ZZeeee", 0, hidden=True, description="ZZ decay mode: Z->ee Z->ee. [1:enabled]")
        self.add_default("ZZeetautau", 0, hidden=True, description="ZZ decay mode: Z->tautau Z->ee. [1:enabled]")
        self.add_default("ZZllll", 0, hidden=True, description="ZZ decay mode: Z->ll Z->ll. [1:enabled]")
        self.add_default("ZZmumuee", 0, hidden=True, description="ZZ decay mode: Z->ee Z->mumu. [1:enabled]")
        self.add_default("ZZmumumumu", 0, hidden=True, description="ZZ decay mode: Z->mumu Z->mumu. [1:enabled]")
        self.add_default("ZZqqll", 0, hidden=True, description="ZZ decay mode: Z->ll Z->qq. [1:enabled]")
        self.add_default("ZZqqqq", 0, hidden=True, description="ZZ decay mode: Z->qq Z->qq. [1:enabled]")
        self.add_default("ZZtautaumumu", 0, hidden=True, description="ZZ decay mode: Z->mumu Z->tautau. [1:enabled]")
        self.add_default("ZZtautautautau", 0, hidden=True, description="ZZ decay mode: Z->tautau Z->tautau. [1:enabled]")
        self.add_default("ZZvvee", 0, hidden=True, description="ZZ decay mode: Z->ee Z->nunu. [1:enabled]")
        self.add_default("ZZvvll", 0, hidden=True, description="ZZ decay mode: Z->ll Z->nunu. [1:enabled]")
        self.add_default("ZZvvmumu", 0, hidden=True, description="ZZ decay mode: Z->mumu Z->nunu. [1:enabled]")
        self.add_default("ZZvvqq", 0, hidden=True, description="ZZ decay mode: Z->qq Z->nunu. [1:enabled]")
        self.add_default("ZZvvtautau", 0, hidden=True, description="ZZ decay mode: Z->tautau Z->nunu. [1:enabled]")
        self.add_default("ZZvvvv", 0, hidden=True, description="ZZ decay mode: Z->nunu Z->nunu. [1:enabled]")


    def add_default(self, keyword, value, name=None, hidden=False, frozen=False, description=""):
        """! Add a group of default settings for a given keyword.

        @param keyword      Powheg keyword.
        @param value        Default value.
        @param name         User-visible name.
        @param hidden       True if this parameter should be hidden from the user.
        @param frozen       True if this parameter cannot be changed.
        @param description  Human-readable description string.
        """
        if keyword in self.known_keywords:
            raise AssertionError("Parameter {0} has already been defined!".format(keyword))
        self.__register[keyword] = {"name": [name, keyword][name is None], "value": value, "hidden": hidden, "frozen": frozen, "description": description}

    def get_defaults(self, keyword):
        """! Get default values for a particular keyword.

        @param keyword Powheg keyword to return defaults for.
        """
        if keyword not in self.known_keywords:
            raise AssertionError("Parameter {0} is not known!".format(keyword))
        return self.__register[keyword]

    @property
    def known_keywords(self):
        """! Return all known keywords."""
        return self.__register.keys()
