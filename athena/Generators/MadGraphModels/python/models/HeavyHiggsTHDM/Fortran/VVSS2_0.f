C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     P(1,2)*P(2,1) - P(-1,1)*P(-1,2)*Metric(1,2)
C     
      SUBROUTINE VVSS2_0(V1, V2, S3, S4, COUP,VERTEX)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 V2(*)
      COMPLEX*16 TMP2
      COMPLEX*16 S3(*)
      COMPLEX*16 TMP1
      REAL*8 P1(0:3)
      REAL*8 P3(0:3)
      COMPLEX*16 TMP0
      REAL*8 P2(0:3)
      COMPLEX*16 VERTEX
      COMPLEX*16 COUP,FFBOX1
      COMPLEX*16 V1(*)
      COMPLEX*16 TMP3
      COMPLEX*16 S4(*)
      include '../coupl.inc'
      P1(0) = DBLE(V1(1))
      P1(1) = DBLE(V1(2))
      P1(2) = DIMAG(V1(2))
      P1(3) = DIMAG(V1(1))
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = -DBLE(S3(1))
      P3(1) = -DBLE(S3(2))
      P3(2) = -DIMAG(S3(2))
      P3(3) = -DIMAG(S3(1))
      TMP1 = (V1(3)*P2(0)-V1(4)*P2(1)-V1(5)*P2(2)-V1(6)*P2(3))
      TMP0 = (V2(3)*P1(0)-V2(4)*P1(1)-V2(5)*P1(2)-V2(6)*P1(3))
      TMP3 = (P1(0)*P2(0)-P1(1)*P2(1)-P1(2)*P2(2)-P1(3)*P2(3))
      TMP2 = (V2(3)*V1(3)-V2(4)*V1(4)-V2(5)*V1(5)-V2(6)*V1(6))

      call GGHHformfactor(p1,p2,p3,ffbox1)

      VERTEX = COUP*S3(3)*S4(3)*(-CI*(TMP0*TMP1)+CI*(TMP2*TMP3))*
     & FFBOX1
      END

C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     P(1,2)*P(2,1) - P(-1,1)*P(-1,2)*Metric(1,2)
C     
      SUBROUTINE VVSS2_3_0(V1, V2, S3, S4, COUP1, COUP2,VERTEX)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 V2(*)
      COMPLEX*16 S3(*)
      REAL*8 P1(0:3)
      REAL*8 P2(0:3)
      COMPLEX*16 COUP1
      COMPLEX*16 COUP2
      COMPLEX*16 VERTEX
      COMPLEX*16 TMP
      COMPLEX*16 V1(*)
      COMPLEX*16 S4(*)
      CALL VVSS2_0(V1,V2,S3,S4,COUP1,VERTEX)
      CALL VVSS3_0(V1,V2,S3,S4,COUP2,TMP)
      VERTEX = VERTEX + TMP
      END


      subroutine GGHHformfactor(p1,p2,p3,fbox)
c****************************************************************************
c From the paper: Plehn, Spira & Zerwas, hep-ph/9603205
c scalar integrals (INISCAL subroutine) are directly copied
c from the 'hpair' program, see: http://people.web.psi.ch/spira/hpair/
c****************************************************************************
      implicit none

c Momenta of particles in event
c      include '../genps.inc'
   
      REAL*8 P1(0:3),P2(0:3),p3(0:3)
      double precision ff,sumdot,s,r,u,t,mq,mq2,ss,tt,uu,m1,m2
      double precision rho1,rho2,tauQ,tt1,uu1,tt2,uu2,epm
      double complex c03,d04,cq2,ca5
      double complex c0ab,c0ac,c0ad,c0bc,c0bd,c0cd
      double complex d0abc,d0bac,d0acb
      double complex fbox
      double precision Q1S,Q2S,q1,q2
      external sumdot,c03,d04
      INCLUDE '../coupl.inc'
      
      s=(p1(0)+p2(0))**2-(p1(1)+p2(1))**2-(p1(2)+p2(2))**2-(p1(3)+p2(3))**2
      t=(p1(0)-p3(0))**2-(p1(1)-p3(1))**2-(p1(2)-p3(2))**2-(p1(3)-p3(3))**2
      u=(p2(0)-p3(0))**2-(p2(1)-p3(1))**2-(p2(2)-p3(2))**2-(p2(3)-p3(3))**2
      Q1s=p3(0)**2-p3(1)**2-p3(2)**2-p3(3)**2
      Q2s=(p1(0)+p2(0)-p3(0))**2-(p1(1)+p2(1)-p3(1))**2-(p1(2)+p2(2)
     & -p3(2))**2-(p1(3)+p2(3)-p3(3))**2     
      Q1=dsqrt(q1S)
      Q2=dsqrt(q2S)
      mQ2=mdl_MT**2
      ss=s/mQ2
      tt=t/mQ2
      uu=u/mQ2
      rho1=Q1S/mQ2
      rho2=Q2S/mQ2
      tauQ=4d0/ss
      tt1=tt-rho1
      uu1=uu-rho1
      tt2=tt-rho2
      uu2=uu-rho2
      
      call INISCAL(mdl_MT,S,T,U,Q1,Q2,
     &     C0AB,C0AC,C0AD,C0BC,C0BD,C0CD,D0ABC,D0BAC,D0ACB)

      C0AB = C0AB/MQ2
      C0AC = C0AC/MQ2
      C0AD = C0AD/MQ2
      C0BC = C0BC/MQ2
      C0BD = C0BD/MQ2
      C0CD = C0CD/MQ2


      D0ABC = D0ABC/MQ2**2
      D0BAC = D0BAC/MQ2**2
      D0ACB = D0ACB/MQ2**2

      Fbox= 1d0/ss**2*(4d0*ss+8d0*ss*mq2*c0ab
     &     -2d0*ss*(ss+rho1+rho2-8d0)*mQ2**2*(d0abc+d0bac+d0acb)
     &   +(rho1+rho2-8d0)*mq2*(tt1*c0ac+uu1*c0bc+uu2*c0ad+tt2*c0bd-
     &     (tt*uu-rho1*rho2)*mq2*d0acb))
   

      return
      end

      SUBROUTINE INISCAL(AMQ,S,T,U,M1,M2,
     &     C0AB,C0AC,C0AD,C0BC,C0BD,C0CD,D0ABC,D0BAC,D0ACB)
C--INITIALIZATION OF SCALAR INTEGRALS
      IMPLICIT DOUBLE PRECISION (A-B,D-H,O-Z), COMPLEX*16 (C)
      DOUBLE PRECISION M1,M2
      COMPLEX*16 D04
      COMPLEX*16 C03
      COMPLEX*16 LI2
      COMPLEX*16 CI,CJ
      COMPLEX*16 R,R0,X,XP,XM
      COMPLEX*16 C0AB,C0AC,C0AD,C0BC,C0BD,C0CD,D0ABC,D0BAC,D0ACB
c      COMMON/SCALINT/C0AB,C0AC,C0AD,C0BC,C0BD,C0CD,D0ABC,D0BAC,D0ACB
      double precision eps,reps
      common/cuts/ EPS,REPS
       include '../coupl.inc'
c      COMMON/KNIEHL/IKNIEHL
      eps=1d-8
      reps=1d-15
      call BERNINI(18)
      
      DQ2=AMQ**2

      CQ2=DQ2*DCMPLX(1.D0,-REPS)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S)
      C0AB = 0.5D0*CDLOG((CA5+1.D0)/(CA5-1.D0))**2/S*DQ2

      S1=M1**2
      S2=M2**2
      S5=S
      CA1 = CDSQRT(1.D0-4.D0*CQ2/S1)
      CA2 = CDSQRT(1.D0-4.D0*CQ2/S2)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S5)
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      CB1=1.D0/XLAM*(S1-S2-S5)
      CB2=1.D0/XLAM*(S2-S1-S5)
      CB5=1.D0/XLAM*(S5-S1-S2)
      C0CD = -(
     .       LI2((1.D0+CB1)/(CA1+CB1)) - LI2((1.D0-CB1)/(CA1-CB1))
     .     - LI2((-1.D0+CB1)/(CA1+CB1)) + LI2((-1.D0-CB1)/(CA1-CB1))
     .     + LI2((1.D0+CB2)/(CA2+CB2)) - LI2((1.D0-CB2)/(CA2-CB2))
     .     - LI2((-1.D0+CB2)/(CA2+CB2)) + LI2((-1.D0-CB2)/(CA2-CB2))
     .     + LI2((1.D0+CB5)/(CA5+CB5)) - LI2((1.D0-CB5)/(CA5-CB5))
     .     - LI2((-1.D0+CB5)/(CA5+CB5)) + LI2((-1.D0-CB5)/(CA5-CB5))
     .       )/XLAM*DQ2
      S1=0.D0
      S2=M1**2
      S5=T
      CA2 = CDSQRT(1.D0-4.D0*CQ2/S2)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S5)
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      CB2=1.D0/XLAM*(S2-S1-S5)
      CB5=1.D0/XLAM*(S5-S1-S2)
      C0AC = -(
     .       LI2((1.D0+CB2)/(CA2+CB2)) - LI2((1.D0-CB2)/(CA2-CB2))
     .     - LI2((-1.D0+CB2)/(CA2+CB2)) + LI2((-1.D0-CB2)/(CA2-CB2))
     .     + LI2((1.D0+CB5)/(CA5+CB5)) - LI2((1.D0-CB5)/(CA5-CB5))
     .     - LI2((-1.D0+CB5)/(CA5+CB5)) + LI2((-1.D0-CB5)/(CA5-CB5))
     .       )/XLAM*DQ2
      S1=0.D0
      S2=M2**2
      S5=U
      CA2 = CDSQRT(1.D0-4.D0*CQ2/S2)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S5)
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      CB2=1.D0/XLAM*(S2-S1-S5)
      CB5=1.D0/XLAM*(S5-S1-S2)
      C0AD = -(
     .       LI2((1.D0+CB2)/(CA2+CB2)) - LI2((1.D0-CB2)/(CA2-CB2))
     .     - LI2((-1.D0+CB2)/(CA2+CB2)) + LI2((-1.D0-CB2)/(CA2-CB2))
     .     + LI2((1.D0+CB5)/(CA5+CB5)) - LI2((1.D0-CB5)/(CA5-CB5))
     .     - LI2((-1.D0+CB5)/(CA5+CB5)) + LI2((-1.D0-CB5)/(CA5-CB5))
     .       )/XLAM*DQ2
      S1=0.D0
      S2=M1**2
      S5=U
      CA2 = CDSQRT(1.D0-4.D0*CQ2/S2)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S5)
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      CB2=1.D0/XLAM*(S2-S1-S5)
      CB5=1.D0/XLAM*(S5-S1-S2)
      C0BC = -(
     .       LI2((1.D0+CB2)/(CA2+CB2)) - LI2((1.D0-CB2)/(CA2-CB2))
     .     - LI2((-1.D0+CB2)/(CA2+CB2)) + LI2((-1.D0-CB2)/(CA2-CB2))
     .     + LI2((1.D0+CB5)/(CA5+CB5)) - LI2((1.D0-CB5)/(CA5-CB5))
     .     - LI2((-1.D0+CB5)/(CA5+CB5)) + LI2((-1.D0-CB5)/(CA5-CB5))
     .       )/XLAM*DQ2
      S1=0.D0
      S2=M2**2
      S5=T
      CA2 = CDSQRT(1.D0-4.D0*CQ2/S2)
      CA5 = CDSQRT(1.D0-4.D0*CQ2/S5)
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      CB2=1.D0/XLAM*(S2-S1-S5)
      CB5=1.D0/XLAM*(S5-S1-S2)
      C0BD = -(
     .       LI2((1.D0+CB2)/(CA2+CB2)) - LI2((1.D0-CB2)/(CA2-CB2))
     .     - LI2((-1.D0+CB2)/(CA2+CB2)) + LI2((-1.D0-CB2)/(CA2-CB2))
     .     + LI2((1.D0+CB5)/(CA5+CB5)) - LI2((1.D0-CB5)/(CA5-CB5))
     .     - LI2((-1.D0+CB5)/(CA5+CB5)) + LI2((-1.D0-CB5)/(CA5-CB5))
     .       )/XLAM*DQ2
      Z=M1**2
      H=M2**2
      S1=S
      S2=Z
      S5=H
      XLAM=DSQRT(S1**2+S2**2+S5**2-2.D0*(S1*S2+S1*S5+S2*S5))
      XN=T*U-Z*H
      R0=CDSQRT(1.D0+4.D0*S*CQ2/XN)
      R=(1.D0+R0)/2.D0
      RR=DREAL(R0)
      D0ACB = 2.D0/XN/RR*(CJ(Z,AMQ**2,R)+CJ(H,AMQ**2,R)
     .                   -CJ(T,AMQ**2,R)-CJ(U,AMQ**2,R))*DQ2**2
      X=CDSQRT(1.D0+4.D0*XN/S/U**2*CQ2)
      X0=DSQRT(1.D0+4.D0*XN/S/U**2*DQ2)
      XP=-U/(T-U+XLAM)*(1.D0+X)
      XM=-U/(T-U+XLAM)*(1.D0-X)
      ALP=(S+Z-H+XLAM)/2.D0/S
      BET=(U-T+XLAM)/2.D0/S
      ZERO=0.D-15
      D0ABC = 1.D0/S/U/X0*(CI(S,ZERO,XP)-CI(T-H,S,(1.D0-XM)/(1.D0-ALP))
     .      -CI(Z-U,ZERO,XP/ALP)+CI(Z-U,ZERO,XP/BET)
     .      -CI(T-H,S,XP/BET)
     .      -CJ(S,AMQ**2,XP)+CJ(H,AMQ**2,(1.D0-XM)/(1.D0-ALP))
     .      +CJ(Z,AMQ**2,XP/ALP)-CJ(U,AMQ**2,XP/BET)
     .      +CJ(H,AMQ**2,XP/BET)
     .      -(CI(S,ZERO,XM)-CI(T-H,S,(1.D0-XP)/(1.D0-ALP))
     .      -CI(Z-U,ZERO,XM/ALP)+CI(Z-U,ZERO,XM/BET)
     .      -CI(T-H,S,XM/BET)
     .      -CJ(S,AMQ**2,XM)+CJ(H,AMQ**2,(1.D0-XP)/(1.D0-ALP))
     .      +CJ(Z,AMQ**2,XM/ALP)-CJ(U,AMQ**2,XM/BET)
     .      +CJ(H,AMQ**2,XM/BET)))*DQ2**2
      X=CDSQRT(1.D0+4.D0*XN/S/T**2*CQ2)
      X0=DSQRT(1.D0+4.D0*XN/S/T**2*DQ2)
      XP=-T/(U-T+XLAM)*(1.D0+X)
      XM=-T/(U-T+XLAM)*(1.D0-X)
      ALP=(S+Z-H+XLAM)/2.D0/S
      BET=(T-U+XLAM)/2.D0/S
      D0BAC = 1.D0/S/T/X0*(CI(S,ZERO,XP)-CI(U-H,S,(1.D0-XM)/(1.D0-ALP))
     .      -CI(Z-T,ZERO,XP/ALP)+CI(Z-T,ZERO,XP/BET)
     .      -CI(U-H,S,XP/BET)
     .      -CJ(S,AMQ**2,XP)+CJ(H,AMQ**2,(1.D0-XM)/(1.D0-ALP))
     .      +CJ(Z,AMQ**2,XP/ALP)-CJ(T,AMQ**2,XP/BET)
     .      +CJ(H,AMQ**2,XP/BET)
     .      -(CI(S,ZERO,XM)-CI(U-H,S,(1.D0-XP)/(1.D0-ALP))
     .      -CI(Z-T,ZERO,XM/ALP)+CI(Z-T,ZERO,XM/BET)
     .      -CI(U-H,S,XM/BET)
     .      -CJ(S,AMQ**2,XM)+CJ(H,AMQ**2,(1.D0-XP)/(1.D0-ALP))
     .      +CJ(Z,AMQ**2,XM/ALP)-CJ(T,AMQ**2,XM/BET)
     .      +CJ(H,AMQ**2,XM/BET)))*DQ2**2

      return
      end


      DOUBLE COMPLEX FUNCTION CI(A,B,C)
C--SCALAR INTEGRAL
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMPLEX*16 C,CC,LI2
C     X=DREAL(C)
C     CC=DCMPLX(X,0.D0)
C     IF(X.LT.0.D0.OR.X.GT.1.D0)C=CC
      CC=C
      CI = CDLOG(A*CC+B)*CDLOG(1.D0-1.D0/C)
     .    -LI2(1.D0-(A+B)/(A*C+B))+LI2(1.D0-B/(A*C+B))
      RETURN
      END
 
      DOUBLE COMPLEX FUNCTION CJ(A,B,C)
C--SCALAR INTEGRAL
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMPLEX*16 C,CB,AP,AM,LI2
      COMMON/CUTS/EPS,REPS
      CB = B*DCMPLX(1.D0,-REPS)
      C=DCMPLX(DREAL(C),DIMAG(C)/1.D3)
      CC = C
C     CC = DREAL(C)
C     IF(CC.LT.0.D0.OR.CC.GT.1.D0)C=DCMPLX(CC,0.D0)
      AP = 0.5D0*(1.D0+CDSQRT(1.D0-4.D0*CB/A))
      AM = 0.5D0*(1.D0-CDSQRT(1.D0-4.D0*CB/A))
      CJ = CDLOG(A*CC*(1.D0-CC)-CB)*CDLOG(1.D0-1.D0/C)
     .    -LI2((CC-1.D0)/(CC-AP))+LI2(CC/(CC-AP))
     .    -LI2((CC-1.D0)/(CC-AM))+LI2(CC/(CC-AM))
      RETURN
      END
 
      DOUBLE COMPLEX FUNCTION LI2(X)
C--COMPLEX DILOGARITHM (SPENCE-FUNCTION)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMPLEX*16 X,Y,CLI2
      COMMON/CONST/ZETA2
      ZERO=1.D-40
      XR=DREAL(X)
      XI=DIMAG(X)
      R2=XR*XR+XI*XI
      IF(R2.LE.ZERO)THEN
        LI2=X
        RETURN
      ENDIF
      RR=XR/R2
      IF(R2.EQ.1.D0.AND.XI.EQ.0.D0)THEN
        IF(XR.EQ.1.D0)THEN
          LI2=DCMPLX(ZETA2)
        ELSE
          LI2=-DCMPLX(ZETA2/2.D0)
        ENDIF
        RETURN
      ELSEIF(R2.GT.1.D0.AND.RR.GT.0.5D0)THEN
        Y=(X-1.D0)/X
        LI2=CLI2(Y)+ZETA2-CDLOG(X)*CDLOG(1.D0-X)+0.5D0*CDLOG(X)**2
        RETURN
      ELSEIF(R2.GT.1.D0.AND.RR.LE.0.5D0)THEN
        Y=1.D0/X
        LI2=-CLI2(Y)-ZETA2-0.5D0*CDLOG(-X)**2
        RETURN
      ELSEIF(R2.LE.1.D0.AND.XR.GT.0.5D0)THEN
        Y=1.D0-X
        LI2=-CLI2(Y)+ZETA2-CDLOG(X)*CDLOG(1.D0-X)
       RETURN
      ELSEIF(R2.LE.1.D0.AND.XR.LE.0.5D0)THEN
        Y=X
        LI2=CLI2(Y)
        RETURN
      ENDIF
      END
 
      DOUBLE COMPLEX FUNCTION CLI2(X)
C--TAYLOR-EXPANSION FOR COMPLEX DILOGARITHM (SPENCE-FUNCTION)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMPLEX*16 X,Z
      COMMON/BERNOULLI/B(18)
      COMMON/CONST/ZETA2
      COMMON/POLY/NBER
      N=NBER-1
      Z=-CDLOG(1.D0-X)
      CLI2=B(NBER)
      DO 111 I=N,1,-1
        CLI2=Z*CLI2+B(I)
111   CONTINUE
      CLI2=Z**2*CLI2+Z
      RETURN
      END

      SUBROUTINE BERNINI(N)
C--INITIALIZATION OF COEFFICIENTS FOR POLYLOGARITHMS
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/BERNOULLI/B(18)
      COMMON/CONST/ZETA2
      COMMON/POLY/NBER
 
      NBER=N
      PI=4.D0*DATAN(1.D0)
 
      B(1)=-1.D0/2.D0
      B(2)=1.D0/6.D0
      B(3)=0.D0
      B(4)=-1.D0/30.D0
      B(5)=0.D0
      B(6)=1.D0/42.D0
      B(7)=0.D0
      B(8)=-1.D0/30.D0
      B(9)=0.D0
      B(10)=5.D0/66.D0
      B(11)=0.D0
      B(12)=-691.D0/2730.D0
      B(13)=0.D0
      B(14)=7.D0/6.D0
      B(15)=0.D0
      B(16)=-3617.D0/510.D0
      B(17)=0.D0
      B(18)=43867.D0/798.D0
      ZETA2=PI**2/6.D0
      DO 995 I=1,18
        B(I)=B(I)/FAC(I+1)
995   CONTINUE
      RETURN
      END

      DOUBLE PRECISION FUNCTION FAC(N)
C--MATHEMATICAL FACULTY
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      FAC=1.D0
      IF(N.EQ.0) RETURN
      DO 986 I=1,N
        FAC=FAC*DFLOAT(I)
986   CONTINUE
      RETURN
      END

