The script 

athenaHLT-select-PEB-stream.py

allows to select from a bystream file events which belong to a given stream and to write them to a bytestream output file which
obeys the same conventions as the files produced in P1.

athenaHLT-select-PEB-stream.py -h

gives a list of options which can be used:

./athenaHLT-select-PEB-stream.py -h
global "./athenaHLT-select-PEB-stream.py" options: -[DFPadhlnpsv] | --[dump-options,help,lumi-block,max-events,option-file,output-dir,progress-bar,project-tag,start-event,stream-name,verbosity] [arguments]+

 [Global options]

 --dump-options|-D    dumps the current default options to stdout
 --help|-h            prints this usage message
 --option-file|-F     loads options from an option file (defaults to <empty>)


 [Run mode options]

 --max-events|-n      Maximum number of events in the output file. 0 means, al
                       l useful events from the input. (defaults to 0)
 --output-dir|-d      Directory in which the output file should be written (de
                       faults to .)
 --progress-bar|-P    Show progress bar when running interactively
 --start-event|-a     Number of events which should be skippped from the begin
                        (defaults to 0)
 --verbosity|-v       Log verbosity (defaults to 20)


 [Stream Tag options]

 --lumi-block|-l     Lumiblock number used for the output file. Use 0 if multi
                      ple LB in file. (defaults to 0)
 --project-tag|-p    Project tag which should be used for the output file (def
                      aults to data18_13Tev)
 --stream-name|-s    Name of stream which should be written out (defaults to D
                      ataScouting_05_Jets)

While the script can be used with any stream name, the defaults are set for the DataScouting stream "DataScouting_05_Jets".

Typical workflow for developers:
--------------------------------
 
1) Develop new slection code for a new stream and integrate it with the menu

2) run athenaHLT with the new code and write a bystream outputfile 

> athenaHLT <otions> -f <input-file> -o <athenaHLT-output-file> <job-options-file>

The <athenaHLT-output-file> will contain all events which have triggered, including also DataScouting events.

3) Generate a P1 stream file with "athenaHLT-select-PEB-stream.py" from the athenaHLT output file

> athenaHLT-select-PEB-stream.py -s <my-prefered-stream> <athenaHLT-output-file>

In the case of Jet Datascouting all defaults are set already and it is sufficient to run

> athenaHLT-select-PEB-stream.py <athenaHLT-output-file>

There will be an output file produced of the form

<project tag>.<run number>.<stream_type>_<stream_name>.merge.RAW._<LB number>._<production step>._<file sequence number>.data

example:

data18_13Tev.00349335.calibration_DataScouting_05_Jets.merge.RAW._lb0000._athenaHLT._0001.data

All input events have to be for the same run number, but can have different lumi block numbers (LB=0 is used for output file).

4) run over the produced stream file the standard T0 reco programs


Example of producing a Jet DataScouting stream file from an enhanced bias file:
-------------------------------------------------------------------------------

> athenaHLT -M -b --db-smkey=2695 --db-hltpskey='[(317,15172)]' -f '["data18_13TeV.00349335.physics_EnhancedBias.merge.RAW._lb0163._SFO-1._0001.1"]' -o "my-athenaHLT-BS-output"
> athenaHLT-select-PEB-stream.py my-athenaHLT-BS-output._0001.data
> Reco with input file data18_13Tev.00349335.calibration_DataScouting_05_Jets.merge.RAW._lb0000._athenaHLT._0001.data

Some Remarks:
-------------

1) athenaHLT-select-PEB-stream.py allows to read multiple input files

> athenaHLT-select-PEB-stream.py <file1> <file2> ... <fileN>

All events have to be however from the same run. Events from different runs are skipped and an ERROR message is printed.

2) the option "--lumi-block|-l " should only be used if all events are from the same LB, otherwise use 0 (default).

3) the option "--project-tag|-p" is set per default to 2018 data (data18_13Tev).

4) For repeated running with the same options a standard option file can be generated:

athenaHLT-select-PEB-stream.py -D <various options> <input files>  >  <my-opt-file.py>

and the run can be repeated with

athenaHLT-select-PEB-stream.py -F <my-opt-file.py>

The file <my-opt-file.py> can be also edited and modified with Python commands.
