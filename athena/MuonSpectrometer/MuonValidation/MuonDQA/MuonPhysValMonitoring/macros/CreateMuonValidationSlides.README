Dan Mori <dmori at cern.ch>

This is how to use the macros in MuonSpectrometer/MuonValidation/MuonDQA/MuonPhysValMonitoring/macros to create Beamer LaTeX slides with muon validation histograms. This assumes that the validation will be done using a test sample and reference sample for comparison and that you already have the ROOT files containing the physval plots for each sample.

eg. REFFILE=19.0.3.3.run1.root
eg. TESTFILE=19.1.1.1.run1.root

Since not all histograms can be created in the validation code, a few macros need to be run first to create them.

----------------------------------
Efficiency and Reco Fraction Plots
----------------------------------
Run the following for each file to add efficiency and reco fraction plots:

python CreateEffAndRecoFracPlots.py $PHYSVAL_FILE

--------------------------
Resolution and Scale Plots
--------------------------
If DoBinnedResolutionPlots is enabled in PhysValMuon_jobOptions.py, run the following for each file to add resolution and pt scale plots:

python CreateResolutionPlots.py $PHYSVAL_FILE

-----------------------------
Create Muon Validation Slides
-----------------------------
CreateMuonValidation Slides uses Beamer (LaTeX) to create slides for a presentation using selected plots from the test and reference physval files. All plots will also contain a ratio plot of the test and reference histograms.

** This macro requires Python 2.7 or greater. **
Athena version 19 or greater will setup Python 2.7 automatically.

Configuration
-------------
First, open up the config.py file and edit the info as required. From here, you can edit the title page info, such as title, date, author, as well as input the sample datasets, Athena versions used, description of the samples, summary slide items, and which plots go on which page. Comments can be added to each slide as well.

e.g.
title = 'Muon Validation of 19.1.1.1 compared to 19.0.3.3'
subtitle = 'No Pileup, Run 1 Configuration'
date = r'\today'

Running the macro
-----------------
python CreateMuonValidationSlides.py -r $REFFILE -t $TESTFILE -d OUTPUT_DIRECTORY -c

-t FILE: test file
-r FILE: reference file
-d DIR: directory where the LaTeX files, plots and final pdf will be put. This is by default set to './beamer'
-c: compile LaTeX file
-n: no title page for the slides
