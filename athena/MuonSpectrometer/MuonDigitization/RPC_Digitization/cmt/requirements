package RPC_Digitization

author Andrea Di Simone <andrea.di.simone@cern.ch>

public
use  AtlasPolicy                AtlasPolicy-*                   
use  AthenaBaseComps            AthenaBaseComps-*               Control
use  GaudiInterface             GaudiInterface-*                External
use  HitManagement              HitManagement-*                 Simulation
use  MuonDigToolInterfaces      MuonDigToolInterfaces-*         MuonSpectrometer/MuonDigitization
use  MuonSimData                MuonSimData-*                   MuonSpectrometer
use  MuonSimEvent               MuonSimEvent-*                  MuonSpectrometer
use  PileUpTools                PileUpTools-*                   Control
use  xAODEventInfo       	xAODEventInfo-*    		Event/xAOD        


private
use  AtlasCLHEP_RandomGenerators AtlasCLHEP_RandomGenerators-*  Simulation/Tools
use  AtlasAIDA                  AtlasAIDA-*                     External
use  AtlasHepMC                 AtlasHepMC-*                    External
use  GeneratorObjects           GeneratorObjects-*              Generators
use  MuonDigitContainer         MuonDigitContainer-*            MuonSpectrometer
use  AthenaKernel               AthenaKernel-*                  Control                 
use  MuonIdHelpers              MuonIdHelpers-*                 MuonSpectrometer
use  PathResolver               PathResolver-*                  Tools
use  EventInfo                  EventInfo-*                     Event
use  EventInfoMgt               EventInfoMgt-*                  Event
use  MuonCondInterface          MuonCondInterface-*             MuonSpectrometer/MuonConditions/MuonCondGeneral
use  MuonReadoutGeometry        MuonReadoutGeometry-*           MuonSpectrometer/MuonDetDescr
use  AtlasCLHEP                 AtlasCLHEP-*                    External
use RDBAccessSvc     RDBAccessSvc-*      Database/AthenaPOOL 
use GeometryDBSvc GeometryDBSvc-*    DetectorDescription 
use GeoModelInterfaces  GeoModelInterfaces-*    DetectorDescription/GeoModel 
 
public
library RPC_Digitization *.cxx components/*.cxx

#apply_pattern dual_use_library files="*.cxx"

#apply_pattern installed_library
apply_pattern component_library
apply_pattern declare_joboptions files="RPC_Digitization_jobOptions.txt *.py"
apply_pattern declare_runtime extras="G4RPC_Digitizer.txt PermanentDeadPanels.txt PermanentGoodPanels.txt"
apply_pattern declare_python_modules files="*.py" 

#private
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"

