# $Id: $
##########################################################################
#
#   File:         Makefile
#
#   Description:  builds the new egamma project including
#                 libraries...
#
#                  libeventstore.a   
#                  libtrig.a
#                  
#                 and the executable
#
#   Created:      Mon Apr 18 23:33:55 BST 2005
#   Modified:     
#                   
#                   
######################################################################### 


ATLAS_ARCH = $(CMTCONFIG)
ARCH_TYPE = $(ATLAS_ARCH)


USEATHENALIBS = 1 	
ATLASBASE = $(TestArea)/InstallArea
TID   = $(ATLASBASE)/include/TrigInDetAnalysis
TIDU  = $(ATLASBASE)/include/TrigInDetAnalysisUtils
TIDE  = $(ATLASBASE)/include/TrigInDetAnalysisExample
TIDUB = ../..

CXXFLAGS += -I$(TID) -I$(TIDU) -I$(TIDE) 	


SRCDIR = .
LIBDIR = ../lib/$(ARCH_TYPE)
OBJDIR = ../obj/$(ARCH_TYPE)
EXEDIR = ../exe/$(ARCH_TYPE)


TIDLIB = -L$(ATLASBASE)/$(ATLAS_ARCH)/lib -lTrigInDetAnalysis -lTrigInDetAnalysisExample 



# BOOSTDIR = /afs/cern.ch/sw/lcg/external/Boost/1.44.0_python2.6/$(ATLAS_ARCH)
# BOOSTINC = -I$(BOOSTDIR)/include/boost-1_44
# BOOSTLIB = -L$(BOOSTDIR)/lib -lboost_regex-gcc43-mt-1_44

# Root variables
ROOTCFLAGS   = $(shell root-config --cflags)
ROOTLIBS     = $(shell root-config --libs)
ROOTGLIBS    = $(shell root-config --glibs)

CLHEPLIB    = $(shell clhep-config --libs)
CLHEPCFLAGS = $(shell clhep-config --include)

# BASEDIR   = $(shell ./cwd.sh -h)


CXX = g++
CC  = gcc

# CSOURCES := $(wildcard *.cpp)
# DEPENDENCIES = $(patsubst %.cpp, %.d, $(CSOURCES))


CXXFLAGS += -g -D_STANDALONE 
CFLAGS   += -g -D_STANDALONE 
# -D_UPGRADE  -D__OLD


CXXFLAGS += -I. $(ROOTCFLAGS) -Wno-deprecated -I$(TID) -I$(TIDU) -I$(TIDE) -Wall
CXXFLAGS += -I$(TIDUB)/Resplot/src -I$(TIDUB)/Readcards/src


# to get more output for debug compile code with: 
# make DEBUG=COREDBG : for the event building classes
# make DEBUG=TRIGDBG : for the signature classes
ifdef DEBUG
CXXFLAGS += -D$(DEBUG) -g
endif

GLIBS += $(ROOTGLIBS) $(ROOTLIBS)

LDFLAGS = $(shell root-config --ldflags)

AR      = ar
ARFLAGS = -r

RANLIB   = ranlib
RANFLAGS = 


RM  = rm
TAR = tar



WOBJECTS = $(OBJDIR)/wmain.o 
SOBJECTS = $(OBJDIR)/skim.o 
ROBJECTS = $(OBJDIR)/rmain.o  $(OBJDIR)/ConfAnalysis.o  $(OBJDIR)/PurityAnalysis.o 


.SUFFIXES : .cc .cxx .c


LIBS += $(TIDLIB)

RLIBS += -L$(TIDUB)/Resplot/lib/$(ARCH_TYPE) -lResplot -L$(TIDUB)/Readcards/lib/$(ARCH_TYPE) -lReadcards 
RLIBS += -L$(TIDUB)/Resplot/lib/$(ARCH_TYPE) -lResplot -L$(TIDUB)/Readcards/lib/$(ARCH_TYPE) -lReadcards 


# LIBS += $(BOOSTLIB)

# build executable: link

all : dirs resplot readcards rdict wdict reader

rdict : dirs resplot readcards $(EXEDIR)/rdict 

$(EXEDIR)/rdict :  $(ROBJECTS)
	$(CXX) $(LDFLAGS) -o $@ $(ROBJECTS) $(LIBS) $(RLIBS) $(GLIBS)

wdict : dirs $(EXEDIR)/wdict 
$(EXEDIR)/wdict :  $(WOBJECTS)
	$(CXX) $(LDFLAGS) -o $@ $(WOBJECTS) $(LIBS) $(GLIBS)

reader : dirs $(EXEDIR)/reader 
$(EXEDIR)/reader : $(OBJDIR)/reader.o 
	$(CXX) $(LDFLAGS) -o $@ $(OBJDIR)/reader.o $(LIBS) $(GLIBS)

skim : dirs $(EXEDIR)/skim 
$(EXEDIR)/skim : $(OBJDIR)/skim.o  
	$(CXX) $(LDFLAGS) -o $@ $(OBJDIR)/skim.o $(LIBS) $(GLIBS)


# compile
# $(OBJDIR)/%.o : $(SRCDIR)/%.cxx 
$(OBJDIR)/%.o : %.cxx 
	$(CXX) $(CXXFLAGS) -c $<  -o $@

# $(OBJDIR)/%.o : $(SRCDIR)/%.c 
$(OBJDIR)/%.o : %.c 
	$(CC) $(CFLAGS) -c $<  -o $@


%/.d:
	mkdir -p $(@D)
	touch $@


$(OBJECTS) : $(HEADERS)

.PHONY : 




clean :
	$(RM) -rf $(OBJDIR)/*.o  $(LIBDIR)/lib*.{a,so}
	$(RM) -f $(OBJDIR)/*.o  $(LIBDIR)/lib*.{a,so} $(SRCDIR)/*Dict.{h,cxx}
	make -C $(TIDUB)/Resplot/src clean
	make -C $(TIDUB)/Readcards/src clean


libclean :
	$(RM) -f $(LIBDIR)/lib*.{a,so} 


resplot: 
	make -C $(TIDUB)/Resplot/src install

readcards: 
	make -C $(TIDUB)/Readcards/src install

archive : 
	cd ../.. ; tar -czf $(BASEDIR).tgz $(BASEDIR)/src $(BASEDIR)/config 

install : all 

dirs :  $(LIBDIR)/.d $(OBJDIR)/.d $(EXEDIR)/.d


