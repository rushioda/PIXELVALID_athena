package TrigConfigSvc
author Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
manager Joerg.Stelzer@cern.ch

use  AtlasPolicy                AtlasPolicy-*

use  AthenaBaseComps            AthenaBaseComps-*               Control
use  StoreGate                  StoreGate-*                     Control
use  GaudiInterface             GaudiInterface-*                External
use  AthenaKernel               AthenaKernel-*                  Control
use  TrigSteeringEvent          TrigSteeringEvent-*             Trigger/TrigEvent
use  TrigConfL1Data             TrigConfL1Data-*                Trigger/TrigConfiguration
use  TrigConfHLTData            TrigConfHLTData-*               Trigger/TrigConfiguration
use  TrigConfInterfaces         TrigConfInterfaces-*            Trigger/TrigConfiguration

private
use  AthenaKernel               AthenaKernel-*                  Control
use  IOVDbDataModel             IOVDbDataModel-*                Database
use  AthenaPoolUtilities        AthenaPoolUtilities-*           Database/AthenaPOOL
use  AtlasBoost                 AtlasBoost-*                    External
use  AtlasCOOL                  AtlasCOOL-*                     External
use  AtlasROOT                  AtlasROOT-*                     External
use  EventInfo                  EventInfo-*                     Event
use  PathResolver               PathResolver-*                  Tools
use  TrigConfJobOptData         TrigConfJobOptData-*            Trigger/TrigConfiguration
use  TrigConfStorage            TrigConfStorage-*               Trigger/TrigConfiguration
use  TrigConfBase               TrigConfBase-*                  Trigger/TrigConfiguration
use  TrigMonitorBase            TrigMonitorBase-*               Trigger/TrigMonitoring
use  L1TopoConfig               L1TopoConfig-*                  Trigger/TrigT1/L1Topo
end_private

## temporarily, for getting the executable script: checkTrigger.py 
use AtlasPyROOT	AtlasPyROOT-*	External -no_auto_imports
apply_pattern declare_scripts files="checkTrigger.py checkTriggerConfig.py -s=$(PyUtils_root)/bin"
# some handy aliases
alias checkTrigger     checkTrigger.py


apply_pattern dual_use_library files=*.cxx

apply_pattern declare_joboptions files="*.py"

apply_pattern declare_python_modules files="*.py"

apply_pattern declare_xmls
apply_pattern install_xmls

private
## reflection has been moved to TrigConfigOffline
#use     AtlasReflex               AtlasReflex-*          External -no_auto_import
#apply_pattern lcgdict dict=TrigConfigSvc selectionfile=selection.xml \
#        headerfiles="../TrigConfigSvc/TrigConfigSvcDict.h"

#application TrigConfigARATest "test/TrigConfigARATest.cxx" 	 
#macro_append TrigConfigARATest_dependencies TrigConfigSvcLib
#apply_pattern application_alias TrigConfigARATest

#application MetaDataChainLoad "test/MetaDataChainLoad.cxx"
#macro_append MetaDataChainLoad_dependencies TrigConfigSvcLib

#macro_append ROOT_linkopts " -lPyROOT"

end_private
