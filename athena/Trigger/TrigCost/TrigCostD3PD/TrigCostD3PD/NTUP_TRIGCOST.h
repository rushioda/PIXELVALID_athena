// Dear emacs, this is -*- c++ -*-

/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

// -------------------------------------------------------------
//             Code produced by D3PDMakerReader
//
//  author: Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
// -------------------------------------------------------------
#ifndef D3PDREADER_NTUP_TRIGCOST_H
#define D3PDREADER_NTUP_TRIGCOST_H

// Local include(s):
#include "D3PDObjectBase.h"
#include "TrigCostD3PDObject.h"
#include "TrigDBKeysD3PDObject.h"

namespace D3PDReader {

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = lxplus0164.cern.ch
    *  OS   = Linux / 2.6.32-431.11.2.el6.x86_64
    *  user = tamartin
    *  time = Fri Jun 27 16:52:19 2014
    */
   class NTUP_TRIGCOST : public D3PDObjectBase {

   public:
      /// Default constructor, to be used when reading a D3PD
      NTUP_TRIGCOST();
      /// Constructor for only writing data
      NTUP_TRIGCOST( Bool_t onlyForWriting );

      /// Get the currently configured prefix value
      virtual const char* GetPrefix() const;
      /// Set the prefix for the variables
      virtual void SetPrefix( const char* prefix );

      /// Connect the object to an input TTree
      virtual void ReadFrom( ::TTree* tree );
      /// Connect the object to an output TTree
      virtual void WriteTo( ::TTree* tree );

      /// Turn (selected) branches either on or off
      virtual void SetActive( ::Bool_t active = kTRUE,
                              const ::TString& pattern = ".*" );
      /// Read in all the variables that we need to write out as well
      virtual void ReadAllActive();

      /// Get the D3PD reading statistics
      //virtual D3PDReadStats GetStatistics() const;

      /// Switch the reader object to a new event
      void GetEntry( ::Long64_t entry );

      //
      // All the components of the D3PD:
      //
      TrigCostD3PDObject TrigCostHLT;
      TrigDBKeysD3PDObject trig_DB;

   private:
      Long64_t fEntry; ///< Variable storing the current entry number
      Bool_t fFromInput; ///< Flag specifying if object is used for D3PD reading

      ClassDef( NTUP_TRIGCOST, 0 )

   }; // class NTUP_TRIGCOST

} // namespace D3PDReader

#endif // D3PDREADER_NTUP_TRIGCOST_H
