/*
  Copyright (C) 2002-2018 CERN for the benefit of the ATLAS collaboration
*/
#include "L1TopoInterfaces/AlgFactory.h"
#include "L1TopoInterfaces/ConfigurableAlg.h"

#include <fstream>

using namespace std;
using namespace TCS;

void generateCode(ofstream & f, const ConfigurableAlg* ca) {

   string cn(ca->className());

   const ParameterSpace & ps = ca->parameters();

   f << "class " << cn << "(" << (ca->isSortingAlg()?"SortingAlgo":(ca->isDecisionAlg()?"DecisionAlgo":"object")) << "):" << endl;
   f << "    _availableVars = [";
   bool first = true;
   for(const Parameter& p : ps) {
      if(first) { first=false; } else { f << ", "; }
      f << "'" << p.name() << "'";
   }
   f << "]" << endl;
   f << "    def __init__(self, name, inputs, outputs, algoId):" << endl;
   f << "        super(" << cn << ", self).__init__(classtype='" << cn << "', name=name, inputs=inputs, outputs=outputs, algoId=algoId)" << endl;
   f << endl << endl;

}

int main(int argc, char** argv) {

   string pyname = "L1TopoAlgConfig.py";
   if(argc==2)
      pyname = argv[1];


   AlgFactory & algFactory = AlgFactory::instance();

   ofstream f(pyname, ios_base::out | ios_base::trunc);
   f << "'''This file is autogenerated by TrigConfL1TopoGenPyAlg'''" << endl << endl;
   f << "from TriggerMenu.l1topo.TopoAlgos import SortingAlgo, DecisionAlgo" << endl << endl;
   for(const string & cn : algFactory.getAllClassNames() ) {
      ConfigurableAlg * ca = algFactory.create(cn, cn+"_Instance");
      generateCode(f, ca);
   }
   
   f.close();

   return 0;
}
