package TrigT1ResultByteStream

use AtlasPolicy      AtlasPolicy-*
use GaudiInterface   GaudiInterface-*   External
use AthenaBaseComps  AthenaBaseComps-*  Control
use StoreGate        StoreGate-*        Control
use SGTools          SGTools-*          Control
use ByteStreamData   ByteStreamData-*   Event
use ByteStreamCnvSvcBase ByteStreamCnvSvcBase-* Event 
use ByteStreamCnvSvc ByteStreamCnvSvc-* Event 
use DataCollection   DataCollection-*   External
use TrigT1Result     TrigT1Result-*     Trigger/TrigT1
use L1TopoRDO	     L1TopoRDO-*	Trigger/TrigT1/L1Topo
#use TrigConfigSvc    TrigConfigSvc-*    Trigger/TrigConfiguration
use TrigConfInterfaces    TrigConfInterfaces-*    Trigger/TrigConfiguration
use TrigConfL1Data   TrigConfL1Data-*   Trigger/TrigConfiguration
use TrigT1Interfaces TrigT1Interfaces-* Trigger/TrigT1

# eformat CTP data specification
use CTPfragment      v*

private

# use L1CommonCore     L1CommonCore-*     Trigger/TrigT1

author Hong Ma <hma@bnl.gov> 
author Tadashi Maeno <Tadashi.Maeno@cern.ch>
author Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
author David Berge <David.Berge@cern.ch>
author Christian Ohm <Christian.Ohm@cern.ch>

#
# create the reguTrigT1Result dual_use_lib for the Container converters 
#
apply_pattern dual_use_library files="*.cxx"
apply_pattern declare_joboptions files="*.py"

# The following MacOSX-specific customization allows this package to build on MacOSX,
# but it's not functional because of the missing eformat libCTPfragment.so library

# eformat CTP data specification
macro_append TrigT1ResultByteStreamLib_shlibflags " -lCTPfragment " Darwin ""

private
macro ttr_allow_undefined "_noAllowUndefined" Darwin "allowUndefined"
apply_tag $(ttr_allow_undefined)
end_private

