package TrigSteeringEvent

use AtlasPolicy         AtlasPolicy-*
use CLIDSvc             CLIDSvc-*                Control
use GaudiInterface      GaudiInterface-*         External
use SGTools             SGTools-*                Control
use TrigConfHLTData     TrigConfHLTData-*        Trigger/TrigConfiguration

use_ifndef pplist="XAOD_ANALYSIS" pkg="External/DataCollection"
# use_ifndef pplist="XAOD_ANALYSIS" pkg="DetectorDescription/RoiDescriptor"
use RoiDescriptor       RoiDescriptor-*          DetectorDescription

use xAODCore		xAODCore-*		 Event/xAOD
use AsgTools		AsgTools-*		 Control/AthToolSupport
use AthContainers	AthContainers-*		 Control

library TrigSteeringEvent ../Root/*.cxx *.cxx
apply_pattern installed_library
#apply_pattern dual_use_library files="../Root/*.cxx ../src/*.cxx"

macro_prepend TrigSteeringEvent_linkopts " $(notAsNeeded_linkopt)"
macro_append  TrigSteeringEvent_linkopts " $(asNeeded_linkopt)"

use AthenaKernel        AthenaKernel-*           Control

private
#use xAODTrigger         xAODTrigger-*            Event/xAOD 
use_ifndef pplist="XAOD_ANALYSIS" pkg="Event/xAOD/xAODTrigger"

use AtlasReflex         AtlasReflex-*            External -no_auto_import
use_ifndef pplist="XAOD_ANALYSIS" pkg="Trigger/TrigDataAccess/TrigSerializeUtils"
use_ifndef pplist="XAOD_ANALYSIS" pkg="Trigger/TrigT1/TrigT1Interfaces"
use_ifndef pplist="XAOD_ANALYSIS" pkg="Trigger/TrigEvent/TrigNavigation"


pattern dummypattern \
  macro dummymacro "dummyvalue_<selectionfile>_<dict>_<headerfiles>_<dataLinks>_<files>_<typesWithNamespace>_<libtag>"

#macro dictpatternname			"lcgdict" \
#		      AthAnalysisBase		"dummypattern"

macro sercnvpatternname			"sercnv" \
		      AthAnalysisBase	"dummypattern"
      		  

apply_pattern lcgdict dict=TrigSteeringEvent selectionfile="selection.xml" \
        headerfiles="../TrigSteeringEvent/TrigSteeringEventDict.h" \
        dataLinks="TrigRoiDescriptor TrigSuperRoi"

apply_pattern $(sercnvpatternname) typesWithNamespace="LVL1::RecJetRoI LVL1::RecJetEtRoI LVL1::RecEmTauRoI LVL1::RecEnergyRoI LVL1::RecMuonRoI \
	      			   	xAOD::TrigCompositeContainer xAOD::TrigCompositeAuxContainer" \
                                         files="-s=${TrigSteeringEvent_root}/TrigSteeringEvent TrigRoiDescriptor.h TrigSuperRoi.h \
                                         TrigPassFlags.h  TrigPassFlagsCollection.h \
                                         TrigRoiDescriptorCollection.h\
                                         TrigSuperRoiCollection.h\
                                         TrigOperationalInfo.h TrigOperationalInfoCollection.h \
                                         TrigPassBits.h TrigPassBitsCollection.h \
                                         -s=${TrigT1Interfaces_root}/TrigT1Interfaces RecJetRoI.h RecEmTauRoI.h \
                                         RecEnergyRoI.h RecJetEtRoI.h RecMuonRoI.h \
					 -s=${xAODTrigger_root}/xAODTrigger TrigCompositeContainer.h TrigCompositeAuxContainer.h"

apply_pattern $(sercnvpatternname) \
libtag="xAOD" \
typesWithNamespace="xAOD::TrigPassBits xAOD::TrigPassBitsContainer xAOD::TrigPassBitsAuxContainer" \
files="-s=${xAODTrigger_root}/xAODTrigger TrigPassBitsContainer.h TrigPassBitsAuxContainer.h"


use TestTools      TestTools-*         AtlasTest
apply_pattern UnitTest_run unit_test=Enums
apply_pattern UnitTest_run unit_test=Operators
apply_pattern UnitTest_run unit_test=Truncation
apply_pattern UnitTest_run unit_test=TrigPassBits
apply_pattern UnitTest_run unit_test=HLTExtraData
apply_pattern UnitTest_run unit_test=StringSerializer

#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"

end_private
