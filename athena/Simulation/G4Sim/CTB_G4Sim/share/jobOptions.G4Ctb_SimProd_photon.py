#==============================================================
#
# Job options file for Geant4 Simulations
#
# CTB_G4Sim: CTB (2004) simulation production
# 
# Note: this joboption is specific for the GRID production 
#       of the CTB photon runs.   
#
__version__="$Revision: 1.12 $"
#==============================================================

#--- Detector flags -------------------------------------------
from AthenaCommon.DetFlags import DetFlags
# - Select detectors 
DetFlags.ID_setOn()
DetFlags.Calo_setOn()
DetFlags.LAr_setOn()
DetFlags.em_setOn()
DetFlags.Tile_setOn()
DetFlags.Muon_setOff() # muons are not supported in >=13.0.0
# - MCTruth
DetFlags.simulate.Truth_setOn()

#--- AthenaCommon flags ---------------------------------------
from AthenaCommon.AthenaCommonFlags import athenaCommonFlags
athenaCommonFlags.PoolHitsOutput='ctb_MyOutputFile.root'
athenaCommonFlags.EvtMax=3

#--- Simulation flags -----------------------------------------
from G4AtlasApps.SimFlags import SimFlags
SimFlags.import_JobProperties('G4AtlasApps.ctb_flags') # - specfic CTB flags


# - Option: run using run-conditions for the CTB runs, 
#----------- only few runs available (make sure is a photon-run)
SimFlags.LArEMBenergyCor.set_On()
SimFlags.RunConditions.set_Value('CTB_G4Sim.CtbRunConditionsData')
# This is the photon run number 
SimFlags.RunNumber.set_Value(2777)

    
#--- Generator flags ------------------------------------------
SimFlags.Seeds.set_Value('SINGLE 2000160768 643921183')
# Here we set the photon the electron must be generated by the 
# ParticleGenerator with an energy = 180 Gev - photon-energy
SimFlags.ParticlePDG.set_Value('22')
#
# - Option:  we reduce the beam spot for all the photon runs  
#---------- 
if SimFlags.ParticleGeneratorOrders().has_key('vertY:'):
    SimFlags.ParticleGeneratorOrders()['vertY:']='  flat -5. 5.'
if SimFlags.ParticleGeneratorOrders().has_key('vertZ:'):
    SimFlags.ParticleGeneratorOrders()['vertZ:']='  flat -5. 5.'

# - Option:  run with a given energy distribution for the photon :
#---------- 
# In this case you have to customize the ParticleGenerator (see 
# in the generator section)
SimFlags.ParticleGeneratorOrders()['energy[0]:']=' histogram '+\
                                             repr(SimFlags.RunNumber())
SimFlags.ParticleGeneratorOrders()['pdgcode[0]:']=' 22'
SimFlags.ParticleGeneratorOrders()['energy[1]:']=' function espectrum energy[0]'
SimFlags.ParticleGeneratorOrders()['pdgcode[1]:']=' 11'
#

#---  Output printout level ----------------------------------- 
#output threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL)
MessageSvc = Service( "MessageSvc" )
MessageSvc.OutputLevel = 4

#==============================================================
#==============================================================
# Job configuration
# ***>> Do not add flags or simulation options below this line
#==============================================================
#==============================================================
#--- CTB ParticleGenerator photon energy config  --------------
from gaudimodule import PyAlgorithm,Helper
class HistoPy(PyAlgorithm):
    def __init__(self,name):
        PyAlgorithm.__init__( self, name )
    def initialize( self, reinit = False):
        Helper.service(theApp._svcloc,'HistogramDataSvc',True)
        from CTB_G4Sim.CtbPhotonESpectrum import Photon_Energy_spectrum
        p=Photon_Energy_spectrum(SimFlags.RunNumber())
        p.build_efunction(theApp)
        h2=p.build_spectrum(theApp)
        return True
histopy=HistoPy("HistoPy")
import ROOT
ROOT.SetOwnership(histopy,0)

#--- CTB setup description  ----------------------------------
from G4AtlasApps import SimKernel

theApp.TopAlg = [ 'HistoPy' ] + theApp.TopAlg
if (SimFlags.SimLayout()=='ctbh8_photon'):
    AtlasG4Eng.G4Eng.log_Level.warning('This is CTB photon run \
     and you need special ParticleGenerator package')
else:
    raise RuntimeError('ERROR:: CTB_G4Sim/jobOptions.G4Ctb_SimProd_photon.py\
                        This is not a photon run !!!')

#-------------------------------------------------------------
#>## this starts the space to customize the simulation ####### 
#theApp.initialize()


#theApp.nextEvent( theApp.EvtMax )
#<## this ends the space to customize the simulation #########
#--- End jobOptions.G4Ctb_SimProd_photon.py file  -------------
