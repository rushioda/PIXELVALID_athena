package AthenaPoolMultiTest

use AtlasPolicy           AtlasPolicy-*
use AthenaPoolExampleAlgorithms AthenaPoolExampleAlgorithms-* Database/AthenaPOOL/AthenaPoolExample 

use MinimalRunTime        MinimalRunTime-*      Control -no_auto_imports

private
use TestPolicy            TestPolicy-*
use AtlasPOOL             AtlasPOOL-*           External
use AtlasCORAL            AtlasCORAL-*          External
use GaudiInterface        GaudiInterface-*      External
use StoreGate             StoreGate-*           Control
use SGTools               SGTools-*             Control
use AthenaBaseComps       AthenaBaseComps-*     Control
use xAODEventInfo         xAODEventInfo-*       Event/xAOD
use EventInfo             EventInfo-*       Event
use ByteStreamData        ByteStreamData-*      Event
use ByteStreamCnvSvc      ByteStreamCnvSvc-*    Event -no_auto_imports
use AthenaPoolUtilities   AthenaPoolUtilities-* Database/AthenaPOOL
use DBDataModel           DBDataModel-*         Database/AthenaPOOL
use AthenaPoolTestData    AthenaPoolTestData-*  AtlasTest/DatabaseTest
use AthenaPoolExampleData AthenaPoolExampleData-*  Database/AthenaPOOL/AthenaPoolExample
use GoodRunsLists         GoodRunsLists-*       DataQuality

public

# apply_pattern component_library
apply_pattern dual_use_library files=*.cxx

macro test_patter_opt_only "athenarun_test" \
      debug       ""
 
#macro DOXYGEN_OUTPUT_DIRECTORY "$(doc)Doxygen"
#macro DOXYGEN_FILE_PATTERNS "*.cxx *.h *.py"
#macro DOXYGEN_INPUT "../src ../$(package) ../share ../doc"

apply_pattern install_runtime
#apply_pattern install_applications
apply_pattern declare_joboptions files="-s=../share *.py"

macro_append AthenaPoolMultiTest_cppflags " `xml2-config --cflags`"

apply_pattern athenarun_test name="AthenaPoolMultiTestBuildInput" pre_script="../test/pre_check.sh AthenaPoolMultiTestBuildInput " options="AthenaPoolMultiTest/SplittableData_jo.py" post_script="../test/post_check_bi.sh AthenaPoolMultiTestBuildInput "

apply_pattern athenarun_test name="AthenaPoolMultiTestCollectInput" pre_script="../test/pre_check.sh AthenaPoolMultiTestCollectInput " options="AthenaPoolMultiTest/TestSimpleCollection.py" post_script="../test/post_check_ci.sh AthenaPoolMultiTestCollectInput "

apply_pattern athenarun_test name="AthenaPoolMultiTestEventSplit" pre_script="../test/pre_check.sh AthenaPoolMultiTestEventSplit " options="AthenaPoolMultiTest/EventSplit_jo.py" post_script="../test/post_check_es.sh AthenaPoolMultiTestEventSplit "

apply_pattern athenarun_test name="AthenaPoolMultiTestCheckCollections" pre_script="../test/pre_check.sh CheckExplicit " options="AthenaPoolMultiTest/CheckExplicit_jo.py" post_script="../test/post_check_co.sh AthenaPoolMultiTestCheckCollections "

apply_pattern athenarun_test name="AthenaPoolMultiTestCheckNull" pre_script="../test/pre_check.sh CheckNull " options="AthenaPoolMultiTest/CheckNull_jo.py" post_script="../test/post_check_cn.sh AthenaPoolMultiTestCheckNull "

apply_pattern athenarun_test name="AthenaPoolMultiTestCheckOutput" pre_script="../test/pre_check.sh CheckImplicit " options="AthenaPoolMultiTest/CheckImplicit_jo.py" post_script="../test/post_check_co.sh AthenaPoolMultiTestCheckOutput "

apply_pattern athenarun_test name="AthenaPoolMultiTestBSMetaWrite" pre_script="../test/pre_check_bs.sh CheckBSWrite " options="AthenaPoolMultiTest/BSMetaWrite.py" post_script="../test/post_check_bs.sh AthenaPoolMultiTestBSMetaWrite "

apply_pattern athenarun_test name="AthenaPoolMultiTestBSMetaWriteNone" pre_script="../test/pre_check.sh CheckBSWriteNone " options="AthenaPoolMultiTest/BSMetaWriteNone.py" post_script="../test/post_check_bs.sh AthenaPoolMultiTestBSMetaWriteNone "

# Tests dependencies
private
# CheckExplicit, CheckNull and CheckImplicit tests depend on EventSplit
macro_append AthenaPoolMultiTestCheckCollections_test_dependencies " AthenaPoolMultiTestEventSplit_test "
macro_append AthenaPoolMultiTestCheckNull_test_dependencies " AthenaPoolMultiTestEventSplit_test "
macro_append AthenaPoolMultiTestCheckOutput_test_dependencies " AthenaPoolMultiTestEventSplit_test "
# EventSplit and TestSimpleCollection depend on SplittableData.
macro_append AthenaPoolMultiTestEventSplit_test_dependencies " AthenaPoolMultiTestBuildInput_test "
macro_append AthenaPoolMultiTestCollectInput_test_dependencies " AthenaPoolMultiTestBuildInput_test "
# SplittableData is first.
# BS Read must come after write
macro_append AthenaPoolMultiTestBSMetaWriteNone_test_dependencies " AthenaPoolMultiTestBSMetaWrite_test "
end_private
