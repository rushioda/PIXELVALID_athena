package IOVDbTestAlg

author RD Schaffer <R.D.Schaffer@cern.ch>

use AtlasPolicy 	 AtlasPolicy-*
use StoreGate            StoreGate-*            Control
use IOVDbTestConditions  IOVDbTestConditions-*  AtlasTest/DatabaseTest
use AthenaKernel         AthenaKernel-*         Control
use GaudiInterface       GaudiInterface-*       External 
# use AtlasPOOL            AtlasPOOL-*            External
# use AtlasReflex          AtlasReflex-*          External
use AthenaBaseComps	 AthenaBaseComps-*	Control

private
use AthenaPoolUtilities  AthenaPoolUtilities-*  Database/AthenaPOOL
use AtlasCORAL           AtlasCORAL-*           External
use EventInfo            EventInfo-*            Event
use RegistrationServices RegistrationServices-* Database
end_private

# Test infrastructure
use TestPolicy           TestPolicy-*
use AtlasConditionsRunTime AtlasConditionsRunTime-* 


library IOVDbTestAlg \
	IOVDbTestAlg.cxx \
        IOVDbTestCoolDCS.cxx \
	IOVDbTestAlg_entries.cxx \
	IOVDbTestAlg_load.cxx 

apply_pattern component_library
apply_pattern declare_joboptions files="-s=../share *.py"

# Setup automatic testing which runs with gmake check

# We define here a macro which can be used to run the tests only on
# optimized mode.
macro test_pattern_opt_only "athenarun_test" \
      debug        ""


# COOL:

# Write out some simple objects and register them in IOVDb - COOL version:
# IOVDbTestWriteCool
apply_pattern athenarun_test name="IOVDbTestWriteCool" pre_script="../test/pre_check.sh IOVDbTestWriteCool " options="IOVDbTestAlg/IOVDbTestAlgWriteCool.py" post_script="../test/post_check_with_select.sh IOVDbTestWriteCool ^..IOVDbTestAlg " 

# Read back the object using IOVDb - COOL version:
# IOVDbTestReadCool
apply_pattern athenarun_test name="IOVDbTestReadCool" pre_script="../test/pre_check.sh IOVDbTestReadCool " options="IOVDbTestAlg/IOVDbTestAlgReadCool.py" post_script="../test/post_check_with_select.sh IOVDbTestReadCool ^..IOVDbTestAlg " 
macro_append IOVDbTestReadCool_test_dependencies " IOVDbTestWriteCool_test "


# Write out some the same simple objects and register them with a later IOV in IOVDb - COOL version:
# IOVDbTestWriteCoolStep2
apply_pattern athenarun_test name="IOVDbTestWriteCoolStep2" pre_script="../test/pre_check.sh IOVDbTestWriteCoolStep2 " options="IOVDbTestAlg/IOVDbTestAlgWriteCoolStep2.py" post_script="../test/post_check_with_select.sh IOVDbTestWriteCoolStep2 ^..IOVDbTestAlg " 
macro_append IOVDbTestWriteCoolStep2_test_dependencies " IOVDbTestReadCool_test "

# Read back the object using IOVDb - COOL version:
# IOVDbTestReadCool2
apply_pattern athenarun_test name="IOVDbTestReadCool2" pre_script="../test/pre_check.sh IOVDbTestReadCool2 " options="IOVDbTestAlg/IOVDbTestAlgReadCool.py" post_script="../test/post_check_with_select.sh IOVDbTestReadCool2 ^..IOVDbTestAlg " 
macro_append IOVDbTestReadCool2_test_dependencies " IOVDbTestWriteCoolStep2_test "

# Write out some the same simple objects and register them with a later IOV in IOVDb - COOL version:
# IOVDbTestWriteCoolStep3
apply_pattern athenarun_test name="IOVDbTestWriteCoolStep3" pre_script="../test/pre_check.sh IOVDbTestWriteCoolStep3 " options="IOVDbTestAlg/IOVDbTestAlgWriteCoolStep3.py" post_script="../test/post_check_with_select.sh IOVDbTestWriteCoolStep3 ^..IOVDbTestAlg " 
macro_append IOVDbTestWriteCoolStep3_test_dependencies " IOVDbTestReadCool2_test "

# Read back the object using IOVDb - COOL version:
# IOVDbTestReadCool3
apply_pattern athenarun_test name="IOVDbTestReadCool3" pre_script="../test/pre_check.sh IOVDbTestReadCool3 " options="IOVDbTestAlg/IOVDbTestAlgReadCool.py" post_script="../test/post_check_with_select.sh IOVDbTestReadCool3 ^..IOVDbTestAlg " 
macro_append IOVDbTestReadCool3_test_dependencies " IOVDbTestWriteCoolStep3_test "

# Write to file meta data
apply_pattern athenarun_test name="IOVDbTestReadCoolWriteMD" pre_script="../test/pre_check.sh IOVDbTestReadCoolWriteMD " options="IOVDbTestAlg/IOVDbTestAlgReadCoolWriteMD.py" post_script="../test/post_check_with_select.sh IOVDbTestReadCoolWriteMD ^..IOVDbTestAlg " 
macro_append IOVDbTestReadCoolWriteMD_test_dependencies " IOVDbTestReadCool3_test "

# Read back from file meta data
apply_pattern athenarun_test name="IOVDbTestReadCoolFromMD" pre_script="../test/pre_check.sh IOVDbTestReadCoolFromMD " options="IOVDbTestAlg/IOVDbTestAlgReadCoolFromMetaData.py" post_script="../test/post_check_with_select.sh IOVDbTestReadCoolFromMD ^..IOVDbTestAlg " 
macro_append IOVDbTestReadCoolFromMD_test_dependencies " IOVDbTestReadCoolWriteMD_test "


# TwoStep write/reg:

# Write out some the same simple objects BUT DO NOT register them
# IOVDbTestAlgWriteCoolNoReg
apply_pattern athenarun_test name="IOVDbTestAlgWriteCoolNoReg" pre_script="../test/pre_check.sh IOVDbTestAlgWriteCoolNoReg " options="IOVDbTestAlg/IOVDbTestAlgWriteCoolNoReg.py" post_script="../test/post_check_with_select.sh IOVDbTestAlgWriteCoolNoReg ^..IOVDbTestAlg " 
macro_append IOVDbTestAlgWriteCoolNoReg_test_dependencies " IOVDbTestReadCoolFromMD_test "

# Read back objects NOT registered
# IOVDbTestAlgReadCoolNoReg
#apply_pattern athenarun_test name="IOVDbTestAlgReadCoolNoReg" pre_script="../test/pre_check.sh IOVDbTestAlgReadCoolNoReg " options="IOVDbTestAlg/IOVDbTestAlgReadCoolNoReg.py" post_script="../test/post_check_with_select.sh IOVDbTestAlgReadCoolNoReg ^..IOVDbTestAlg " 

# Read back objects NOT registered and NOW register them
# IOVDbTestAlgReadCoolAndReg
#apply_pattern athenarun_test name="IOVDbTestAlgReadCoolAndReg" pre_script="../test/pre_check.sh IOVDbTestAlgReadCoolAndReg " options="IOVDbTestAlg/IOVDbTestAlgReadCoolAndReg.py" post_script="../test/post_check_with_select.sh IOVDbTestAlgReadCoolAndReg ^..IOVDbTestAlg " 

# Read back objects via IOVDB
# IOVDbTestAlgReadCoolAfterTwoStep
apply_pattern athenarun_test name="IOVDbTestAlgReadCoolAfterTwoStep" pre_script="../test/pre_check.sh IOVDbTestAlgReadCoolAfterTwoStep " options="IOVDbTestAlg/IOVDbTestAlgReadCoolAfterTwoStep.py" post_script="../test/post_check_with_select.sh IOVDbTestAlgReadCoolAfterTwoStep ^..IOVDbTestAlg " 
macro_append IOVDbTestAlgReadCoolAfterTwoStep_test_dependencies " IOVDbTestAlgWriteCoolNoReg_test "


# Check of online mode updates
# HotSwapTEST
apply_pattern athenarun_test name="HotSwapTEST" pre_script="../test/HotSwapTEST.sh" options="IOVDbTestAlg/dummy.py" post_script="../test/post_check_with_select.sh HotSwapTEST ^..HotSwapTEST "
macro_append HotSwapTEST_test_dependencies " IOVDbTestAlgReadCoolAfterTwoStep_test "





