/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

#include <iostream>
#include <cmath>

#include "InDetLowBetaFinder/TrtToolsBetaLiklihood.h"
#include "InDetLowBetaFinder/TrtToolsBetaLiklihood.calibration.h"



// Define the control parameters here instead of in the header to enable linking
// (Fixing the one-definition rule of C++)
// Some control parameters gathered here for convenience:
// hit radius bins
const int TrtToolBetaLiklihood::NRFEBINS = 10;
const double TrtToolBetaLiklihood::RFEMIN = 0.0;
const double TrtToolBetaLiklihood::RFEMAX = 1.5; //horrible things happen near the straw edge, stay away!
const double TrtToolBetaLiklihood::raddelta = 0.15;
//eta bins
const int TrtToolBetaLiklihood::NETABINS = 10;  
const double TrtToolBetaLiklihood::ETAMIN = 0.0;
const double TrtToolBetaLiklihood::ETAMAX = 2.0;
const double TrtToolBetaLiklihood::etadelta = 0.2;

//Nominal r(t) constants, everything gets corrected back to here (got them out of an rhadron MC, better choice?):
const double TrtToolBetaLiklihood::RT0 = -0.179736;
const double TrtToolBetaLiklihood::RT1 = 0.0366578;
const double TrtToolBetaLiklihood::RT2 = 0.000699622;
const double TrtToolBetaLiklihood::RT3 = -0.000011811;

TrtToolBetaLiklihood::HIT hit;

// for FE fit:
static int EtaBin;
static std::vector<int> LBitA(60), becIdxA(60);
static std::vector<float> pathlenA(60), dlReflectA(60), t0A(60), estDriftA(60), DCradA(60);
static std::vector<double> TrkRF(60);

//template histos
static TH1F *LBitvsEta[TrtToolBetaLiklihood::NRFEBINS][TrtToolBetaLiklihood::NETABINS][2];
double LBitProb[TrtToolBetaLiklihood::NRFEBINS][TrtToolBetaLiklihood::NETABINS][2][24];

TrtToolBetaLiklihood::TrtToolBetaLiklihood() {
}

std::vector<float> TrtToolBetaLiklihood::TRT_FEbeta(std::vector<int> TRT_bitpattern, std::vector<int> TRT_bec, std::vector<int> TRT_strawlayer, std::vector<int> TRT_layer, 
                           std::vector<float> TRT_t0, std::vector<float> TRT_estDrift, std::vector<float> TRT_R, std::vector<float> TRT_R_track, 
                           std::vector<float> TrackX, std::vector<float> TrackY, std::vector<float> TrackZ, float RecPt, float RecEta, std::vector<int> TRT_isTube) {

  //std::cout << "waypoint 0" << std::endl;
  int binlt[24] = {0};
  int binht[3] = {0};
  double radius, arclength, arcrad;

  EtaBin = floor((fabs(RecEta)-ETAMIN)/etadelta);
  if (EtaBin >= TrtToolBetaLiklihood::NETABINS)
    EtaBin = TrtToolBetaLiklihood::NETABINS-1;

  LBitA.clear();
  pathlenA.clear();
  dlReflectA.clear();
  t0A.clear();
  becIdxA.clear();
  TrkRF.clear();
  estDriftA.clear();
  DCradA.clear();

  //std::cout << "waypoint 1" << std::endl;
  for(unsigned int ihit=0; ihit<TRT_bitpattern.size(); ihit++){

    // parse the hit:
    TrtToolBetaLiklihood::TRT_BitPattern(TRT_bitpattern.at(ihit), binlt, binht, hit);

    hit.t0 = TRT_t0.at(ihit);
    hit.estDrift = fabs(TRT_estDrift.at(ihit)); 
    hit.hitR = TRT_R.at(ihit);
    hit.fitR = TRT_R_track.at(ihit);
   
    //cubic solution flakes out sometimes when DCrad==2mm (overflow hits from bad ionization) - flag to drop.
    hit.cxnFail = 0;
    if(hit.hitR==2) hit.cxnFail = 1;

    // Path length to hit
    radius = sqrt(pow(TrackX.at(ihit),2) + pow(TrackY.at(ihit),2))/10.;
    arcrad = RecPt / 6;  //cm
    arclength = 2*arcrad*asin(radius/2/arcrad);  //cm
    hit.pathlen = sqrt(pow(arclength,2) + pow(TrackZ.at(ihit)/10.,2));

    //std::cout << "waypoint 2" << std::endl;
    // index of barrel/endcap 0= barrel, 1 = ec (from -2,2)
    hit.becIdx = fabs(TRT_bec.at(ihit))-1;

    // is this a tube hit?
    hit.isTube = TRT_isTube.at(ihit);

    // Calculate delta distance the direct and reflected signals travel, given their position in z or r along the wire
    if (hit.becIdx == 0) { // Barrel
      hit.dlD = 71.2 - fabs(TrackZ.at(ihit))/10.;
      // Inner wires have 80cm dead 
      if ((TRT_strawlayer.at(ihit) < 9) && (TRT_layer.at(ihit) == 0)) {
        hit.dlR = fabs(TrackZ.at(ihit))/10. - 80.;
      } else {
        hit.dlR = fabs(TrackZ.at(ihit))/10.;
      }
    } else { // End cap
      hit.dlD = 101. - radius;
      hit.dlR = radius - 64.;
    }
    //std::cout << "waypoint 3" << std::endl;
    TrtToolBetaLiklihood::TRT_SelectFEhits();
  }

  //std::cout << "waypoint 4" << std::endl;
  float beta=0; float betaSigmaLo=0; float betaSigmaUp=0;
  if(LBitA.size()>0) TrtToolBetaLiklihood::TRT_FEbeta_min(beta, betaSigmaLo, betaSigmaUp);
  else beta = -998;   
  //std::cout << "waypoint 5" << std::endl;
  float correctedBeta = TrtToolBetaLiklihood::TRT_CorrectFEbeta(beta, RecEta);
/*
       //------debug---------------------------------------------------
        const char* FILENAME_C = "/scratchdisk2/wmills/unslimmedDump.log";
        FILE* outFile;
        outFile = fopen(FILENAME_C,"a");
        fprintf(outFile,"no. good hits = %i \n",LBitA.size());
        fclose(outFile);
        //-------------------end debug-----------------------
*/
  std::vector<float> out;
  out.push_back(correctedBeta);
  out.push_back( (-1.*betaSigmaLo + betaSigmaUp)/2. ); //maybe pack into one float instead of averaging later.
  return out;
}

float TrtToolBetaLiklihood::TRT_CorrectFEbeta(float beta, float eta){

  float corrBeta = 0;
  if(fabs(eta)<1.0) corrBeta = febBAR[0] + febBAR[1]*beta + febBAR[2]*pow(beta,2) + febBAR[3]*pow(beta,3) + febBAR[4]*pow(beta,4);
  else corrBeta = febEC[0] + febEC[1]*beta + febEC[2]*pow(beta,2) + febEC[3]*pow(beta,3) + febEC[4]*pow(beta,4);

  return corrBeta;
}

void TrtToolBetaLiklihood::TRT_SelectFEhits(){
  if ( !((hit.BoT == 1) || (hit.LBit==23 && hit.LGap>0) || (hit.LBit==22 && hit.LGap>0)) && fabs(hit.fitR)<RFEMAX && hit.nHT==0 && hit.FBit > 3 && hit.cxnFail==0 && hit.isTube==0) {
    LBitA.push_back(hit.LBit);
    pathlenA.push_back(hit.pathlen);
    dlReflectA.push_back(hit.dlR);
    t0A.push_back(hit.t0);
    becIdxA.push_back(hit.becIdx);
    TrkRF.push_back(hit.fitR);
    estDriftA.push_back(hit.estDrift);
    DCradA.push_back(hit.hitR);
  }
}

void TrtToolBetaLiklihood::TRT_BitPattern(int hitP, int *lowPat, int *highPat, HIT &hit) {
  //int i, secondLastB=30, unsorted;
  int i, secondLastB=30;
  int ilt = 23;
  int iht = 2;  
  //unsorted = hitP;
  // Note, bits are in reverse time order, so we reverse them here
  for (i=0; i<27; i++) {
    // HT bits
    if (i == 8 || i == 17 || i == 26) {
      highPat[iht--] = hitP & 1;
    } else {
      lowPat[ilt--] = hitP & 1;
    }
    hitP >>= 1;
  }

  // First/Last bits, and Bits over threshold, and size of last gap
  hit.FBit = -1;
  hit.BoT = 0;
  for (i=0; i<24; i++) {
    if (lowPat[i] == 1) {
      secondLastB = hit.LBit; // cg: initialization?
      hit.LBit = i;
      hit.BoT++;
      if (hit.FBit == -1)
        hit.FBit = i;
    }
  }
  if (hit.BoT == 1) {
    secondLastB = hit.LBit-24;
  }
  //if (secondLastB == 30)
    //std::cout << "TRT_BitPattern failed to initialize secondLastB" << std::endl;
    
  hit.LGap = hit.LBit-secondLastB-1;
  
  // High Threshold
  hit.nHT = 0;
  for (i=0; i<3; i++) {
    hit.nHT += highPat[i];
  }
}


//MINUIT apparently doesn't cope with member functions...
void TRT_FEbeta_fcn(Int_t &npar, Double_t *gin, Double_t &f, Double_t *par, Int_t iflag);
//...and also functions called therein:
void TRT_solveCubic(float DCrad, float &estDrift);

void TrtToolBetaLiklihood::TRT_FEbeta_min(float &beta, float &betaSigmaLo, float &betaSigmaUp){
  //std::cout << "waypoint 6" << std::endl;
  // Minuit variables
  Double_t arglist[10] = {0,0,0,0,0,0,0,0,0,0};
  Int_t ierflg = 0;
  Int_t ierflgA = 0;
  //these lines are diabled while error estimation is disabled
  //Int_t ierflgB = 0;
  //double eparab, gcc;
  double betainv, betaErr;
  double MINOSup=0; double MINOSlo=0;


  // It seems we have to create/destroy the minuit object each use, or
  // we get a massive memory leak. Maybe there is a better way?
  TMinuit *minuit = new TMinuit(1);
  //std::cout << "waypoint 7" << std::endl;
  minuit->Command("SET PRINT -1");
  minuit->SetPrintLevel(-1); // same?
           
  // Beta Fit
  minuit->SetFCN(TRT_FEbeta_fcn);
  arglist[0] = 0.5; // logL
  minuit->mnexcm("SET ERR", arglist, 1, ierflg);
  // Now ready for minimization step
  arglist[0] = 500;
  arglist[1] = 1.;
  minuit->DefineParameter(0, "beta inv", 1, 0.2, 1, 1000.);
  //std::cout << "waypoint 8" << std::endl;  

  //old MIGRAD way, returns bogus errors:
  //minuit->mnexcm("MIGRAD", arglist ,2,ierflg);
  //minuit->GetParameter(0, betainv, betaErr);
  //beta = 1./betainv;
  //betaSigma = betaErr*beta*beta;

  //new MINOS way, errors all check out:
  minuit->mnexcm("MIGRAD", arglist ,2,ierflgA);
  //std::cout << "waypoint 8.1" << std::endl;
  //minuit->mnexcm("MINOS", arglist ,1,ierflgB); //<---this line is blowing up in rel 17, error estimation disabled!
  //std::cout << "waypoint 8.2" << std::endl;
  if(!ierflgA){
    minuit->GetParameter(0, betainv, betaErr);
    //std::cout << "waypoint 8.3" << std::endl;
    //minuit->mnerrs(0,MINOSup,MINOSlo,eparab,gcc);
    beta = 1./betainv;
    betaSigmaLo = MINOSlo*beta*beta;
    betaSigmaUp = MINOSup*beta*beta;
  }
  else{
    beta = -500;
    betaSigmaLo = 0;
    betaSigmaUp = 0;
  }

  delete minuit;
  //std::cout << "waypoint 9" << std::endl;  
}

void TRT_FEbeta_fcn(Int_t &npar, Double_t *gin, Double_t &f, Double_t *par, Int_t iflag){

   //std::cout << "FEbeta_fcn 0" << std::endl;
   const double c = 30.; // speed of light in cm/ns
   const double cProp = 25.; // Fitted for signal propagation speed
   const int t0offset = 2;

   npar = 1;
   iflag =1;
   gin[0]   = 1.0*iflag;
     
   Int_t i, j, n;
   int idx1;  //template index
   int RBin;
     
   //calculate -logL
   Double_t logL = 0;
   Double_t prob, tShift, remain;   
   int bit, binShift, becIdx; 
            
   // par[0] is 1/beta
   double bDiff = par[0] - 1.; // 1/beta diff from 1
       
   n = pathlenA.size();
 
   //std::cout << "FEbeta_fcn 1" << std::endl;      
   for (i=0; i<n; i++) {

     // radius bin
     RBin = floor((fabs(TrkRF.at(i))-TrtToolBetaLiklihood::RFEMIN)/TrtToolBetaLiklihood::raddelta);
     if (RBin >= TrtToolBetaLiklihood::NRFEBINS) RBin = TrtToolBetaLiklihood::NRFEBINS-1;

     // Time shift due to beta
     tShift = pathlenA.at(i)*bDiff/c/3.125;

     // Time shift due to propagation time along wire
     tShift += dlReflectA.at(i)/cProp/3.125;

     // Correct for t0 (leave 2 bins to the left)
     tShift += t0A.at(i)/3.125 - t0offset;

     // Correct for r(t)
     float nominalDrift = 0;
     TRT_solveCubic(DCradA.at(i), nominalDrift);
     tShift += (nominalDrift - estDriftA.at(i)) / 3.125;

     binShift = floor(tShift);
     remain = tShift - binShift;
   
     bit = LBitA.at(i);
     becIdx = becIdxA.at(i); // barrel/ec templates
     
     //std::cout << "RBin = " << RBin << "; EtaBin = " << EtaBin << "; bec = " << becIdx;
     //std::cout << "FEbeta_fcn 2" << std::endl;
     
     // beta so small we've shifted off the map
     if (bit-binShift-1 < 0) {
       prob = 1.E-15; // give some very low prob to get away from here
       //std::cout << prob << std::endl;
     } else {
        
       prob = 0.;
   
       idx1 = RBin;
       //std::cout << "FEbeta_fcn 3" << std::endl;
       if (bit == 23) { // This bin contains overflows = special 
         prob = remain*LBitProb[idx1][EtaBin][becIdx][bit-binShift-1];
         for (j=bit-binShift; j<24; j++) {
           prob += LBitProb[idx1][EtaBin][becIdx][j];
         }
         //std::cout << prob << " (FE overflow)" << std::endl;
       //std::cout << "FEbeta_fcn 4" << std::endl;
       } else {
         prob = remain*LBitProb[idx1][EtaBin][becIdx][bit-binShift-1] + (1.-remain)*LBitProb[idx1][EtaBin][becIdx][bit-binShift];
         //std::cout << "remain = " << remain << "; bit = " << bit << "; binShift = " << binShift
         //<< "; unscaled prob = " << LBitProb[idx1][EtaBin][becIdx][bit-binShift-1] << " + " << LBitProb[idx1][EtaBin][becIdx][bit-binShift] << std::endl;
       }
     
     }
     logL -= log(prob);
   }

   //std::cout << "RBin = " << idx1 << "; EtaBin = " << EtaBin << "; bec = " << becIdx << std::endl;
       
   //std::cout << "FEbeta_fcn 5" << std::endl;
   f = logL;
}

void TRT_solveCubic(float DCrad, float &estDrift){
  double a = TrtToolBetaLiklihood::RT3; double b = TrtToolBetaLiklihood::RT2; double c = TrtToolBetaLiklihood::RT1; double d = TrtToolBetaLiklihood::RT0 - fabs(DCrad);
  if (a == 0){
    //std::cout << " ERROR! " << std::endl;
  }
  else{
  double f = (3.*c/a - b*b/a/a)/3.;
  double g = (2.*b*b*b/a/a/a - 9.*b*c/a/a + 27.*d/a)/27.;
  double h = g*g/4. + f*f*f/27.;
  //double t1r, t2r, t3r, t2i, t3i;
  double t1r, t2r, t3r;
  if(h<=0){
    double I = sqrt(g*g/4. - h);
    double J = pow(I,1./3.);
    double K = acos(-1.*g/2./I);
    double L = -1.*J;
    double M = cos(K/3.);
    double N = sqrt(3)*sin(K/3.);
    double P = -1.*b/3./a;
    t1r = 2.*J*cos(K/3.) - b/3./a;
    t2r = L*(M+N)+P;
    t3r = L*(M-N)+P;
  }
  else{
    double R = g/(-2.) + sqrt(h);
    double S = pow(fabs(R),1./3.);
    if(R<0) S = -1.*S;
    double T = g/(-2.) - sqrt(h);
    double U = pow(fabs(T),1./3.);
    if(T<0) U = -1.*U;
    t1r = S+U-b/3./a;
    t2r = -1.*(S+U)/2. - b/3./a;  //t2i = (S-U)*sqrt(3.)/2.;
    t3r = -1.*(S+U)/2. - b/3./a;  //t3i = -1.*(S-U)*sqrt(3.)/2.;
  }
  estDrift = -999;
  int choose = 0; float smallest = 1000;
  if(t1r>0 && t1r<smallest) { smallest = t1r; choose = 1; }
  if(t2r>0 && t2r<smallest) { smallest = t2r; choose = 2; }
  if(t3r>0 && t3r<smallest) { smallest = t3r; choose = 3; }
  if(choose == 1) estDrift = t1r;
  else if(choose == 2) estDrift = t2r;
  else if(choose == 3) estDrift = t3r;
  }
}

//---- legacy prior loading and generation functions - shouldn't be necessary with active r(t) correction, leave here for now...----------------

void TrtToolBetaLiklihood::TRT_PropLenCorr(TrtToolBetaLiklihood::HIT hit, int *corrLBits, float *corrLBitWeight, int *corrFBits, float *corrFBitWeight) {
  int i, iShift;
  float bShift, rShift, t0Shift;
  const float cprop = 25.; // cm/ns prop speed
  const int t0offset = 2;
   
  t0Shift = hit.t0 / 3.125 - t0offset; // This must be the same offset in fitting!
    
  // Reflected pulse bin shift
  bShift = hit.dlR / cprop / 3.125 + t0Shift;
  iShift = floor(bShift); // in units of bins
  rShift = bShift - iShift; // fractional part
  
  i = hit.LBit - iShift - 1;
  corrLBits[0] = i;
  corrLBitWeight[0] = rShift;
  corrLBits[1] = i+1;  
  corrLBitWeight[1] = 1.-rShift;
   
  // Direct pulse bin shift
  bShift = hit.dlD / cprop / 3.125 + t0Shift;
  iShift = floor(bShift); // in units of bins
  rShift = bShift - iShift; // fractional part
  
  i = hit.FBit - iShift - 1;
  corrFBits[0] = i;
  corrFBitWeight[0] = rShift;
  corrFBits[1] = i+1;
  corrFBitWeight[1] = 1.-rShift;
    
}

void TrtToolBetaLiklihood::TRT_LoadPriors(std::string priorFileName) {

  int i, j, k, l;
  char name[50];
  TH1F *tmp;
        
  // Load up last bit fit priors
  TFile *f = new TFile(priorFileName.c_str());
            
  for (k=0; k<2; k++) {
    for (i=0; i<NETABINS; i++) {
      for (l=0; l<NRFEBINS; l++) { // new R templates
        sprintf(name, "LBitvsEta%d%d%d", i, k, l);
        tmp = (TH1F *)(f->Get(name));
        for (j=0; j<24; j++) {
          LBitProb[l][i][k][j] = tmp->GetBinContent(j+1);
          if (LBitProb[l][i][k][j] == 0) {
            LBitProb[l][i][k][j] = 1.E-6;;
          }
        }
      }
    }
  }
}

// Specify how many prior values are expected
unsigned int TrtToolBetaLiklihood::TRT_NumPriors()
{
  //	 #eta bins  #rad bins  barrel or endcap
  return NETABINS * NRFEBINS *       2;
}

// Update a specific prior value
void TrtToolBetaLiklihood::TRT_UpdatePriorValues(int radiusIndex, int etaIndex, int barrelOrEndcap, double* bitValues)
{
  int j;
  
  for (j = 0; j < 24; j++)
    LBitProb[radiusIndex][etaIndex][barrelOrEndcap][j] = ( (bitValues[j] == 0) ? 1.0e-6 : bitValues[j] );
}

void TrtToolBetaLiklihood::TRT_SetupPriors(){

  int i, j, k;
  char name[50], title[100];
      
  for (j=0; j<2; j++) { // barrel/ec
    for (i=0; i<NETABINS; i++) {
        
      for (k=0; k<NRFEBINS; k++) {
        sprintf(name, "LBitvsEta%d%d%d", i, j, k);
        sprintf(title, "LBit %2.2f < Eta < %2.2f bec=%d", i*etadelta,
                (i+1)*etadelta, j);
        LBitvsEta[k][i][j] = new TH1F (name, title, 24, 0., 24.);
      }      
    }     
  }
}

void TrtToolBetaLiklihood::TRT_FillPriors(std::vector<int> TRT_bitpattern, std::vector<int> TRT_bec, std::vector<int> TRT_strawlayer, std::vector<int> TRT_layer,
                           std::vector<float> TRT_t0, std::vector<float> TRT_R, std::vector<float> TRT_R_track, std::vector<float> TrackX, std::vector<float> TrackY, std::vector<float> TrackZ, float RecPt, float RecEta){
  int binlt[24] = {0};
  int binht[3] = {0};
  double radius, arclength, arcrad;
      
  EtaBin = floor((fabs(RecEta)-ETAMIN)/etadelta); 
  if (EtaBin >= TrtToolBetaLiklihood::NETABINS)
    EtaBin = TrtToolBetaLiklihood::NETABINS-1;
        
  LBitA.clear();
  pathlenA.clear();
  dlReflectA.clear();
  t0A.clear();
  becIdxA.clear();
  TrkRF.clear();
         
  for(unsigned int ihit=0; ihit<TRT_bitpattern.size(); ihit++){  

    // parse the hit:
    TrtToolBetaLiklihood::TRT_BitPattern(TRT_bitpattern.at(ihit), binlt, binht, hit);

    hit.t0 = TRT_t0.at(ihit);
    hit.hitR = TRT_R.at(ihit);
    hit.fitR = TRT_R_track.at(ihit);

    // index of barrel/endcap 0= barrel, 1 = ec (from -2,2):
    hit.becIdx = fabs(TRT_bec.at(ihit))-1;

    // Path length to hit
    radius = sqrt(pow(TrackX.at(ihit),2) + pow(TrackY.at(ihit),2))/10.;
    arcrad = RecPt / 6;  //cm
    arclength = 2*arcrad*asin(radius/2/arcrad);  //cm
    hit.pathlen = sqrt(pow(arclength,2) + pow(TrackZ.at(ihit)/10.,2));

    // Calculate delta distance the direct and reflected signals travel, given their position in z or r along the wire
    if (hit.becIdx == 0) { // Barrel
      hit.dlD = 71.2 - fabs(TrackZ.at(ihit))/10.;
      // Inner wires have 80cm dead
      if ((TRT_strawlayer.at(ihit) < 9) && (TRT_layer.at(ihit) == 0)) {
        hit.dlR = fabs(TrackZ.at(ihit))/10. - 80.;
      } else {
        hit.dlR = fabs(TrackZ.at(ihit))/10.;
      }
    } else { // End cap
      hit.dlD = 101. - radius;
      hit.dlR = radius - 64.;
    }

    int corrLBits[2], corrFBits[2];
    float corrLBitWeight[2], corrFBitWeight[2];
    // Make correction for the extra pathlengths for reflected signals
    TrtToolBetaLiklihood::TRT_PropLenCorr(hit, corrLBits, corrLBitWeight, corrFBits, corrFBitWeight);

    //choose decent hits and fill the histos:
    TrtToolBetaLiklihood::TRT_SelectFEpriors(hit, corrLBits, corrLBitWeight);
  }

}

void TrtToolBetaLiklihood::TRT_SelectFEpriors(TrtToolBetaLiklihood::HIT hit, int *corrLBits, float *corrLBitWeight){

  //where is this hit in the r-binning?
  int Rbin = floor((fabs(hit.fitR)-RFEMIN)/TrtToolBetaLiklihood::raddelta);
  if (Rbin >= NRFEBINS) Rbin = NRFEBINS - 1;

  // Select Hits for Falling edge fit
  if (hit.FBit > 3) {
    if ( !((hit.BoT == 1) || (hit.LBit==23 && hit.LGap>0) || (hit.LBit==22 && hit.LGap>0)) && fabs(hit.fitR)<RFEMAX && hit.nHT==0) {
      //if (nSCTHits>0) {  //this is weird, do track selection cuts outside the hit loop BM
        for (int i=0; i<2; i++) {
          LBitvsEta[Rbin][EtaBin][hit.becIdx]->Fill(corrLBits[i], corrLBitWeight[i]);
        }
      //}       
    }  
  }        
}

void TrtToolBetaLiklihood::TRT_SavePriors(){
  TFile *tf = new TFile("TRTpriors.root", "recreate","output",1);
    
  int i,j,k;
  float sc = 0;
  for (i=0; i<NETABINS; i++) {
    for (j=0; j<2; j++) {
      for (k=0; k<NRFEBINS; k++) {
        LBitvsEta[k][i][j]->Sumw2();
        sc = LBitvsEta[k][i][j]->Integral();
        if (sc > 0)
          LBitvsEta[k][i][j]->Scale(1./sc); // Normalize
        LBitvsEta[k][i][j]->Write();
        delete LBitvsEta[k][i][j];
      }  
    }
  }
      
  tf->Close();
}
//----- legacy prior functions end------------------------------------------------------------

// This was parsed using the following sed command:
// sed 's|prior_\([0-9]\)\([0-9]\)\([0-9]\)\["TRT_bit_\([0-9]\+\)"]|LBitProb[\1][\2][\3][\4]|' <in.dat >out.dat

// The actual default prior values
int TrtToolBetaLiklihood::TRT_LoadDefaultPriors()
{
	
LBitProb[0][0][0][0]=0;
LBitProb[0][0][0][1]=0.00112177;
LBitProb[0][0][0][2]=0.0545603;
LBitProb[0][0][0][3]=0.239009;
LBitProb[0][0][0][4]=0.447252;
LBitProb[0][0][0][5]=0.613642;
LBitProb[0][0][0][6]=0.704705;
LBitProb[0][0][0][7]=0.855359;
LBitProb[0][0][0][8]=1.04335;
LBitProb[0][0][0][9]=1.33068;
LBitProb[0][0][0][10]=1.64323;
LBitProb[0][0][0][11]=1.90142;
LBitProb[0][0][0][12]=2.21907;
LBitProb[0][0][0][13]=2.46201;
LBitProb[0][0][0][14]=2.76192;
LBitProb[0][0][0][15]=3.08153;
LBitProb[0][0][0][16]=2.98283;
LBitProb[0][0][0][17]=1.89405;
LBitProb[0][0][0][18]=0.624037;
LBitProb[0][0][0][19]=0.124394;
LBitProb[0][0][0][20]=0.0158334;
LBitProb[0][0][0][21]=0;
LBitProb[0][0][0][22]=0;
LBitProb[0][0][0][23]=0;
LBitProb[1][0][0][0]=0;
LBitProb[1][0][0][1]=0.00152759;
LBitProb[1][0][0][2]=0.0149128;
LBitProb[1][0][0][3]=0.135272;
LBitProb[1][0][0][4]=0.378343;
LBitProb[1][0][0][5]=0.645064;
LBitProb[1][0][0][6]=0.84083;
LBitProb[1][0][0][7]=0.94687;
LBitProb[1][0][0][8]=1.0654;
LBitProb[1][0][0][9]=1.3377;
LBitProb[1][0][0][10]=1.61496;
LBitProb[1][0][0][11]=1.89078;
LBitProb[1][0][0][12]=2.21164;
LBitProb[1][0][0][13]=2.4152;
LBitProb[1][0][0][14]=2.73989;
LBitProb[1][0][0][15]=3.13058;
LBitProb[1][0][0][16]=3.03127;
LBitProb[1][0][0][17]=1.86398;
LBitProb[1][0][0][18]=0.603926;
LBitProb[1][0][0][19]=0.116821;
LBitProb[1][0][0][20]=0.0150375;
LBitProb[1][0][0][21]=0;
LBitProb[1][0][0][22]=0;
LBitProb[1][0][0][23]=0;
LBitProb[2][0][0][0]=0;
LBitProb[2][0][0][1]=0.000471414;
LBitProb[2][0][0][2]=0.00142183;
LBitProb[2][0][0][3]=0.0235332;
LBitProb[2][0][0][4]=0.166475;
LBitProb[2][0][0][5]=0.53188;
LBitProb[2][0][0][6]=0.85549;
LBitProb[2][0][0][7]=1.02921;
LBitProb[2][0][0][8]=1.18105;
LBitProb[2][0][0][9]=1.38367;
LBitProb[2][0][0][10]=1.61959;
LBitProb[2][0][0][11]=1.94032;
LBitProb[2][0][0][12]=2.21175;
LBitProb[2][0][0][13]=2.52289;
LBitProb[2][0][0][14]=2.7911;
LBitProb[2][0][0][15]=3.18591;
LBitProb[2][0][0][16]=3.03497;
LBitProb[2][0][0][17]=1.84438;
LBitProb[2][0][0][18]=0.55234;
LBitProb[2][0][0][19]=0.110676;
LBitProb[2][0][0][20]=0.012865;
LBitProb[2][0][0][21]=0;
LBitProb[2][0][0][22]=0;
LBitProb[2][0][0][23]=0;
LBitProb[3][0][0][0]=0;
LBitProb[3][0][0][1]=0.000434385;
LBitProb[3][0][0][2]=0.000148705;
LBitProb[3][0][0][3]=0.00131765;
LBitProb[3][0][0][4]=0.0275046;
LBitProb[3][0][0][5]=0.211803;
LBitProb[3][0][0][6]=0.639891;
LBitProb[3][0][0][7]=1.09001;
LBitProb[3][0][0][8]=1.36702;
LBitProb[3][0][0][9]=1.50488;
LBitProb[3][0][0][10]=1.7569;
LBitProb[3][0][0][11]=1.95224;
LBitProb[3][0][0][12]=2.18771;
LBitProb[3][0][0][13]=2.51958;
LBitProb[3][0][0][14]=2.82044;
LBitProb[3][0][0][15]=3.24263;
LBitProb[3][0][0][16]=3.10531;
LBitProb[3][0][0][17]=1.87804;
LBitProb[3][0][0][18]=0.574635;
LBitProb[3][0][0][19]=0.109031;
LBitProb[3][0][0][20]=0.0104669;
LBitProb[3][0][0][21]=0;
LBitProb[3][0][0][22]=0;
LBitProb[3][0][0][23]=0;
LBitProb[4][0][0][0]=0;
LBitProb[4][0][0][1]=0.000873884;
LBitProb[4][0][0][2]=0.000782533;
LBitProb[4][0][0][3]=0.00191875;
LBitProb[4][0][0][4]=0.00469659;
LBitProb[4][0][0][5]=0.0420611;
LBitProb[4][0][0][6]=0.231011;
LBitProb[4][0][0][7]=0.748901;
LBitProb[4][0][0][8]=1.41646;
LBitProb[4][0][0][9]=1.80109;
LBitProb[4][0][0][10]=1.92967;
LBitProb[4][0][0][11]=2.13332;
LBitProb[4][0][0][12]=2.30532;
LBitProb[4][0][0][13]=2.55238;
LBitProb[4][0][0][14]=2.85205;
LBitProb[4][0][0][15]=3.22624;
LBitProb[4][0][0][16]=3.14198;
LBitProb[4][0][0][17]=1.90034;
LBitProb[4][0][0][18]=0.588365;
LBitProb[4][0][0][19]=0.11018;
LBitProb[4][0][0][20]=0.0119795;
LBitProb[4][0][0][21]=0.000378887;
LBitProb[4][0][0][22]=0;
LBitProb[4][0][0][23]=0;
LBitProb[5][0][0][0]=0;
LBitProb[5][0][0][1]=0.000459634;
LBitProb[5][0][0][2]=0.00208687;
LBitProb[5][0][0][3]=0.000948816;
LBitProb[5][0][0][4]=0.00115348;
LBitProb[5][0][0][5]=0.00391503;
LBitProb[5][0][0][6]=0.0294926;
LBitProb[5][0][0][7]=0.255078;
LBitProb[5][0][0][8]=0.87865;
LBitProb[5][0][0][9]=1.76073;
LBitProb[5][0][0][10]=2.25243;
LBitProb[5][0][0][11]=2.42689;
LBitProb[5][0][0][12]=2.52827;
LBitProb[5][0][0][13]=2.63611;
LBitProb[5][0][0][14]=2.9606;
LBitProb[5][0][0][15]=3.33548;
LBitProb[5][0][0][16]=3.20117;
LBitProb[5][0][0][17]=1.96728;
LBitProb[5][0][0][18]=0.623948;
LBitProb[5][0][0][19]=0.122534;
LBitProb[5][0][0][20]=0.0127706;
LBitProb[5][0][0][21]=0;
LBitProb[5][0][0][22]=0;
LBitProb[5][0][0][23]=0;
LBitProb[6][0][0][0]=0;
LBitProb[6][0][0][1]=0.000463921;
LBitProb[6][0][0][2]=0.000592606;
LBitProb[6][0][0][3]=0.00193488;
LBitProb[6][0][0][4]=0.00316887;
LBitProb[6][0][0][5]=0.00428411;
LBitProb[6][0][0][6]=0.00829207;
LBitProb[6][0][0][7]=0.0297369;
LBitProb[6][0][0][8]=0.25774;
LBitProb[6][0][0][9]=0.946259;
LBitProb[6][0][0][10]=2.12646;
LBitProb[6][0][0][11]=2.86579;
LBitProb[6][0][0][12]=2.97819;
LBitProb[6][0][0][13]=2.93901;
LBitProb[6][0][0][14]=3.09821;
LBitProb[6][0][0][15]=3.47257;
LBitProb[6][0][0][16]=3.36821;
LBitProb[6][0][0][17]=2.10089;
LBitProb[6][0][0][18]=0.664696;
LBitProb[6][0][0][19]=0.120619;
LBitProb[6][0][0][20]=0.012878;
LBitProb[6][0][0][21]=0;
LBitProb[6][0][0][22]=0;
LBitProb[6][0][0][23]=0;
LBitProb[7][0][0][0]=0;
LBitProb[7][0][0][1]=0.000551173;
LBitProb[7][0][0][2]=0.00141945;
LBitProb[7][0][0][3]=0.00255206;
LBitProb[7][0][0][4]=0.0032592;
LBitProb[7][0][0][5]=0.00511885;
LBitProb[7][0][0][6]=0.00579786;
LBitProb[7][0][0][7]=0.00957142;
LBitProb[7][0][0][8]=0.0343085;
LBitProb[7][0][0][9]=0.272785;
LBitProb[7][0][0][10]=1.09313;
LBitProb[7][0][0][11]=2.56189;
LBitProb[7][0][0][12]=3.48308;
LBitProb[7][0][0][13]=3.55189;
LBitProb[7][0][0][14]=3.56587;
LBitProb[7][0][0][15]=3.73093;
LBitProb[7][0][0][16]=3.54531;
LBitProb[7][0][0][17]=2.24786;
LBitProb[7][0][0][18]=0.742009;
LBitProb[7][0][0][19]=0.129297;
LBitProb[7][0][0][20]=0.0133764;
LBitProb[7][0][0][21]=0;
LBitProb[7][0][0][22]=0;
LBitProb[7][0][0][23]=0;
LBitProb[8][0][0][0]=0;
LBitProb[8][0][0][1]=0.000488374;
LBitProb[8][0][0][2]=0.00098157;
LBitProb[8][0][0][3]=0.00156675;
LBitProb[8][0][0][4]=0.00296474;
LBitProb[8][0][0][5]=0.00621416;
LBitProb[8][0][0][6]=0.00800125;
LBitProb[8][0][0][7]=0.00475946;
LBitProb[8][0][0][8]=0.0104919;
LBitProb[8][0][0][9]=0.0355121;
LBitProb[8][0][0][10]=0.295538;
LBitProb[8][0][0][11]=1.16967;
LBitProb[8][0][0][12]=3.01192;
LBitProb[8][0][0][13]=4.21632;
LBitProb[8][0][0][14]=4.47006;
LBitProb[8][0][0][15]=4.4338;
LBitProb[8][0][0][16]=3.893;
LBitProb[8][0][0][17]=2.443;
LBitProb[8][0][0][18]=0.82141;
LBitProb[8][0][0][19]=0.154707;
LBitProb[8][0][0][20]=0.0195919;
LBitProb[8][0][0][21]=0;
LBitProb[8][0][0][22]=0;
LBitProb[8][0][0][23]=0;
LBitProb[9][0][0][0]=0;
LBitProb[9][0][0][1]=0.000785307;
LBitProb[9][0][0][2]=0.000413288;
LBitProb[9][0][0][3]=0.00144282;
LBitProb[9][0][0][4]=0.00318363;
LBitProb[9][0][0][5]=0.00258843;
LBitProb[9][0][0][6]=0.00445494;
LBitProb[9][0][0][7]=0.00544505;
LBitProb[9][0][0][8]=0.00963591;
LBitProb[9][0][0][9]=0.0113909;
LBitProb[9][0][0][10]=0.0365557;
LBitProb[9][0][0][11]=0.258621;
LBitProb[9][0][0][12]=1.18742;
LBitProb[9][0][0][13]=3.21615;
LBitProb[9][0][0][14]=5.17961;
LBitProb[9][0][0][15]=5.8118;
LBitProb[9][0][0][16]=5.03106;
LBitProb[9][0][0][17]=3.05583;
LBitProb[9][0][0][18]=1.00407;
LBitProb[9][0][0][19]=0.161165;
LBitProb[9][0][0][20]=0.0183636;
LBitProb[9][0][0][21]=0;
LBitProb[9][0][0][22]=0;
LBitProb[9][0][0][23]=0;
LBitProb[0][1][0][0]=0.000171988;
LBitProb[0][1][0][1]=0.00559725;
LBitProb[0][1][0][2]=0.0613206;
LBitProb[0][1][0][3]=0.23819;
LBitProb[0][1][0][4]=0.454229;
LBitProb[0][1][0][5]=0.591262;
LBitProb[0][1][0][6]=0.744688;
LBitProb[0][1][0][7]=0.864802;
LBitProb[0][1][0][8]=1.05267;
LBitProb[0][1][0][9]=1.31308;
LBitProb[0][1][0][10]=1.60246;
LBitProb[0][1][0][11]=1.99509;
LBitProb[0][1][0][12]=2.23255;
LBitProb[0][1][0][13]=2.46873;
LBitProb[0][1][0][14]=2.8326;
LBitProb[0][1][0][15]=3.25328;
LBitProb[0][1][0][16]=2.94889;
LBitProb[0][1][0][17]=1.74124;
LBitProb[0][1][0][18]=0.505706;
LBitProb[0][1][0][19]=0.08859;
LBitProb[0][1][0][20]=0.0048678;
LBitProb[0][1][0][21]=0;
LBitProb[0][1][0][22]=0;
LBitProb[0][1][0][23]=0;
LBitProb[1][1][0][0]=2.5928e-05;
LBitProb[1][1][0][1]=0.0015902;
LBitProb[1][1][0][2]=0.0169907;
LBitProb[1][1][0][3]=0.134932;
LBitProb[1][1][0][4]=0.361716;
LBitProb[1][1][0][5]=0.62227;
LBitProb[1][1][0][6]=0.7879;
LBitProb[1][1][0][7]=0.905053;
LBitProb[1][1][0][8]=1.09707;
LBitProb[1][1][0][9]=1.29527;
LBitProb[1][1][0][10]=1.58402;
LBitProb[1][1][0][11]=1.94089;
LBitProb[1][1][0][12]=2.29039;
LBitProb[1][1][0][13]=2.54562;
LBitProb[1][1][0][14]=2.91841;
LBitProb[1][1][0][15]=3.19146;
LBitProb[1][1][0][16]=2.95325;
LBitProb[1][1][0][17]=1.77168;
LBitProb[1][1][0][18]=0.496724;
LBitProb[1][1][0][19]=0.0807898;
LBitProb[1][1][0][20]=0.00394471;
LBitProb[1][1][0][21]=0;
LBitProb[1][1][0][22]=0;
LBitProb[1][1][0][23]=0;
LBitProb[2][1][0][0]=0;
LBitProb[2][1][0][1]=0.000293014;
LBitProb[2][1][0][2]=0.00430039;
LBitProb[2][1][0][3]=0.0334309;
LBitProb[2][1][0][4]=0.179503;
LBitProb[2][1][0][5]=0.495305;
LBitProb[2][1][0][6]=0.84959;
LBitProb[2][1][0][7]=1.03846;
LBitProb[2][1][0][8]=1.2214;
LBitProb[2][1][0][9]=1.3632;
LBitProb[2][1][0][10]=1.67732;
LBitProb[2][1][0][11]=1.95887;
LBitProb[2][1][0][12]=2.23489;
LBitProb[2][1][0][13]=2.57348;
LBitProb[2][1][0][14]=2.90806;
LBitProb[2][1][0][15]=3.23047;
LBitProb[2][1][0][16]=2.96548;
LBitProb[2][1][0][17]=1.72029;
LBitProb[2][1][0][18]=0.460142;
LBitProb[2][1][0][19]=0.0807849;
LBitProb[2][1][0][20]=0.00472905;
LBitProb[2][1][0][21]=0;
LBitProb[2][1][0][22]=0;
LBitProb[2][1][0][23]=0;
LBitProb[3][1][0][0]=0;
LBitProb[3][1][0][1]=0;
LBitProb[3][1][0][2]=0.000652306;
LBitProb[3][1][0][3]=0.00563708;
LBitProb[3][1][0][4]=0.0420999;
LBitProb[3][1][0][5]=0.22901;
LBitProb[3][1][0][6]=0.654799;
LBitProb[3][1][0][7]=1.13715;
LBitProb[3][1][0][8]=1.40023;
LBitProb[3][1][0][9]=1.57047;
LBitProb[3][1][0][10]=1.76495;
LBitProb[3][1][0][11]=1.98449;
LBitProb[3][1][0][12]=2.22495;
LBitProb[3][1][0][13]=2.48785;
LBitProb[3][1][0][14]=2.88751;
LBitProb[3][1][0][15]=3.29529;
LBitProb[3][1][0][16]=3.03481;
LBitProb[3][1][0][17]=1.73411;
LBitProb[3][1][0][18]=0.471068;
LBitProb[3][1][0][19]=0.0726453;
LBitProb[3][1][0][20]=0.00229198;
LBitProb[3][1][0][21]=0;
LBitProb[3][1][0][22]=0;
LBitProb[3][1][0][23]=0;
LBitProb[4][1][0][0]=0;
LBitProb[4][1][0][1]=0;
LBitProb[4][1][0][2]=0;
LBitProb[4][1][0][3]=0.00102624;
LBitProb[4][1][0][4]=0.00417723;
LBitProb[4][1][0][5]=0.046612;
LBitProb[4][1][0][6]=0.241823;
LBitProb[4][1][0][7]=0.724799;
LBitProb[4][1][0][8]=1.41526;
LBitProb[4][1][0][9]=1.81502;
LBitProb[4][1][0][10]=1.87452;
LBitProb[4][1][0][11]=2.11814;
LBitProb[4][1][0][12]=2.36191;
LBitProb[4][1][0][13]=2.62273;
LBitProb[4][1][0][14]=2.96508;
LBitProb[4][1][0][15]=3.40433;
LBitProb[4][1][0][16]=3.07604;
LBitProb[4][1][0][17]=1.76555;
LBitProb[4][1][0][18]=0.481338;
LBitProb[4][1][0][19]=0.0783432;
LBitProb[4][1][0][20]=0.0032972;
LBitProb[4][1][0][21]=0;
LBitProb[4][1][0][22]=0;
LBitProb[4][1][0][23]=0;
LBitProb[5][1][0][0]=0;
LBitProb[5][1][0][1]=0.000437638;
LBitProb[5][1][0][2]=0.00138181;
LBitProb[5][1][0][3]=0.00138849;
LBitProb[5][1][0][4]=0.00271383;
LBitProb[5][1][0][5]=0.0063422;
LBitProb[5][1][0][6]=0.0413151;
LBitProb[5][1][0][7]=0.256449;
LBitProb[5][1][0][8]=0.864747;
LBitProb[5][1][0][9]=1.76367;
LBitProb[5][1][0][10]=2.28716;
LBitProb[5][1][0][11]=2.44912;
LBitProb[5][1][0][12]=2.47892;
LBitProb[5][1][0][13]=2.67863;
LBitProb[5][1][0][14]=3.04305;
LBitProb[5][1][0][15]=3.4615;
LBitProb[5][1][0][16]=3.20003;
LBitProb[5][1][0][17]=1.86358;
LBitProb[5][1][0][18]=0.517371;
LBitProb[5][1][0][19]=0.0773927;
LBitProb[5][1][0][20]=0.00478704;
LBitProb[5][1][0][21]=0;
LBitProb[5][1][0][22]=0;
LBitProb[5][1][0][23]=0;
LBitProb[6][1][0][0]=0;
LBitProb[6][1][0][1]=0.000118629;
LBitProb[6][1][0][2]=0.00180308;
LBitProb[6][1][0][3]=0.00190172;
LBitProb[6][1][0][4]=0.00162305;
LBitProb[6][1][0][5]=0.00538237;
LBitProb[6][1][0][6]=0.00641546;
LBitProb[6][1][0][7]=0.0375595;
LBitProb[6][1][0][8]=0.285234;
LBitProb[6][1][0][9]=1.01804;
LBitProb[6][1][0][10]=2.2149;
LBitProb[6][1][0][11]=2.85265;
LBitProb[6][1][0][12]=2.93255;
LBitProb[6][1][0][13]=2.95318;
LBitProb[6][1][0][14]=3.16265;
LBitProb[6][1][0][15]=3.55359;
LBitProb[6][1][0][16]=3.36318;
LBitProb[6][1][0][17]=1.94813;
LBitProb[6][1][0][18]=0.568695;
LBitProb[6][1][0][19]=0.0872756;
LBitProb[6][1][0][20]=0.00512945;
LBitProb[6][1][0][21]=0;
LBitProb[6][1][0][22]=0;
LBitProb[6][1][0][23]=0;
LBitProb[7][1][0][0]=0;
LBitProb[7][1][0][1]=3.71993e-05;
LBitProb[7][1][0][2]=0.000933877;
LBitProb[7][1][0][3]=0.00179988;
LBitProb[7][1][0][4]=0.00180482;
LBitProb[7][1][0][5]=0.00532099;
LBitProb[7][1][0][6]=0.00361433;
LBitProb[7][1][0][7]=0.00668983;
LBitProb[7][1][0][8]=0.0330309;
LBitProb[7][1][0][9]=0.292223;
LBitProb[7][1][0][10]=1.08828;
LBitProb[7][1][0][11]=2.60112;
LBitProb[7][1][0][12]=3.54911;
LBitProb[7][1][0][13]=3.67338;
LBitProb[7][1][0][14]=3.60254;
LBitProb[7][1][0][15]=3.8056;
LBitProb[7][1][0][16]=3.53575;
LBitProb[7][1][0][17]=2.08725;
LBitProb[7][1][0][18]=0.610067;
LBitProb[7][1][0][19]=0.0963639;
LBitProb[7][1][0][20]=0.00509678;
LBitProb[7][1][0][21]=0;
LBitProb[7][1][0][22]=0;
LBitProb[7][1][0][23]=0;
LBitProb[8][1][0][0]=0.000103631;
LBitProb[8][1][0][1]=0.000406573;
LBitProb[8][1][0][2]=0.000911299;
LBitProb[8][1][0][3]=0.00113857;
LBitProb[8][1][0][4]=0.00338199;
LBitProb[8][1][0][5]=0.00283286;
LBitProb[8][1][0][6]=0.00497883;
LBitProb[8][1][0][7]=0.00798557;
LBitProb[8][1][0][8]=0.0123553;
LBitProb[8][1][0][9]=0.0357322;
LBitProb[8][1][0][10]=0.281745;
LBitProb[8][1][0][11]=1.18958;
LBitProb[8][1][0][12]=2.96938;
LBitProb[8][1][0][13]=4.33262;
LBitProb[8][1][0][14]=4.50365;
LBitProb[8][1][0][15]=4.51428;
LBitProb[8][1][0][16]=3.94771;
LBitProb[8][1][0][17]=2.32819;
LBitProb[8][1][0][18]=0.727419;
LBitProb[8][1][0][19]=0.124185;
LBitProb[8][1][0][20]=0.0114044;
LBitProb[8][1][0][21]=0;
LBitProb[8][1][0][22]=0;
LBitProb[8][1][0][23]=0;
LBitProb[9][1][0][0]=1.94384e-05;
LBitProb[9][1][0][1]=0.000937662;
LBitProb[9][1][0][2]=5.32342e-05;
LBitProb[9][1][0][3]=0.00161241;
LBitProb[9][1][0][4]=0.00625597;
LBitProb[9][1][0][5]=0.00519016;
LBitProb[9][1][0][6]=0.00539623;
LBitProb[9][1][0][7]=0.0060683;
LBitProb[9][1][0][8]=0.00785225;
LBitProb[9][1][0][9]=0.010529;
LBitProb[9][1][0][10]=0.040615;
LBitProb[9][1][0][11]=0.275581;
LBitProb[9][1][0][12]=1.21916;
LBitProb[9][1][0][13]=3.3565;
LBitProb[9][1][0][14]=5.41719;
LBitProb[9][1][0][15]=5.91982;
LBitProb[9][1][0][16]=4.95499;
LBitProb[9][1][0][17]=2.80954;
LBitProb[9][1][0][18]=0.824528;
LBitProb[9][1][0][19]=0.126682;
LBitProb[9][1][0][20]=0.011491;
LBitProb[9][1][0][21]=0;
LBitProb[9][1][0][22]=0;
LBitProb[9][1][0][23]=0;
LBitProb[0][2][0][0]=0.000664954;
LBitProb[0][2][0][1]=0.00860027;
LBitProb[0][2][0][2]=0.0694502;
LBitProb[0][2][0][3]=0.207926;
LBitProb[0][2][0][4]=0.382845;
LBitProb[0][2][0][5]=0.559233;
LBitProb[0][2][0][6]=0.692578;
LBitProb[0][2][0][7]=0.829076;
LBitProb[0][2][0][8]=1.02352;
LBitProb[0][2][0][9]=1.28998;
LBitProb[0][2][0][10]=1.61355;
LBitProb[0][2][0][11]=1.9472;
LBitProb[0][2][0][12]=2.29627;
LBitProb[0][2][0][13]=2.60143;
LBitProb[0][2][0][14]=2.98411;
LBitProb[0][2][0][15]=3.23016;
LBitProb[0][2][0][16]=2.94283;
LBitProb[0][2][0][17]=1.73863;
LBitProb[0][2][0][18]=0.505031;
LBitProb[0][2][0][19]=0.0749961;
LBitProb[0][2][0][20]=0.00170333;
LBitProb[0][2][0][21]=0.000222358;
LBitProb[0][2][0][22]=0;
LBitProb[0][2][0][23]=0;
LBitProb[1][2][0][0]=4.41465e-05;
LBitProb[1][2][0][1]=0.00167866;
LBitProb[1][2][0][2]=0.0229872;
LBitProb[1][2][0][3]=0.126063;
LBitProb[1][2][0][4]=0.341523;
LBitProb[1][2][0][5]=0.587315;
LBitProb[1][2][0][6]=0.742847;
LBitProb[1][2][0][7]=0.882446;
LBitProb[1][2][0][8]=1.0353;
LBitProb[1][2][0][9]=1.32878;
LBitProb[1][2][0][10]=1.62105;
LBitProb[1][2][0][11]=1.96566;
LBitProb[1][2][0][12]=2.28823;
LBitProb[1][2][0][13]=2.58864;
LBitProb[1][2][0][14]=3.02204;
LBitProb[1][2][0][15]=3.28563;
LBitProb[1][2][0][16]=2.8988;
LBitProb[1][2][0][17]=1.6697;
LBitProb[1][2][0][18]=0.503446;
LBitProb[1][2][0][19]=0.0853993;
LBitProb[1][2][0][20]=0.00200439;
LBitProb[1][2][0][21]=0.00041711;
LBitProb[1][2][0][22]=0;
LBitProb[1][2][0][23]=0;
LBitProb[2][2][0][0]=0;
LBitProb[2][2][0][1]=0.000208192;
LBitProb[2][2][0][2]=0.00494905;
LBitProb[2][2][0][3]=0.0420767;
LBitProb[2][2][0][4]=0.175281;
LBitProb[2][2][0][5]=0.440459;
LBitProb[2][2][0][6]=0.789374;
LBitProb[2][2][0][7]=0.982463;
LBitProb[2][2][0][8]=1.15729;
LBitProb[2][2][0][9]=1.40332;
LBitProb[2][2][0][10]=1.66632;
LBitProb[2][2][0][11]=1.97663;
LBitProb[2][2][0][12]=2.331;
LBitProb[2][2][0][13]=2.61349;
LBitProb[2][2][0][14]=3.019;
LBitProb[2][2][0][15]=3.29767;
LBitProb[2][2][0][16]=2.8485;
LBitProb[2][2][0][17]=1.65786;
LBitProb[2][2][0][18]=0.515482;
LBitProb[2][2][0][19]=0.0763695;
LBitProb[2][2][0][20]=0.00192347;
LBitProb[2][2][0][21]=0.000357384;
LBitProb[2][2][0][22]=0;
LBitProb[2][2][0][23]=0;
LBitProb[3][2][0][0]=0.000229044;
LBitProb[3][2][0][1]=0.00142885;
LBitProb[3][2][0][2]=0.00154236;
LBitProb[3][2][0][3]=0.00713028;
LBitProb[3][2][0][4]=0.0465442;
LBitProb[3][2][0][5]=0.214343;
LBitProb[3][2][0][6]=0.567324;
LBitProb[3][2][0][7]=1.00661;
LBitProb[3][2][0][8]=1.35488;
LBitProb[3][2][0][9]=1.5542;
LBitProb[3][2][0][10]=1.754;
LBitProb[3][2][0][11]=1.99976;
LBitProb[3][2][0][12]=2.30656;
LBitProb[3][2][0][13]=2.65913;
LBitProb[3][2][0][14]=3.02151;
LBitProb[3][2][0][15]=3.31652;
LBitProb[3][2][0][16]=2.91036;
LBitProb[3][2][0][17]=1.6854;
LBitProb[3][2][0][18]=0.519554;
LBitProb[3][2][0][19]=0.0712539;
LBitProb[3][2][0][20]=0.00142154;
LBitProb[3][2][0][21]=0.000294097;
LBitProb[3][2][0][22]=0;
LBitProb[3][2][0][23]=0;
LBitProb[4][2][0][0]=2.28264e-05;
LBitProb[4][2][0][1]=0.00044579;
LBitProb[4][2][0][2]=0.00160953;
LBitProb[4][2][0][3]=0.00271992;
LBitProb[4][2][0][4]=0.00956433;
LBitProb[4][2][0][5]=0.0529235;
LBitProb[4][2][0][6]=0.233222;
LBitProb[4][2][0][7]=0.669249;
LBitProb[4][2][0][8]=1.30386;
LBitProb[4][2][0][9]=1.7679;
LBitProb[4][2][0][10]=1.96259;
LBitProb[4][2][0][11]=2.1338;
LBitProb[4][2][0][12]=2.41241;
LBitProb[4][2][0][13]=2.70496;
LBitProb[4][2][0][14]=3.07565;
LBitProb[4][2][0][15]=3.37442;
LBitProb[4][2][0][16]=2.97761;
LBitProb[4][2][0][17]=1.7238;
LBitProb[4][2][0][18]=0.516854;
LBitProb[4][2][0][19]=0.0750102;
LBitProb[4][2][0][20]=0.0012315;
LBitProb[4][2][0][21]=0.000159028;
LBitProb[4][2][0][22]=0;
LBitProb[4][2][0][23]=0;
LBitProb[5][2][0][0]=0.000135118;
LBitProb[5][2][0][1]=0.000826771;
LBitProb[5][2][0][2]=0.00126849;
LBitProb[5][2][0][3]=0.00135843;
LBitProb[5][2][0][4]=0.00337973;
LBitProb[5][2][0][5]=0.00929067;
LBitProb[5][2][0][6]=0.0524393;
LBitProb[5][2][0][7]=0.247917;
LBitProb[5][2][0][8]=0.789497;
LBitProb[5][2][0][9]=1.64217;
LBitProb[5][2][0][10]=2.25531;
LBitProb[5][2][0][11]=2.42975;
LBitProb[5][2][0][12]=2.58156;
LBitProb[5][2][0][13]=2.7958;
LBitProb[5][2][0][14]=3.14704;
LBitProb[5][2][0][15]=3.52516;
LBitProb[5][2][0][16]=3.1033;
LBitProb[5][2][0][17]=1.78829;
LBitProb[5][2][0][18]=0.545538;
LBitProb[5][2][0][19]=0.0783568;
LBitProb[5][2][0][20]=0.00149583;
LBitProb[5][2][0][21]=0.000132607;
LBitProb[5][2][0][22]=0;
LBitProb[5][2][0][23]=0;
LBitProb[6][2][0][0]=0;
LBitProb[6][2][0][1]=0;
LBitProb[6][2][0][2]=0.000476926;
LBitProb[6][2][0][3]=0.00250888;
LBitProb[6][2][0][4]=0.00315124;
LBitProb[6][2][0][5]=0.00282568;
LBitProb[6][2][0][6]=0.00708788;
LBitProb[6][2][0][7]=0.0533542;
LBitProb[6][2][0][8]=0.271847;
LBitProb[6][2][0][9]=0.928461;
LBitProb[6][2][0][10]=2.02528;
LBitProb[6][2][0][11]=2.80613;
LBitProb[6][2][0][12]=3.01455;
LBitProb[6][2][0][13]=3.08265;
LBitProb[6][2][0][14]=3.3551;
LBitProb[6][2][0][15]=3.60677;
LBitProb[6][2][0][16]=3.26903;
LBitProb[6][2][0][17]=1.93014;
LBitProb[6][2][0][18]=0.567813;
LBitProb[6][2][0][19]=0.0711799;
LBitProb[6][2][0][20]=0.00146294;
LBitProb[6][2][0][21]=0.000193986;
LBitProb[6][2][0][22]=0;
LBitProb[6][2][0][23]=0;
LBitProb[7][2][0][0]=0;
LBitProb[7][2][0][1]=7.38355e-05;
LBitProb[7][2][0][2]=0.00123173;
LBitProb[7][2][0][3]=0.00241566;
LBitProb[7][2][0][4]=0.00329513;
LBitProb[7][2][0][5]=0.00506762;
LBitProb[7][2][0][6]=0.00569457;
LBitProb[7][2][0][7]=0.00938814;
LBitProb[7][2][0][8]=0.0586969;
LBitProb[7][2][0][9]=0.300633;
LBitProb[7][2][0][10]=1.04142;
LBitProb[7][2][0][11]=2.37644;
LBitProb[7][2][0][12]=3.51612;
LBitProb[7][2][0][13]=3.70549;
LBitProb[7][2][0][14]=3.76942;
LBitProb[7][2][0][15]=3.91053;
LBitProb[7][2][0][16]=3.48831;
LBitProb[7][2][0][17]=2.07343;
LBitProb[7][2][0][18]=0.648994;
LBitProb[7][2][0][19]=0.0818706;
LBitProb[7][2][0][20]=0.00149191;
LBitProb[7][2][0][21]=0;
LBitProb[7][2][0][22]=0;
LBitProb[7][2][0][23]=0;
LBitProb[8][2][0][0]=3.35613e-05;
LBitProb[8][2][0][1]=0.000669691;
LBitProb[8][2][0][2]=0.000877177;
LBitProb[8][2][0][3]=0.000799914;
LBitProb[8][2][0][4]=0.0026425;
LBitProb[8][2][0][5]=0.00372112;
LBitProb[8][2][0][6]=0.00650242;
LBitProb[8][2][0][7]=0.00440306;
LBitProb[8][2][0][8]=0.0150137;
LBitProb[8][2][0][9]=0.0598721;
LBitProb[8][2][0][10]=0.267677;
LBitProb[8][2][0][11]=1.12083;
LBitProb[8][2][0][12]=2.80449;
LBitProb[8][2][0][13]=4.33692;
LBitProb[8][2][0][14]=4.69461;
LBitProb[8][2][0][15]=4.65813;
LBitProb[8][2][0][16]=3.9566;
LBitProb[8][2][0][17]=2.28953;
LBitProb[8][2][0][18]=0.689981;
LBitProb[8][2][0][19]=0.0835928;
LBitProb[8][2][0][20]=0.0028737;
LBitProb[8][2][0][21]=0.000229171;
LBitProb[8][2][0][22]=0;
LBitProb[8][2][0][23]=0;
LBitProb[9][2][0][0]=0.000214462;
LBitProb[9][2][0][1]=0.00188704;
LBitProb[9][2][0][2]=0.00130569;
LBitProb[9][2][0][3]=0.00117619;
LBitProb[9][2][0][4]=0.00258537;
LBitProb[9][2][0][5]=0.00272645;
LBitProb[9][2][0][6]=0.00460813;
LBitProb[9][2][0][7]=0.00519736;
LBitProb[9][2][0][8]=0.00683034;
LBitProb[9][2][0][9]=0.0161426;
LBitProb[9][2][0][10]=0.0481097;
LBitProb[9][2][0][11]=0.26118;
LBitProb[9][2][0][12]=1.1453;
LBitProb[9][2][0][13]=3.19123;
LBitProb[9][2][0][14]=5.51424;
LBitProb[9][2][0][15]=6.13506;
LBitProb[9][2][0][16]=4.96586;
LBitProb[9][2][0][17]=2.74415;
LBitProb[9][2][0][18]=0.838838;
LBitProb[9][2][0][19]=0.10903;
LBitProb[9][2][0][20]=0.00406126;
LBitProb[9][2][0][21]=0.000258236;
LBitProb[9][2][0][22]=0;
LBitProb[9][2][0][23]=0;
LBitProb[0][3][0][0]=0.000651305;
LBitProb[0][3][0][1]=0.00644148;
LBitProb[0][3][0][2]=0.040038;
LBitProb[0][3][0][3]=0.141909;
LBitProb[0][3][0][4]=0.272126;
LBitProb[0][3][0][5]=0.39835;
LBitProb[0][3][0][6]=0.548729;
LBitProb[0][3][0][7]=0.729479;
LBitProb[0][3][0][8]=0.921808;
LBitProb[0][3][0][9]=1.18605;
LBitProb[0][3][0][10]=1.49246;
LBitProb[0][3][0][11]=1.86997;
LBitProb[0][3][0][12]=2.22998;
LBitProb[0][3][0][13]=2.64548;
LBitProb[0][3][0][14]=3.0367;
LBitProb[0][3][0][15]=3.36954;
LBitProb[0][3][0][16]=3.1086;
LBitProb[0][3][0][17]=2.0435;
LBitProb[0][3][0][18]=0.796731;
LBitProb[0][3][0][19]=0.150103;
LBitProb[0][3][0][20]=0.00948212;
LBitProb[0][3][0][21]=0.00185958;
LBitProb[0][3][0][22]=0;
LBitProb[0][3][0][23]=0;
LBitProb[1][3][0][0]=0.0010133;
LBitProb[1][3][0][1]=0.00308739;
LBitProb[1][3][0][2]=0.0183854;
LBitProb[1][3][0][3]=0.0855047;
LBitProb[1][3][0][4]=0.235136;
LBitProb[1][3][0][5]=0.434668;
LBitProb[1][3][0][6]=0.607518;
LBitProb[1][3][0][7]=0.763249;
LBitProb[1][3][0][8]=0.936081;
LBitProb[1][3][0][9]=1.16304;
LBitProb[1][3][0][10]=1.46838;
LBitProb[1][3][0][11]=1.8587;
LBitProb[1][3][0][12]=2.2503;
LBitProb[1][3][0][13]=2.62765;
LBitProb[1][3][0][14]=3.06314;
LBitProb[1][3][0][15]=3.38167;
LBitProb[1][3][0][16]=3.09501;
LBitProb[1][3][0][17]=2.03109;
LBitProb[1][3][0][18]=0.80803;
LBitProb[1][3][0][19]=0.157475;
LBitProb[1][3][0][20]=0.00952234;
LBitProb[1][3][0][21]=0.00134626;
LBitProb[1][3][0][22]=0;
LBitProb[1][3][0][23]=0;
LBitProb[2][3][0][0]=0.000565815;
LBitProb[2][3][0][1]=0.000635481;
LBitProb[2][3][0][2]=0.00323725;
LBitProb[2][3][0][3]=0.0245631;
LBitProb[2][3][0][4]=0.108479;
LBitProb[2][3][0][5]=0.307727;
LBitProb[2][3][0][6]=0.594088;
LBitProb[2][3][0][7]=0.853621;
LBitProb[2][3][0][8]=1.01942;
LBitProb[2][3][0][9]=1.22352;
LBitProb[2][3][0][10]=1.49633;
LBitProb[2][3][0][11]=1.85384;
LBitProb[2][3][0][12]=2.24186;
LBitProb[2][3][0][13]=2.64744;
LBitProb[2][3][0][14]=3.1411;
LBitProb[2][3][0][15]=3.36993;
LBitProb[2][3][0][16]=3.06808;
LBitProb[2][3][0][17]=2.05542;
LBitProb[2][3][0][18]=0.819591;
LBitProb[2][3][0][19]=0.158571;
LBitProb[2][3][0][20]=0.00995357;
LBitProb[2][3][0][21]=0.00203611;
LBitProb[2][3][0][22]=0;
LBitProb[2][3][0][23]=0;
LBitProb[3][3][0][0]=0.000372008;
LBitProb[3][3][0][1]=0.000641472;
LBitProb[3][3][0][2]=0.00236826;
LBitProb[3][3][0][3]=0.00799188;
LBitProb[3][3][0][4]=0.0366378;
LBitProb[3][3][0][5]=0.132983;
LBitProb[3][3][0][6]=0.381939;
LBitProb[3][3][0][7]=0.770679;
LBitProb[3][3][0][8]=1.13113;
LBitProb[3][3][0][9]=1.38433;
LBitProb[3][3][0][10]=1.59487;
LBitProb[3][3][0][11]=1.91218;
LBitProb[3][3][0][12]=2.27843;
LBitProb[3][3][0][13]=2.64618;
LBitProb[3][3][0][14]=3.08691;
LBitProb[3][3][0][15]=3.4242;
LBitProb[3][3][0][16]=3.17072;
LBitProb[3][3][0][17]=2.08324;
LBitProb[3][3][0][18]=0.801194;
LBitProb[3][3][0][19]=0.141473;
LBitProb[3][3][0][20]=0.00925283;
LBitProb[3][3][0][21]=0.00227462;
LBitProb[3][3][0][22]=0;
LBitProb[3][3][0][23]=0;
LBitProb[4][3][0][0]=0.000206618;
LBitProb[4][3][0][1]=0.000301093;
LBitProb[4][3][0][2]=0.00066139;
LBitProb[4][3][0][3]=0.00201741;
LBitProb[4][3][0][4]=0.00769821;
LBitProb[4][3][0][5]=0.0354599;
LBitProb[4][3][0][6]=0.155398;
LBitProb[4][3][0][7]=0.462519;
LBitProb[4][3][0][8]=0.998272;
LBitProb[4][3][0][9]=1.50369;
LBitProb[4][3][0][10]=1.78236;
LBitProb[4][3][0][11]=2.01048;
LBitProb[4][3][0][12]=2.33177;
LBitProb[4][3][0][13]=2.68751;
LBitProb[4][3][0][14]=3.11832;
LBitProb[4][3][0][15]=3.5327;
LBitProb[4][3][0][16]=3.25883;
LBitProb[4][3][0][17]=2.12431;
LBitProb[4][3][0][18]=0.82369;
LBitProb[4][3][0][19]=0.151565;
LBitProb[4][3][0][20]=0.0099329;
LBitProb[4][3][0][21]=0.00231326;
LBitProb[4][3][0][22]=0;
LBitProb[4][3][0][23]=0;
LBitProb[5][3][0][0]=0.000560935;
LBitProb[5][3][0][1]=0.000626245;
LBitProb[5][3][0][2]=0.000591148;
LBitProb[5][3][0][3]=0.000509253;
LBitProb[5][3][0][4]=0.0023283;
LBitProb[5][3][0][5]=0.00916598;
LBitProb[5][3][0][6]=0.0377707;
LBitProb[5][3][0][7]=0.167237;
LBitProb[5][3][0][8]=0.555067;
LBitProb[5][3][0][9]=1.27596;
LBitProb[5][3][0][10]=2.00093;
LBitProb[5][3][0][11]=2.36121;
LBitProb[5][3][0][12]=2.52264;
LBitProb[5][3][0][13]=2.79412;
LBitProb[5][3][0][14]=3.21877;
LBitProb[5][3][0][15]=3.5668;
LBitProb[5][3][0][16]=3.28838;
LBitProb[5][3][0][17]=2.18381;
LBitProb[5][3][0][18]=0.848063;
LBitProb[5][3][0][19]=0.152888;
LBitProb[5][3][0][20]=0.0112312;
LBitProb[5][3][0][21]=0.00134756;
LBitProb[5][3][0][22]=0;
LBitProb[5][3][0][23]=0;
LBitProb[6][3][0][0]=0;
LBitProb[6][3][0][1]=0;
LBitProb[6][3][0][2]=0.000299147;
LBitProb[6][3][0][3]=0.00157194;
LBitProb[6][3][0][4]=0.00261668;
LBitProb[6][3][0][5]=0.00273404;
LBitProb[6][3][0][6]=0.00698609;
LBitProb[6][3][0][7]=0.0351175;
LBitProb[6][3][0][8]=0.176627;
LBitProb[6][3][0][9]=0.63589;
LBitProb[6][3][0][10]=1.57346;
LBitProb[6][3][0][11]=2.52581;
LBitProb[6][3][0][12]=2.91865;
LBitProb[6][3][0][13]=3.11013;
LBitProb[6][3][0][14]=3.41048;
LBitProb[6][3][0][15]=3.73169;
LBitProb[6][3][0][16]=3.4604;
LBitProb[6][3][0][17]=2.29363;
LBitProb[6][3][0][18]=0.92668;
LBitProb[6][3][0][19]=0.175329;
LBitProb[6][3][0][20]=0.00976399;
LBitProb[6][3][0][21]=0.00214261;
LBitProb[6][3][0][22]=0;
LBitProb[6][3][0][23]=0;
LBitProb[7][3][0][0]=0.000275028;
LBitProb[7][3][0][1]=0.000551491;
LBitProb[7][3][0][2]=0.000626558;
LBitProb[7][3][0][3]=0.00121592;
LBitProb[7][3][0][4]=0.00168786;
LBitProb[7][3][0][5]=0.00230222;
LBitProb[7][3][0][6]=0.00349067;
LBitProb[7][3][0][7]=0.00837499;
LBitProb[7][3][0][8]=0.0386337;
LBitProb[7][3][0][9]=0.18657;
LBitProb[7][3][0][10]=0.721595;
LBitProb[7][3][0][11]=1.89215;
LBitProb[7][3][0][12]=3.1064;
LBitProb[7][3][0][13]=3.67272;
LBitProb[7][3][0][14]=3.9341;
LBitProb[7][3][0][15]=4.10723;
LBitProb[7][3][0][16]=3.6851;
LBitProb[7][3][0][17]=2.4537;
LBitProb[7][3][0][18]=0.981149;
LBitProb[7][3][0][19]=0.188892;
LBitProb[7][3][0][20]=0.0103622;
LBitProb[7][3][0][21]=0.00286984;
LBitProb[7][3][0][22]=0;
LBitProb[7][3][0][23]=0;
LBitProb[8][3][0][0]=0.000280606;
LBitProb[8][3][0][1]=0.000661433;
LBitProb[8][3][0][2]=0.000817169;
LBitProb[8][3][0][3]=0.0013046;
LBitProb[8][3][0][4]=0.00148852;
LBitProb[8][3][0][5]=0.0015699;
LBitProb[8][3][0][6]=0.00313975;
LBitProb[8][3][0][7]=0.00481952;
LBitProb[8][3][0][8]=0.0111198;
LBitProb[8][3][0][9]=0.0409954;
LBitProb[8][3][0][10]=0.202834;
LBitProb[8][3][0][11]=0.788637;
LBitProb[8][3][0][12]=2.16081;
LBitProb[8][3][0][13]=3.90052;
LBitProb[8][3][0][14]=4.76722;
LBitProb[8][3][0][15]=4.82493;
LBitProb[8][3][0][16]=4.21736;
LBitProb[8][3][0][17]=2.74025;
LBitProb[8][3][0][18]=1.10267;
LBitProb[8][3][0][19]=0.215434;
LBitProb[8][3][0][20]=0.0113148;
LBitProb[8][3][0][21]=0.00182287;
LBitProb[8][3][0][22]=0;
LBitProb[8][3][0][23]=0;
LBitProb[9][3][0][0]=6.07133e-05;
LBitProb[9][3][0][1]=0.000497107;
LBitProb[9][3][0][2]=0.0016873;
LBitProb[9][3][0][3]=0.00176909;
LBitProb[9][3][0][4]=0.00144315;
LBitProb[9][3][0][5]=0.00169824;
LBitProb[9][3][0][6]=0.0039356;
LBitProb[9][3][0][7]=0.00464202;
LBitProb[9][3][0][8]=0.00630191;
LBitProb[9][3][0][9]=0.0127687;
LBitProb[9][3][0][10]=0.0442325;
LBitProb[9][3][0][11]=0.19624;
LBitProb[9][3][0][12]=0.825716;
LBitProb[9][3][0][13]=2.4996;
LBitProb[9][3][0][14]=4.91517;
LBitProb[9][3][0][15]=6.1817;
LBitProb[9][3][0][16]=5.45469;
LBitProb[9][3][0][17]=3.35044;
LBitProb[9][3][0][18]=1.25668;
LBitProb[9][3][0][19]=0.225747;
LBitProb[9][3][0][20]=0.0122282;
LBitProb[9][3][0][21]=0.00275758;
LBitProb[9][3][0][22]=0;
LBitProb[9][3][0][23]=0;
LBitProb[0][4][0][0]=0.000374104;
LBitProb[0][4][0][1]=0.00327224;
LBitProb[0][4][0][2]=0.0178007;
LBitProb[0][4][0][3]=0.0560201;
LBitProb[0][4][0][4]=0.149122;
LBitProb[0][4][0][5]=0.279082;
LBitProb[0][4][0][6]=0.379649;
LBitProb[0][4][0][7]=0.495119;
LBitProb[0][4][0][8]=0.636894;
LBitProb[0][4][0][9]=0.864667;
LBitProb[0][4][0][10]=1.19667;
LBitProb[0][4][0][11]=1.58286;
LBitProb[0][4][0][12]=2.00409;
LBitProb[0][4][0][13]=2.50023;
LBitProb[0][4][0][14]=3.02862;
LBitProb[0][4][0][15]=3.54355;
LBitProb[0][4][0][16]=3.63799;
LBitProb[0][4][0][17]=2.90094;
LBitProb[0][4][0][18]=1.39014;
LBitProb[0][4][0][19]=0.297942;
LBitProb[0][4][0][20]=0.0305789;
LBitProb[0][4][0][21]=0.00438874;
LBitProb[0][4][0][22]=0;
LBitProb[0][4][0][23]=0;
LBitProb[1][4][0][0]=0.000173546;
LBitProb[1][4][0][1]=0.00138386;
LBitProb[1][4][0][2]=0.00607354;
LBitProb[1][4][0][3]=0.0357795;
LBitProb[1][4][0][4]=0.107325;
LBitProb[1][4][0][5]=0.219563;
LBitProb[1][4][0][6]=0.380806;
LBitProb[1][4][0][7]=0.524672;
LBitProb[1][4][0][8]=0.69701;
LBitProb[1][4][0][9]=0.901942;
LBitProb[1][4][0][10]=1.19221;
LBitProb[1][4][0][11]=1.57204;
LBitProb[1][4][0][12]=1.99188;
LBitProb[1][4][0][13]=2.47812;
LBitProb[1][4][0][14]=3.01244;
LBitProb[1][4][0][15]=3.50872;
LBitProb[1][4][0][16]=3.69824;
LBitProb[1][4][0][17]=2.90793;
LBitProb[1][4][0][18]=1.40776;
LBitProb[1][4][0][19]=0.317468;
LBitProb[1][4][0][20]=0.0335382;
LBitProb[1][4][0][21]=0.00492098;
LBitProb[1][4][0][22]=0;
LBitProb[1][4][0][23]=0;
LBitProb[2][4][0][0]=0;
LBitProb[2][4][0][1]=0.000253736;
LBitProb[2][4][0][2]=0.000891592;
LBitProb[2][4][0][3]=0.0107244;
LBitProb[2][4][0][4]=0.0473856;
LBitProb[2][4][0][5]=0.148495;
LBitProb[2][4][0][6]=0.338804;
LBitProb[2][4][0][7]=0.550111;
LBitProb[2][4][0][8]=0.716743;
LBitProb[2][4][0][9]=0.916097;
LBitProb[2][4][0][10]=1.19247;
LBitProb[2][4][0][11]=1.56965;
LBitProb[2][4][0][12]=2.00716;
LBitProb[2][4][0][13]=2.51303;
LBitProb[2][4][0][14]=3.05905;
LBitProb[2][4][0][15]=3.54652;
LBitProb[2][4][0][16]=3.7263;
LBitProb[2][4][0][17]=2.90359;
LBitProb[2][4][0][18]=1.412;
LBitProb[2][4][0][19]=0.307009;
LBitProb[2][4][0][20]=0.0301008;
LBitProb[2][4][0][21]=0.00360419;
LBitProb[2][4][0][22]=0;
LBitProb[2][4][0][23]=0;
LBitProb[3][4][0][0]=0;
LBitProb[3][4][0][1]=0.000327204;
LBitProb[3][4][0][2]=0.00134345;
LBitProb[3][4][0][3]=0.00297881;
LBitProb[3][4][0][4]=0.012761;
LBitProb[3][4][0][5]=0.061112;
LBitProb[3][4][0][6]=0.198845;
LBitProb[3][4][0][7]=0.443658;
LBitProb[3][4][0][8]=0.735943;
LBitProb[3][4][0][9]=1.04215;
LBitProb[3][4][0][10]=1.31261;
LBitProb[3][4][0][11]=1.63313;
LBitProb[3][4][0][12]=2.03201;
LBitProb[3][4][0][13]=2.4312;
LBitProb[3][4][0][14]=3.00194;
LBitProb[3][4][0][15]=3.69768;
LBitProb[3][4][0][16]=3.77871;
LBitProb[3][4][0][17]=2.9339;
LBitProb[3][4][0][18]=1.35418;
LBitProb[3][4][0][19]=0.294546;
LBitProb[3][4][0][20]=0.0278413;
LBitProb[3][4][0][21]=0.00313599;
LBitProb[3][4][0][22]=0;
LBitProb[3][4][0][23]=0;
LBitProb[4][4][0][0]=0;
LBitProb[4][4][0][1]=0;
LBitProb[4][4][0][2]=0.000294613;
LBitProb[4][4][0][3]=0.00217843;
LBitProb[4][4][0][4]=0.00530191;
LBitProb[4][4][0][5]=0.0150532;
LBitProb[4][4][0][6]=0.0639719;
LBitProb[4][4][0][7]=0.210167;
LBitProb[4][4][0][8]=0.55577;
LBitProb[4][4][0][9]=1.01401;
LBitProb[4][4][0][10]=1.39976;
LBitProb[4][4][0][11]=1.72435;
LBitProb[4][4][0][12]=2.10466;
LBitProb[4][4][0][13]=2.54899;
LBitProb[4][4][0][14]=3.07738;
LBitProb[4][4][0][15]=3.70873;
LBitProb[4][4][0][16]=3.84071;
LBitProb[4][4][0][17]=2.95822;
LBitProb[4][4][0][18]=1.42871;
LBitProb[4][4][0][19]=0.308494;
LBitProb[4][4][0][20]=0.0295297;
LBitProb[4][4][0][21]=0.00372254;
LBitProb[4][4][0][22]=0;
LBitProb[4][4][0][23]=0;
LBitProb[5][4][0][0]=0;
LBitProb[5][4][0][1]=0.000236088;
LBitProb[5][4][0][2]=0.000693917;
LBitProb[5][4][0][3]=0.000468576;
LBitProb[5][4][0][4]=0.0017848;
LBitProb[5][4][0][5]=0.00456954;
LBitProb[5][4][0][6]=0.0151836;
LBitProb[5][4][0][7]=0.0782255;
LBitProb[5][4][0][8]=0.274124;
LBitProb[5][4][0][9]=0.740832;
LBitProb[5][4][0][10]=1.39494;
LBitProb[5][4][0][11]=1.87264;
LBitProb[5][4][0][12]=2.26173;
LBitProb[5][4][0][13]=2.65531;
LBitProb[5][4][0][14]=3.15514;
LBitProb[5][4][0][15]=3.6692;
LBitProb[5][4][0][16]=3.95126;
LBitProb[5][4][0][17]=3.07066;
LBitProb[5][4][0][18]=1.47017;
LBitProb[5][4][0][19]=0.346343;
LBitProb[5][4][0][20]=0.033395;
LBitProb[5][4][0][21]=0.00307869;
LBitProb[5][4][0][22]=0;
LBitProb[5][4][0][23]=0;
LBitProb[6][4][0][0]=0;
LBitProb[6][4][0][1]=0;
LBitProb[6][4][0][2]=0.00053106;
LBitProb[6][4][0][3]=0.000894795;
LBitProb[6][4][0][4]=0.000311044;
LBitProb[6][4][0][5]=0.000605914;
LBitProb[6][4][0][6]=0.00446395;
LBitProb[6][4][0][7]=0.0162276;
LBitProb[6][4][0][8]=0.0860579;
LBitProb[6][4][0][9]=0.323519;
LBitProb[6][4][0][10]=0.915835;
LBitProb[6][4][0][11]=1.79479;
LBitProb[6][4][0][12]=2.47714;
LBitProb[6][4][0][13]=2.93092;
LBitProb[6][4][0][14]=3.35856;
LBitProb[6][4][0][15]=3.80051;
LBitProb[6][4][0][16]=4.04826;
LBitProb[6][4][0][17]=3.23411;
LBitProb[6][4][0][18]=1.59492;
LBitProb[6][4][0][19]=0.373968;
LBitProb[6][4][0][20]=0.0344966;
LBitProb[6][4][0][21]=0.00387829;
LBitProb[6][4][0][22]=0;
LBitProb[6][4][0][23]=0;
LBitProb[7][4][0][0]=0;
LBitProb[7][4][0][1]=0;
LBitProb[7][4][0][2]=0.00111672;
LBitProb[7][4][0][3]=0.0012258;
LBitProb[7][4][0][4]=0.000799395;
LBitProb[7][4][0][5]=0.00193984;
LBitProb[7][4][0][6]=0.004626;
LBitProb[7][4][0][7]=0.00872958;
LBitProb[7][4][0][8]=0.022793;
LBitProb[7][4][0][9]=0.0952203;
LBitProb[7][4][0][10]=0.370886;
LBitProb[7][4][0][11]=1.11101;
LBitProb[7][4][0][12]=2.3057;
LBitProb[7][4][0][13]=3.26946;
LBitProb[7][4][0][14]=3.78935;
LBitProb[7][4][0][15]=4.19979;
LBitProb[7][4][0][16]=4.26629;
LBitProb[7][4][0][17]=3.41614;
LBitProb[7][4][0][18]=1.70064;
LBitProb[7][4][0][19]=0.391658;
LBitProb[7][4][0][20]=0.0370737;
LBitProb[7][4][0][21]=0.00555047;
LBitProb[7][4][0][22]=0;
LBitProb[7][4][0][23]=0;
LBitProb[8][4][0][0]=0.000268741;
LBitProb[8][4][0][1]=0.000565743;
LBitProb[8][4][0][2]=0.000552641;
LBitProb[8][4][0][3]=0.000812785;
LBitProb[8][4][0][4]=0.0019719;
LBitProb[8][4][0][5]=0.00223161;
LBitProb[8][4][0][6]=0.00205199;
LBitProb[8][4][0][7]=0.00332481;
LBitProb[8][4][0][8]=0.00703684;
LBitProb[8][4][0][9]=0.0224375;
LBitProb[8][4][0][10]=0.0992732;
LBitProb[8][4][0][11]=0.394478;
LBitProb[8][4][0][12]=1.26434;
LBitProb[8][4][0][13]=2.87038;
LBitProb[8][4][0][14]=4.34114;
LBitProb[8][4][0][15]=4.90802;
LBitProb[8][4][0][16]=4.90948;
LBitProb[8][4][0][17]=3.7965;
LBitProb[8][4][0][18]=1.86274;
LBitProb[8][4][0][19]=0.465182;
LBitProb[8][4][0][20]=0.0427805;
LBitProb[8][4][0][21]=0.00442981;
LBitProb[8][4][0][22]=0;
LBitProb[8][4][0][23]=0;
LBitProb[9][4][0][0]=0;
LBitProb[9][4][0][1]=0;
LBitProb[9][4][0][2]=0;
LBitProb[9][4][0][3]=0.000474045;
LBitProb[9][4][0][4]=0.00153921;
LBitProb[9][4][0][5]=0.00136705;
LBitProb[9][4][0][6]=0.00270133;
LBitProb[9][4][0][7]=0.00403202;
LBitProb[9][4][0][8]=0.00557002;
LBitProb[9][4][0][9]=0.0162474;
LBitProb[9][4][0][10]=0.032121;
LBitProb[9][4][0][11]=0.107949;
LBitProb[9][4][0][12]=0.431577;
LBitProb[9][4][0][13]=1.48323;
LBitProb[9][4][0][14]=3.61446;
LBitProb[9][4][0][15]=5.62993;
LBitProb[9][4][0][16]=6.14809;
LBitProb[9][4][0][17]=4.70128;
LBitProb[9][4][0][18]=2.24723;
LBitProb[9][4][0][19]=0.526015;
LBitProb[9][4][0][20]=0.0412012;
LBitProb[9][4][0][21]=0.00497444;
LBitProb[9][4][0][22]=0;
LBitProb[9][4][0][23]=0;
LBitProb[0][5][0][0]=0;
LBitProb[0][5][0][1]=0;
LBitProb[0][5][0][2]=0;
LBitProb[0][5][0][3]=0.00586632;
LBitProb[0][5][0][4]=0.0299978;
LBitProb[0][5][0][5]=0.112936;
LBitProb[0][5][0][6]=0.215731;
LBitProb[0][5][0][7]=0.223834;
LBitProb[0][5][0][8]=0.351999;
LBitProb[0][5][0][9]=0.504542;
LBitProb[0][5][0][10]=0.824464;
LBitProb[0][5][0][11]=1.2737;
LBitProb[0][5][0][12]=1.84261;
LBitProb[0][5][0][13]=2.22403;
LBitProb[0][5][0][14]=2.71674;
LBitProb[0][5][0][15]=3.43248;
LBitProb[0][5][0][16]=4.31445;
LBitProb[0][5][0][17]=4.1208;
LBitProb[0][5][0][18]=2.18188;
LBitProb[0][5][0][19]=0.553277;
LBitProb[0][5][0][20]=0.0660819;
LBitProb[0][5][0][21]=0.00458189;
LBitProb[0][5][0][22]=0;
LBitProb[0][5][0][23]=0;
LBitProb[1][5][0][0]=0;
LBitProb[1][5][0][1]=0;
LBitProb[1][5][0][2]=0.00441976;
LBitProb[1][5][0][3]=0.00944042;
LBitProb[1][5][0][4]=0.0313741;
LBitProb[1][5][0][5]=0.0825958;
LBitProb[1][5][0][6]=0.153776;
LBitProb[1][5][0][7]=0.340754;
LBitProb[1][5][0][8]=0.397442;
LBitProb[1][5][0][9]=0.563111;
LBitProb[1][5][0][10]=0.709153;
LBitProb[1][5][0][11]=1.12625;
LBitProb[1][5][0][12]=1.48274;
LBitProb[1][5][0][13]=2.15223;
LBitProb[1][5][0][14]=2.8332;
LBitProb[1][5][0][15]=3.5701;
LBitProb[1][5][0][16]=4.51243;
LBitProb[1][5][0][17]=4.22286;
LBitProb[1][5][0][18]=2.21857;
LBitProb[1][5][0][19]=0.501494;
LBitProb[1][5][0][20]=0.0802433;
LBitProb[1][5][0][21]=0.00782329;
LBitProb[1][5][0][22]=0;
LBitProb[1][5][0][23]=0;
LBitProb[2][5][0][0]=0;
LBitProb[2][5][0][1]=0;
LBitProb[2][5][0][2]=0;
LBitProb[2][5][0][3]=0.00381448;
LBitProb[2][5][0][4]=0.00896094;
LBitProb[2][5][0][5]=0.024324;
LBitProb[2][5][0][6]=0.122585;
LBitProb[2][5][0][7]=0.281519;
LBitProb[2][5][0][8]=0.481119;
LBitProb[2][5][0][9]=0.639746;
LBitProb[2][5][0][10]=0.86747;
LBitProb[2][5][0][11]=1.16624;
LBitProb[2][5][0][12]=1.61243;
LBitProb[2][5][0][13]=2.12182;
LBitProb[2][5][0][14]=2.84059;
LBitProb[2][5][0][15]=3.59054;
LBitProb[2][5][0][16]=4.33705;
LBitProb[2][5][0][17]=4.15056;
LBitProb[2][5][0][18]=2.14863;
LBitProb[2][5][0][19]=0.531155;
LBitProb[2][5][0][20]=0.0664039;
LBitProb[2][5][0][21]=0.00503901;
LBitProb[2][5][0][22]=0;
LBitProb[2][5][0][23]=0;
LBitProb[3][5][0][0]=0;
LBitProb[3][5][0][1]=0;
LBitProb[3][5][0][2]=0;
LBitProb[3][5][0][3]=0;
LBitProb[3][5][0][4]=0.00483487;
LBitProb[3][5][0][5]=0.0153857;
LBitProb[3][5][0][6]=0.0337819;
LBitProb[3][5][0][7]=0.125388;
LBitProb[3][5][0][8]=0.446339;
LBitProb[3][5][0][9]=0.67587;
LBitProb[3][5][0][10]=0.925312;
LBitProb[3][5][0][11]=1.21238;
LBitProb[3][5][0][12]=1.69425;
LBitProb[3][5][0][13]=2.08361;
LBitProb[3][5][0][14]=2.67946;
LBitProb[3][5][0][15]=3.72084;
LBitProb[3][5][0][16]=4.58039;
LBitProb[3][5][0][17]=4.09713;
LBitProb[3][5][0][18]=2.14021;
LBitProb[3][5][0][19]=0.48282;
LBitProb[3][5][0][20]=0.0759148;
LBitProb[3][5][0][21]=0.00607878;
LBitProb[3][5][0][22]=0;
LBitProb[3][5][0][23]=0;
LBitProb[4][5][0][0]=0;
LBitProb[4][5][0][1]=0;
LBitProb[4][5][0][2]=0;
LBitProb[4][5][0][3]=0;
LBitProb[4][5][0][4]=0;
LBitProb[4][5][0][5]=0.00238489;
LBitProb[4][5][0][6]=0.0151655;
LBitProb[4][5][0][7]=0.0658142;
LBitProb[4][5][0][8]=0.218609;
LBitProb[4][5][0][9]=0.590035;
LBitProb[4][5][0][10]=0.907955;
LBitProb[4][5][0][11]=1.32031;
LBitProb[4][5][0][12]=1.68645;
LBitProb[4][5][0][13]=2.07253;
LBitProb[4][5][0][14]=2.73829;
LBitProb[4][5][0][15]=3.7543;
LBitProb[4][5][0][16]=4.6722;
LBitProb[4][5][0][17]=4.11503;
LBitProb[4][5][0][18]=2.21427;
LBitProb[4][5][0][19]=0.540008;
LBitProb[4][5][0][20]=0.0803564;
LBitProb[4][5][0][21]=0.00629635;
LBitProb[4][5][0][22]=0;
LBitProb[4][5][0][23]=0;
LBitProb[5][5][0][0]=0;
LBitProb[5][5][0][1]=0;
LBitProb[5][5][0][2]=0;
LBitProb[5][5][0][3]=0;
LBitProb[5][5][0][4]=0;
LBitProb[5][5][0][5]=0;
LBitProb[5][5][0][6]=0;
LBitProb[5][5][0][7]=0.0240277;
LBitProb[5][5][0][8]=0.0899727;
LBitProb[5][5][0][9]=0.283506;
LBitProb[5][5][0][10]=0.855945;
LBitProb[5][5][0][11]=1.28488;
LBitProb[5][5][0][12]=1.77708;
LBitProb[5][5][0][13]=2.26761;
LBitProb[5][5][0][14]=2.90567;
LBitProb[5][5][0][15]=3.48437;
LBitProb[5][5][0][16]=4.58095;
LBitProb[5][5][0][17]=4.36219;
LBitProb[5][5][0][18]=2.38877;
LBitProb[5][5][0][19]=0.603876;
LBitProb[5][5][0][20]=0.0853154;
LBitProb[5][5][0][21]=0.00583999;
LBitProb[5][5][0][22]=0;
LBitProb[5][5][0][23]=0;
LBitProb[6][5][0][0]=0;
LBitProb[6][5][0][1]=0;
LBitProb[6][5][0][2]=0;
LBitProb[6][5][0][3]=0.00366365;
LBitProb[6][5][0][4]=0.00103118;
LBitProb[6][5][0][5]=0;
LBitProb[6][5][0][6]=0.0101632;
LBitProb[6][5][0][7]=0.00924648;
LBitProb[6][5][0][8]=0.0234166;
LBitProb[6][5][0][9]=0.0884718;
LBitProb[6][5][0][10]=0.305242;
LBitProb[6][5][0][11]=1.07533;
LBitProb[6][5][0][12]=1.97224;
LBitProb[6][5][0][13]=2.55208;
LBitProb[6][5][0][14]=3.02083;
LBitProb[6][5][0][15]=3.67601;
LBitProb[6][5][0][16]=4.72208;
LBitProb[6][5][0][17]=4.39683;
LBitProb[6][5][0][18]=2.47655;
LBitProb[6][5][0][19]=0.608013;
LBitProb[6][5][0][20]=0.0571025;
LBitProb[6][5][0][21]=0.00169919;
LBitProb[6][5][0][22]=0;
LBitProb[6][5][0][23]=0;
LBitProb[7][5][0][0]=0;
LBitProb[7][5][0][1]=0;
LBitProb[7][5][0][2]=0;
LBitProb[7][5][0][3]=0;
LBitProb[7][5][0][4]=0;
LBitProb[7][5][0][5]=0;
LBitProb[7][5][0][6]=0.00289607;
LBitProb[7][5][0][7]=0.00476929;
LBitProb[7][5][0][8]=0.0218898;
LBitProb[7][5][0][9]=0.0344922;
LBitProb[7][5][0][10]=0.121741;
LBitProb[7][5][0][11]=0.375346;
LBitProb[7][5][0][12]=1.31784;
LBitProb[7][5][0][13]=2.6014;
LBitProb[7][5][0][14]=3.43752;
LBitProb[7][5][0][15]=4.1614;
LBitProb[7][5][0][16]=4.91274;
LBitProb[7][5][0][17]=4.61545;
LBitProb[7][5][0][18]=2.56965;
LBitProb[7][5][0][19]=0.71604;
LBitProb[7][5][0][20]=0.0994362;
LBitProb[7][5][0][21]=0.00739383;
LBitProb[7][5][0][22]=0;
LBitProb[7][5][0][23]=0;
LBitProb[8][5][0][0]=0;
LBitProb[8][5][0][1]=0;
LBitProb[8][5][0][2]=0;
LBitProb[8][5][0][3]=0;
LBitProb[8][5][0][4]=0;
LBitProb[8][5][0][5]=0.00396121;
LBitProb[8][5][0][6]=0.00111493;
LBitProb[8][5][0][7]=0;
LBitProb[8][5][0][8]=0.00365218;
LBitProb[8][5][0][9]=0.00603986;
LBitProb[8][5][0][10]=0.0245954;
LBitProb[8][5][0][11]=0.102227;
LBitProb[8][5][0][12]=0.526342;
LBitProb[8][5][0][13]=1.67916;
LBitProb[8][5][0][14]=3.28832;
LBitProb[8][5][0][15]=4.7437;
LBitProb[8][5][0][16]=5.58046;
LBitProb[8][5][0][17]=5.04171;
LBitProb[8][5][0][18]=2.96572;
LBitProb[8][5][0][19]=0.897485;
LBitProb[8][5][0][20]=0.126848;
LBitProb[8][5][0][21]=0.00866144;
LBitProb[8][5][0][22]=0;
LBitProb[8][5][0][23]=0;
LBitProb[9][5][0][0]=0;
LBitProb[9][5][0][1]=0;
LBitProb[9][5][0][2]=0;
LBitProb[9][5][0][3]=0.00335979;
LBitProb[9][5][0][4]=0.0014249;
LBitProb[9][5][0][5]=0;
LBitProb[9][5][0][6]=0;
LBitProb[9][5][0][7]=0;
LBitProb[9][5][0][8]=0.00437508;
LBitProb[9][5][0][9]=0.00405863;
LBitProb[9][5][0][10]=0.0113874;
LBitProb[9][5][0][11]=0.0406443;
LBitProb[9][5][0][12]=0.126162;
LBitProb[9][5][0][13]=0.574598;
LBitProb[9][5][0][14]=2.08579;
LBitProb[9][5][0][15]=4.5574;
LBitProb[9][5][0][16]=6.53264;
LBitProb[9][5][0][17]=6.2355;
LBitProb[9][5][0][18]=3.67373;
LBitProb[9][5][0][19]=1.04435;
LBitProb[9][5][0][20]=0.100052;
LBitProb[9][5][0][21]=0.00452334;
LBitProb[9][5][0][22]=0;
LBitProb[9][5][0][23]=0;
LBitProb[0][6][0][0]=0;
LBitProb[0][6][0][1]=0;
LBitProb[0][6][0][2]=0;
LBitProb[0][6][0][3]=0;
LBitProb[0][6][0][4]=0;
LBitProb[0][6][0][5]=0;
LBitProb[0][6][0][6]=0;
LBitProb[0][6][0][7]=0;
LBitProb[0][6][0][8]=0;
LBitProb[0][6][0][9]=0;
LBitProb[0][6][0][10]=0;
LBitProb[0][6][0][11]=0;
LBitProb[0][6][0][12]=0.899498;
LBitProb[0][6][0][13]=0.914814;
LBitProb[0][6][0][14]=1.03399;
LBitProb[0][6][0][15]=0.982257;
LBitProb[0][6][0][16]=0.169443;
LBitProb[0][6][0][17]=0;
LBitProb[0][6][0][18]=0;
LBitProb[0][6][0][19]=0;
LBitProb[0][6][0][20]=0;
LBitProb[0][6][0][21]=0;
LBitProb[0][6][0][22]=0;
LBitProb[0][6][0][23]=0;
LBitProb[1][6][0][0]=0;
LBitProb[1][6][0][1]=0;
LBitProb[1][6][0][2]=0;
LBitProb[1][6][0][3]=0;
LBitProb[1][6][0][4]=0;
LBitProb[1][6][0][5]=0;
LBitProb[1][6][0][6]=0;
LBitProb[1][6][0][7]=0;
LBitProb[1][6][0][8]=0;
LBitProb[1][6][0][9]=0;
LBitProb[1][6][0][10]=0;
LBitProb[1][6][0][11]=0;
LBitProb[1][6][0][12]=0;
LBitProb[1][6][0][13]=2.04842;
LBitProb[1][6][0][14]=0.451579;
LBitProb[1][6][0][15]=0;
LBitProb[1][6][0][16]=0.891838;
LBitProb[1][6][0][17]=3.30472;
LBitProb[1][6][0][18]=1.19589;
LBitProb[1][6][0][19]=0.107552;
LBitProb[1][6][0][20]=0;
LBitProb[1][6][0][21]=0;
LBitProb[1][6][0][22]=0;
LBitProb[1][6][0][23]=0;
LBitProb[2][6][0][0]=0;
LBitProb[2][6][0][1]=0;
LBitProb[2][6][0][2]=0;
LBitProb[2][6][0][3]=0;
LBitProb[2][6][0][4]=0;
LBitProb[2][6][0][5]=0;
LBitProb[2][6][0][6]=0;
LBitProb[2][6][0][7]=0;
LBitProb[2][6][0][8]=0;
LBitProb[2][6][0][9]=0;
LBitProb[2][6][0][10]=0;
LBitProb[2][6][0][11]=0;
LBitProb[2][6][0][12]=0.407812;
LBitProb[2][6][0][13]=1.88958;
LBitProb[2][6][0][14]=0.20261;
LBitProb[2][6][0][15]=0.780358;
LBitProb[2][6][0][16]=0.219642;
LBitProb[2][6][0][17]=1.79189;
LBitProb[2][6][0][18]=1.40196;
LBitProb[2][6][0][19]=0.306144;
LBitProb[2][6][0][20]=0;
LBitProb[2][6][0][21]=0;
LBitProb[2][6][0][22]=0;
LBitProb[2][6][0][23]=0;
LBitProb[3][6][0][0]=0;
LBitProb[3][6][0][1]=0;
LBitProb[3][6][0][2]=0;
LBitProb[3][6][0][3]=0;
LBitProb[3][6][0][4]=0;
LBitProb[3][6][0][5]=0;
LBitProb[3][6][0][6]=0;
LBitProb[3][6][0][7]=0;
LBitProb[3][6][0][8]=0;
LBitProb[3][6][0][9]=0;
LBitProb[3][6][0][10]=0;
LBitProb[3][6][0][11]=0;
LBitProb[3][6][0][12]=0.891449;
LBitProb[3][6][0][13]=0.880821;
LBitProb[3][6][0][14]=0.687212;
LBitProb[3][6][0][15]=2.25155;
LBitProb[3][6][0][16]=1.205;
LBitProb[3][6][0][17]=0.998524;
LBitProb[3][6][0][18]=0.0854428;
LBitProb[3][6][0][19]=0;
LBitProb[3][6][0][20]=0;
LBitProb[3][6][0][21]=0;
LBitProb[3][6][0][22]=0;
LBitProb[3][6][0][23]=0;
LBitProb[4][6][0][0]=0;
LBitProb[4][6][0][1]=0;
LBitProb[4][6][0][2]=0;
LBitProb[4][6][0][3]=0;
LBitProb[4][6][0][4]=0;
LBitProb[4][6][0][5]=0;
LBitProb[4][6][0][6]=0;
LBitProb[4][6][0][7]=0;
LBitProb[4][6][0][8]=0;
LBitProb[4][6][0][9]=0;
LBitProb[4][6][0][10]=0;
LBitProb[4][6][0][11]=0;
LBitProb[4][6][0][12]=1.76903;
LBitProb[4][6][0][13]=0.230972;
LBitProb[4][6][0][14]=0.453265;
LBitProb[4][6][0][15]=0.90748;
LBitProb[4][6][0][16]=0.946209;
LBitProb[4][6][0][17]=1.09607;
LBitProb[4][6][0][18]=0.547537;
LBitProb[4][6][0][19]=0.0494434;
LBitProb[4][6][0][20]=0;
LBitProb[4][6][0][21]=0;
LBitProb[4][6][0][22]=0;
LBitProb[4][6][0][23]=0;
LBitProb[5][6][0][0]=0;
LBitProb[5][6][0][1]=0;
LBitProb[5][6][0][2]=0;
LBitProb[5][6][0][3]=0;
LBitProb[5][6][0][4]=0;
LBitProb[5][6][0][5]=0;
LBitProb[5][6][0][6]=0;
LBitProb[5][6][0][7]=0;
LBitProb[5][6][0][8]=0;
LBitProb[5][6][0][9]=0;
LBitProb[5][6][0][10]=0;
LBitProb[5][6][0][11]=0;
LBitProb[5][6][0][12]=0.907057;
LBitProb[5][6][0][13]=0.0929432;
LBitProb[5][6][0][14]=0.830564;
LBitProb[5][6][0][15]=1.08263;
LBitProb[5][6][0][16]=1.87328;
LBitProb[5][6][0][17]=0.96579;
LBitProb[5][6][0][18]=2.02803;
LBitProb[5][6][0][19]=0.219701;
LBitProb[5][6][0][20]=0;
LBitProb[5][6][0][21]=0;
LBitProb[5][6][0][22]=0;
LBitProb[5][6][0][23]=0;
LBitProb[6][6][0][0]=0;
LBitProb[6][6][0][1]=0;
LBitProb[6][6][0][2]=0;
LBitProb[6][6][0][3]=0;
LBitProb[6][6][0][4]=0;
LBitProb[6][6][0][5]=0;
LBitProb[6][6][0][6]=0;
LBitProb[6][6][0][7]=0;
LBitProb[6][6][0][8]=0;
LBitProb[6][6][0][9]=0;
LBitProb[6][6][0][10]=0;
LBitProb[6][6][0][11]=0;
LBitProb[6][6][0][12]=0;
LBitProb[6][6][0][13]=0;
LBitProb[6][6][0][14]=0;
LBitProb[6][6][0][15]=0.871899;
LBitProb[6][6][0][16]=0.128101;
LBitProb[6][6][0][17]=0;
LBitProb[6][6][0][18]=1.58674;
LBitProb[6][6][0][19]=0.413262;
LBitProb[6][6][0][20]=0;
LBitProb[6][6][0][21]=0;
LBitProb[6][6][0][22]=0;
LBitProb[6][6][0][23]=0;
LBitProb[7][6][0][0]=0;
LBitProb[7][6][0][1]=0;
LBitProb[7][6][0][2]=0;
LBitProb[7][6][0][3]=0;
LBitProb[7][6][0][4]=0;
LBitProb[7][6][0][5]=0;
LBitProb[7][6][0][6]=0;
LBitProb[7][6][0][7]=0;
LBitProb[7][6][0][8]=0;
LBitProb[7][6][0][9]=0;
LBitProb[7][6][0][10]=0;
LBitProb[7][6][0][11]=0;
LBitProb[7][6][0][12]=0;
LBitProb[7][6][0][13]=0.808146;
LBitProb[7][6][0][14]=0.191854;
LBitProb[7][6][0][15]=0;
LBitProb[7][6][0][16]=0;
LBitProb[7][6][0][17]=0.764135;
LBitProb[7][6][0][18]=2.55648;
LBitProb[7][6][0][19]=0.679381;
LBitProb[7][6][0][20]=0;
LBitProb[7][6][0][21]=0;
LBitProb[7][6][0][22]=0;
LBitProb[7][6][0][23]=0;
LBitProb[8][6][0][0]=0;
LBitProb[8][6][0][1]=0;
LBitProb[8][6][0][2]=0;
LBitProb[8][6][0][3]=0;
LBitProb[8][6][0][4]=0;
LBitProb[8][6][0][5]=0;
LBitProb[8][6][0][6]=0;
LBitProb[8][6][0][7]=0;
LBitProb[8][6][0][8]=0;
LBitProb[8][6][0][9]=0;
LBitProb[8][6][0][10]=0;
LBitProb[8][6][0][11]=0;
LBitProb[8][6][0][12]=0;
LBitProb[8][6][0][13]=0;
LBitProb[8][6][0][14]=0.731144;
LBitProb[8][6][0][15]=1.05587;
LBitProb[8][6][0][16]=3.16448;
LBitProb[8][6][0][17]=1.76866;
LBitProb[8][6][0][18]=1.06566;
LBitProb[8][6][0][19]=0.214178;
LBitProb[8][6][0][20]=0;
LBitProb[8][6][0][21]=0;
LBitProb[8][6][0][22]=0;
LBitProb[8][6][0][23]=0;
LBitProb[9][6][0][0]=0;
LBitProb[9][6][0][1]=0;
LBitProb[9][6][0][2]=0;
LBitProb[9][6][0][3]=0;
LBitProb[9][6][0][4]=0;
LBitProb[9][6][0][5]=0;
LBitProb[9][6][0][6]=0;
LBitProb[9][6][0][7]=0;
LBitProb[9][6][0][8]=0;
LBitProb[9][6][0][9]=0;
LBitProb[9][6][0][10]=0;
LBitProb[9][6][0][11]=0;
LBitProb[9][6][0][12]=0;
LBitProb[9][6][0][13]=0.395836;
LBitProb[9][6][0][14]=0.794127;
LBitProb[9][6][0][15]=0.643115;
LBitProb[9][6][0][16]=1.4009;
LBitProb[9][6][0][17]=2.48816;
LBitProb[9][6][0][18]=1.14563;
LBitProb[9][6][0][19]=0.132238;
LBitProb[9][6][0][20]=0;
LBitProb[9][6][0][21]=0;
LBitProb[9][6][0][22]=0;
LBitProb[9][6][0][23]=0;
LBitProb[0][7][0][0]=0;
LBitProb[0][7][0][1]=0;
LBitProb[0][7][0][2]=0;
LBitProb[0][7][0][3]=0;
LBitProb[0][7][0][4]=0;
LBitProb[0][7][0][5]=0;
LBitProb[0][7][0][6]=0;
LBitProb[0][7][0][7]=0;
LBitProb[0][7][0][8]=0;
LBitProb[0][7][0][9]=0;
LBitProb[0][7][0][10]=0;
LBitProb[0][7][0][11]=0;
LBitProb[0][7][0][12]=0;
LBitProb[0][7][0][13]=0;
LBitProb[0][7][0][14]=0;
LBitProb[0][7][0][15]=0;
LBitProb[0][7][0][16]=0;
LBitProb[0][7][0][17]=0;
LBitProb[0][7][0][18]=0;
LBitProb[0][7][0][19]=0;
LBitProb[0][7][0][20]=0;
LBitProb[0][7][0][21]=0;
LBitProb[0][7][0][22]=0;
LBitProb[0][7][0][23]=0;
LBitProb[1][7][0][0]=0;
LBitProb[1][7][0][1]=0;
LBitProb[1][7][0][2]=0;
LBitProb[1][7][0][3]=0;
LBitProb[1][7][0][4]=0;
LBitProb[1][7][0][5]=0;
LBitProb[1][7][0][6]=0;
LBitProb[1][7][0][7]=0;
LBitProb[1][7][0][8]=0;
LBitProb[1][7][0][9]=0;
LBitProb[1][7][0][10]=0;
LBitProb[1][7][0][11]=0;
LBitProb[1][7][0][12]=0;
LBitProb[1][7][0][13]=0;
LBitProb[1][7][0][14]=0;
LBitProb[1][7][0][15]=0;
LBitProb[1][7][0][16]=0;
LBitProb[1][7][0][17]=0;
LBitProb[1][7][0][18]=0;
LBitProb[1][7][0][19]=0;
LBitProb[1][7][0][20]=0;
LBitProb[1][7][0][21]=0;
LBitProb[1][7][0][22]=0;
LBitProb[1][7][0][23]=0;
LBitProb[2][7][0][0]=0;
LBitProb[2][7][0][1]=0;
LBitProb[2][7][0][2]=0;
LBitProb[2][7][0][3]=0;
LBitProb[2][7][0][4]=0;
LBitProb[2][7][0][5]=0;
LBitProb[2][7][0][6]=0;
LBitProb[2][7][0][7]=0;
LBitProb[2][7][0][8]=0;
LBitProb[2][7][0][9]=0;
LBitProb[2][7][0][10]=0;
LBitProb[2][7][0][11]=0;
LBitProb[2][7][0][12]=0;
LBitProb[2][7][0][13]=0;
LBitProb[2][7][0][14]=0;
LBitProb[2][7][0][15]=0;
LBitProb[2][7][0][16]=0;
LBitProb[2][7][0][17]=0;
LBitProb[2][7][0][18]=0;
LBitProb[2][7][0][19]=0;
LBitProb[2][7][0][20]=0;
LBitProb[2][7][0][21]=0;
LBitProb[2][7][0][22]=0;
LBitProb[2][7][0][23]=0;
LBitProb[3][7][0][0]=0;
LBitProb[3][7][0][1]=0;
LBitProb[3][7][0][2]=0;
LBitProb[3][7][0][3]=0;
LBitProb[3][7][0][4]=0;
LBitProb[3][7][0][5]=0;
LBitProb[3][7][0][6]=0;
LBitProb[3][7][0][7]=0;
LBitProb[3][7][0][8]=0;
LBitProb[3][7][0][9]=0;
LBitProb[3][7][0][10]=0;
LBitProb[3][7][0][11]=0;
LBitProb[3][7][0][12]=0;
LBitProb[3][7][0][13]=0;
LBitProb[3][7][0][14]=0;
LBitProb[3][7][0][15]=0;
LBitProb[3][7][0][16]=0;
LBitProb[3][7][0][17]=0;
LBitProb[3][7][0][18]=0;
LBitProb[3][7][0][19]=0;
LBitProb[3][7][0][20]=0;
LBitProb[3][7][0][21]=0;
LBitProb[3][7][0][22]=0;
LBitProb[3][7][0][23]=0;
LBitProb[4][7][0][0]=0;
LBitProb[4][7][0][1]=0;
LBitProb[4][7][0][2]=0;
LBitProb[4][7][0][3]=0;
LBitProb[4][7][0][4]=0;
LBitProb[4][7][0][5]=0;
LBitProb[4][7][0][6]=0;
LBitProb[4][7][0][7]=0;
LBitProb[4][7][0][8]=0;
LBitProb[4][7][0][9]=0;
LBitProb[4][7][0][10]=0;
LBitProb[4][7][0][11]=0;
LBitProb[4][7][0][12]=0;
LBitProb[4][7][0][13]=0;
LBitProb[4][7][0][14]=0;
LBitProb[4][7][0][15]=0;
LBitProb[4][7][0][16]=0;
LBitProb[4][7][0][17]=0;
LBitProb[4][7][0][18]=0;
LBitProb[4][7][0][19]=0;
LBitProb[4][7][0][20]=0;
LBitProb[4][7][0][21]=0;
LBitProb[4][7][0][22]=0;
LBitProb[4][7][0][23]=0;
LBitProb[5][7][0][0]=0;
LBitProb[5][7][0][1]=0;
LBitProb[5][7][0][2]=0;
LBitProb[5][7][0][3]=0;
LBitProb[5][7][0][4]=0;
LBitProb[5][7][0][5]=0;
LBitProb[5][7][0][6]=0;
LBitProb[5][7][0][7]=0;
LBitProb[5][7][0][8]=0;
LBitProb[5][7][0][9]=0;
LBitProb[5][7][0][10]=0;
LBitProb[5][7][0][11]=0;
LBitProb[5][7][0][12]=0;
LBitProb[5][7][0][13]=0;
LBitProb[5][7][0][14]=0;
LBitProb[5][7][0][15]=0;
LBitProb[5][7][0][16]=0;
LBitProb[5][7][0][17]=0;
LBitProb[5][7][0][18]=0;
LBitProb[5][7][0][19]=0;
LBitProb[5][7][0][20]=0;
LBitProb[5][7][0][21]=0;
LBitProb[5][7][0][22]=0;
LBitProb[5][7][0][23]=0;
LBitProb[6][7][0][0]=0;
LBitProb[6][7][0][1]=0;
LBitProb[6][7][0][2]=0;
LBitProb[6][7][0][3]=0;
LBitProb[6][7][0][4]=0;
LBitProb[6][7][0][5]=0;
LBitProb[6][7][0][6]=0;
LBitProb[6][7][0][7]=0;
LBitProb[6][7][0][8]=0;
LBitProb[6][7][0][9]=0;
LBitProb[6][7][0][10]=0;
LBitProb[6][7][0][11]=0;
LBitProb[6][7][0][12]=0;
LBitProb[6][7][0][13]=0;
LBitProb[6][7][0][14]=0;
LBitProb[6][7][0][15]=0;
LBitProb[6][7][0][16]=0;
LBitProb[6][7][0][17]=0;
LBitProb[6][7][0][18]=0;
LBitProb[6][7][0][19]=0;
LBitProb[6][7][0][20]=0;
LBitProb[6][7][0][21]=0;
LBitProb[6][7][0][22]=0;
LBitProb[6][7][0][23]=0;
LBitProb[7][7][0][0]=0;
LBitProb[7][7][0][1]=0;
LBitProb[7][7][0][2]=0;
LBitProb[7][7][0][3]=0;
LBitProb[7][7][0][4]=0;
LBitProb[7][7][0][5]=0;
LBitProb[7][7][0][6]=0;
LBitProb[7][7][0][7]=0;
LBitProb[7][7][0][8]=0;
LBitProb[7][7][0][9]=0;
LBitProb[7][7][0][10]=0;
LBitProb[7][7][0][11]=0;
LBitProb[7][7][0][12]=0;
LBitProb[7][7][0][13]=0;
LBitProb[7][7][0][14]=0;
LBitProb[7][7][0][15]=0;
LBitProb[7][7][0][16]=0;
LBitProb[7][7][0][17]=0;
LBitProb[7][7][0][18]=0;
LBitProb[7][7][0][19]=0;
LBitProb[7][7][0][20]=0;
LBitProb[7][7][0][21]=0;
LBitProb[7][7][0][22]=0;
LBitProb[7][7][0][23]=0;
LBitProb[8][7][0][0]=0;
LBitProb[8][7][0][1]=0;
LBitProb[8][7][0][2]=0;
LBitProb[8][7][0][3]=0;
LBitProb[8][7][0][4]=0;
LBitProb[8][7][0][5]=0;
LBitProb[8][7][0][6]=0;
LBitProb[8][7][0][7]=0;
LBitProb[8][7][0][8]=0;
LBitProb[8][7][0][9]=0;
LBitProb[8][7][0][10]=0;
LBitProb[8][7][0][11]=0;
LBitProb[8][7][0][12]=0;
LBitProb[8][7][0][13]=0;
LBitProb[8][7][0][14]=0;
LBitProb[8][7][0][15]=0;
LBitProb[8][7][0][16]=0;
LBitProb[8][7][0][17]=0;
LBitProb[8][7][0][18]=0;
LBitProb[8][7][0][19]=0;
LBitProb[8][7][0][20]=0;
LBitProb[8][7][0][21]=0;
LBitProb[8][7][0][22]=0;
LBitProb[8][7][0][23]=0;
LBitProb[9][7][0][0]=0;
LBitProb[9][7][0][1]=0;
LBitProb[9][7][0][2]=0;
LBitProb[9][7][0][3]=0;
LBitProb[9][7][0][4]=0;
LBitProb[9][7][0][5]=0;
LBitProb[9][7][0][6]=0;
LBitProb[9][7][0][7]=0;
LBitProb[9][7][0][8]=0;
LBitProb[9][7][0][9]=0;
LBitProb[9][7][0][10]=0;
LBitProb[9][7][0][11]=0;
LBitProb[9][7][0][12]=0;
LBitProb[9][7][0][13]=0;
LBitProb[9][7][0][14]=0;
LBitProb[9][7][0][15]=0;
LBitProb[9][7][0][16]=0;
LBitProb[9][7][0][17]=0;
LBitProb[9][7][0][18]=0;
LBitProb[9][7][0][19]=0;
LBitProb[9][7][0][20]=0;
LBitProb[9][7][0][21]=0;
LBitProb[9][7][0][22]=0;
LBitProb[9][7][0][23]=0;
LBitProb[0][8][0][0]=0;
LBitProb[0][8][0][1]=0;
LBitProb[0][8][0][2]=0;
LBitProb[0][8][0][3]=0;
LBitProb[0][8][0][4]=0;
LBitProb[0][8][0][5]=0;
LBitProb[0][8][0][6]=0;
LBitProb[0][8][0][7]=0.056812;
LBitProb[0][8][0][8]=0.276521;
LBitProb[0][8][0][9]=0.264678;
LBitProb[0][8][0][10]=0.0686556;
LBitProb[0][8][0][11]=0;
LBitProb[0][8][0][12]=0;
LBitProb[0][8][0][13]=0;
LBitProb[0][8][0][14]=0;
LBitProb[0][8][0][15]=0;
LBitProb[0][8][0][16]=0.267352;
LBitProb[0][8][0][17]=0.0659808;
LBitProb[0][8][0][18]=0;
LBitProb[0][8][0][19]=0;
LBitProb[0][8][0][20]=0;
LBitProb[0][8][0][21]=0;
LBitProb[0][8][0][22]=0;
LBitProb[0][8][0][23]=0;
LBitProb[1][8][0][0]=0;
LBitProb[1][8][0][1]=0;
LBitProb[1][8][0][2]=0;
LBitProb[1][8][0][3]=0;
LBitProb[1][8][0][4]=0;
LBitProb[1][8][0][5]=0;
LBitProb[1][8][0][6]=0;
LBitProb[1][8][0][7]=0;
LBitProb[1][8][0][8]=0;
LBitProb[1][8][0][9]=0;
LBitProb[1][8][0][10]=0;
LBitProb[1][8][0][11]=0;
LBitProb[1][8][0][12]=0;
LBitProb[1][8][0][13]=0;
LBitProb[1][8][0][14]=0;
LBitProb[1][8][0][15]=0;
LBitProb[1][8][0][16]=0;
LBitProb[1][8][0][17]=0;
LBitProb[1][8][0][18]=0;
LBitProb[1][8][0][19]=0;
LBitProb[1][8][0][20]=0;
LBitProb[1][8][0][21]=0;
LBitProb[1][8][0][22]=0;
LBitProb[1][8][0][23]=0;
LBitProb[2][8][0][0]=0;
LBitProb[2][8][0][1]=0;
LBitProb[2][8][0][2]=0;
LBitProb[2][8][0][3]=0;
LBitProb[2][8][0][4]=0;
LBitProb[2][8][0][5]=0;
LBitProb[2][8][0][6]=0;
LBitProb[2][8][0][7]=0;
LBitProb[2][8][0][8]=0;
LBitProb[2][8][0][9]=0;
LBitProb[2][8][0][10]=0;
LBitProb[2][8][0][11]=0;
LBitProb[2][8][0][12]=0;
LBitProb[2][8][0][13]=0;
LBitProb[2][8][0][14]=0;
LBitProb[2][8][0][15]=0;
LBitProb[2][8][0][16]=0;
LBitProb[2][8][0][17]=0;
LBitProb[2][8][0][18]=0;
LBitProb[2][8][0][19]=0;
LBitProb[2][8][0][20]=0;
LBitProb[2][8][0][21]=0;
LBitProb[2][8][0][22]=0;
LBitProb[2][8][0][23]=0;
LBitProb[3][8][0][0]=0;
LBitProb[3][8][0][1]=0;
LBitProb[3][8][0][2]=0;
LBitProb[3][8][0][3]=0;
LBitProb[3][8][0][4]=0;
LBitProb[3][8][0][5]=0;
LBitProb[3][8][0][6]=0;
LBitProb[3][8][0][7]=0;
LBitProb[3][8][0][8]=0.484644;
LBitProb[3][8][0][9]=0.0153563;
LBitProb[3][8][0][10]=0;
LBitProb[3][8][0][11]=0;
LBitProb[3][8][0][12]=0;
LBitProb[3][8][0][13]=0;
LBitProb[3][8][0][14]=0;
LBitProb[3][8][0][15]=0;
LBitProb[3][8][0][16]=0.482664;
LBitProb[3][8][0][17]=0.0173365;
LBitProb[3][8][0][18]=0;
LBitProb[3][8][0][19]=0;
LBitProb[3][8][0][20]=0;
LBitProb[3][8][0][21]=0;
LBitProb[3][8][0][22]=0;
LBitProb[3][8][0][23]=0;
LBitProb[4][8][0][0]=0;
LBitProb[4][8][0][1]=0;
LBitProb[4][8][0][2]=0;
LBitProb[4][8][0][3]=0;
LBitProb[4][8][0][4]=0;
LBitProb[4][8][0][5]=0;
LBitProb[4][8][0][6]=0;
LBitProb[4][8][0][7]=0.140951;
LBitProb[4][8][0][8]=0.175132;
LBitProb[4][8][0][9]=0.0172503;
LBitProb[4][8][0][10]=0.135233;
LBitProb[4][8][0][11]=0.0314333;
LBitProb[4][8][0][12]=0.0101031;
LBitProb[4][8][0][13]=0.156564;
LBitProb[4][8][0][14]=0.026733;
LBitProb[4][8][0][15]=0.171475;
LBitProb[4][8][0][16]=0.135125;
LBitProb[4][8][0][17]=0;
LBitProb[4][8][0][18]=0;
LBitProb[4][8][0][19]=0;
LBitProb[4][8][0][20]=0;
LBitProb[4][8][0][21]=0;
LBitProb[4][8][0][22]=0;
LBitProb[4][8][0][23]=0;
LBitProb[5][8][0][0]=0;
LBitProb[5][8][0][1]=0;
LBitProb[5][8][0][2]=0;
LBitProb[5][8][0][3]=0;
LBitProb[5][8][0][4]=0;
LBitProb[5][8][0][5]=0;
LBitProb[5][8][0][6]=0;
LBitProb[5][8][0][7]=0;
LBitProb[5][8][0][8]=0;
LBitProb[5][8][0][9]=0;
LBitProb[5][8][0][10]=0;
LBitProb[5][8][0][11]=0.108515;
LBitProb[5][8][0][12]=0.891485;
LBitProb[5][8][0][13]=0;
LBitProb[5][8][0][14]=0;
LBitProb[5][8][0][15]=0;
LBitProb[5][8][0][16]=0;
LBitProb[5][8][0][17]=0;
LBitProb[5][8][0][18]=0;
LBitProb[5][8][0][19]=0;
LBitProb[5][8][0][20]=0;
LBitProb[5][8][0][21]=0;
LBitProb[5][8][0][22]=0;
LBitProb[5][8][0][23]=0;
LBitProb[6][8][0][0]=0;
LBitProb[6][8][0][1]=0;
LBitProb[6][8][0][2]=0;
LBitProb[6][8][0][3]=0;
LBitProb[6][8][0][4]=0;
LBitProb[6][8][0][5]=0;
LBitProb[6][8][0][6]=0;
LBitProb[6][8][0][7]=0;
LBitProb[6][8][0][8]=0;
LBitProb[6][8][0][9]=0;
LBitProb[6][8][0][10]=0;
LBitProb[6][8][0][11]=0.499123;
LBitProb[6][8][0][12]=0.000877142;
LBitProb[6][8][0][13]=0;
LBitProb[6][8][0][14]=0;
LBitProb[6][8][0][15]=0.353782;
LBitProb[6][8][0][16]=0.146218;
LBitProb[6][8][0][17]=0;
LBitProb[6][8][0][18]=0;
LBitProb[6][8][0][19]=0;
LBitProb[6][8][0][20]=0;
LBitProb[6][8][0][21]=0;
LBitProb[6][8][0][22]=0;
LBitProb[6][8][0][23]=0;
LBitProb[7][8][0][0]=0;
LBitProb[7][8][0][1]=0;
LBitProb[7][8][0][2]=0;
LBitProb[7][8][0][3]=0;
LBitProb[7][8][0][4]=0;
LBitProb[7][8][0][5]=0;
LBitProb[7][8][0][6]=0;
LBitProb[7][8][0][7]=0;
LBitProb[7][8][0][8]=0;
LBitProb[7][8][0][9]=0.0538349;
LBitProb[7][8][0][10]=0.946165;
LBitProb[7][8][0][11]=0;
LBitProb[7][8][0][12]=0;
LBitProb[7][8][0][13]=0;
LBitProb[7][8][0][14]=0;
LBitProb[7][8][0][15]=0;
LBitProb[7][8][0][16]=0;
LBitProb[7][8][0][17]=0;
LBitProb[7][8][0][18]=0;
LBitProb[7][8][0][19]=0;
LBitProb[7][8][0][20]=0;
LBitProb[7][8][0][21]=0;
LBitProb[7][8][0][22]=0;
LBitProb[7][8][0][23]=0;
LBitProb[8][8][0][0]=0;
LBitProb[8][8][0][1]=0;
LBitProb[8][8][0][2]=0;
LBitProb[8][8][0][3]=0;
LBitProb[8][8][0][4]=0;
LBitProb[8][8][0][5]=0;
LBitProb[8][8][0][6]=0;
LBitProb[8][8][0][7]=0;
LBitProb[8][8][0][8]=0;
LBitProb[8][8][0][9]=0;
LBitProb[8][8][0][10]=0;
LBitProb[8][8][0][11]=0;
LBitProb[8][8][0][12]=0;
LBitProb[8][8][0][13]=0;
LBitProb[8][8][0][14]=0;
LBitProb[8][8][0][15]=0;
LBitProb[8][8][0][16]=0;
LBitProb[8][8][0][17]=0;
LBitProb[8][8][0][18]=0;
LBitProb[8][8][0][19]=0;
LBitProb[8][8][0][20]=0;
LBitProb[8][8][0][21]=0;
LBitProb[8][8][0][22]=0;
LBitProb[8][8][0][23]=0;
LBitProb[9][8][0][0]=0;
LBitProb[9][8][0][1]=0;
LBitProb[9][8][0][2]=0;
LBitProb[9][8][0][3]=0;
LBitProb[9][8][0][4]=0;
LBitProb[9][8][0][5]=0;
LBitProb[9][8][0][6]=0;
LBitProb[9][8][0][7]=0;
LBitProb[9][8][0][8]=0;
LBitProb[9][8][0][9]=0;
LBitProb[9][8][0][10]=0;
LBitProb[9][8][0][11]=0;
LBitProb[9][8][0][12]=0.26607;
LBitProb[9][8][0][13]=0.0672629;
LBitProb[9][8][0][14]=0.547046;
LBitProb[9][8][0][15]=0.11962;
LBitProb[9][8][0][16]=0;
LBitProb[9][8][0][17]=0;
LBitProb[9][8][0][18]=0;
LBitProb[9][8][0][19]=0;
LBitProb[9][8][0][20]=0;
LBitProb[9][8][0][21]=0;
LBitProb[9][8][0][22]=0;
LBitProb[9][8][0][23]=0;
LBitProb[0][9][0][0]=0;
LBitProb[0][9][0][1]=0;
LBitProb[0][9][0][2]=0;
LBitProb[0][9][0][3]=0;
LBitProb[0][9][0][4]=0;
LBitProb[0][9][0][5]=0.170269;
LBitProb[0][9][0][6]=0.329731;
LBitProb[0][9][0][7]=0.0917308;
LBitProb[0][9][0][8]=0.408269;
LBitProb[0][9][0][9]=0;
LBitProb[0][9][0][10]=0.682542;
LBitProb[0][9][0][11]=0.317458;
LBitProb[0][9][0][12]=0.0422404;
LBitProb[0][9][0][13]=0.45776;
LBitProb[0][9][0][14]=0.413488;
LBitProb[0][9][0][15]=0.566434;
LBitProb[0][9][0][16]=0.427735;
LBitProb[0][9][0][17]=0.0923433;
LBitProb[0][9][0][18]=0;
LBitProb[0][9][0][19]=0;
LBitProb[0][9][0][20]=0;
LBitProb[0][9][0][21]=0;
LBitProb[0][9][0][22]=0;
LBitProb[0][9][0][23]=0;
LBitProb[1][9][0][0]=0;
LBitProb[1][9][0][1]=0;
LBitProb[1][9][0][2]=0;
LBitProb[1][9][0][3]=0;
LBitProb[1][9][0][4]=0;
LBitProb[1][9][0][5]=0;
LBitProb[1][9][0][6]=0.0754155;
LBitProb[1][9][0][7]=0.174585;
LBitProb[1][9][0][8]=0;
LBitProb[1][9][0][9]=0.65376;
LBitProb[1][9][0][10]=0.430194;
LBitProb[1][9][0][11]=0.342304;
LBitProb[1][9][0][12]=0.407075;
LBitProb[1][9][0][13]=0.453031;
LBitProb[1][9][0][14]=1.04017;
LBitProb[1][9][0][15]=0.830032;
LBitProb[1][9][0][16]=0.965726;
LBitProb[1][9][0][17]=0.575107;
LBitProb[1][9][0][18]=0.0526009;
LBitProb[1][9][0][19]=0;
LBitProb[1][9][0][20]=0;
LBitProb[1][9][0][21]=0;
LBitProb[1][9][0][22]=0;
LBitProb[1][9][0][23]=0;
LBitProb[2][9][0][0]=0;
LBitProb[2][9][0][1]=0;
LBitProb[2][9][0][2]=0;
LBitProb[2][9][0][3]=0;
LBitProb[2][9][0][4]=0;
LBitProb[2][9][0][5]=0;
LBitProb[2][9][0][6]=0;
LBitProb[2][9][0][7]=0;
LBitProb[2][9][0][8]=0;
LBitProb[2][9][0][9]=0.221045;
LBitProb[2][9][0][10]=0.028955;
LBitProb[2][9][0][11]=0;
LBitProb[2][9][0][12]=0.134831;
LBitProb[2][9][0][13]=0.565955;
LBitProb[2][9][0][14]=0.568195;
LBitProb[2][9][0][15]=1.05142;
LBitProb[2][9][0][16]=0.0962687;
LBitProb[2][9][0][17]=1.85935;
LBitProb[2][9][0][18]=1.42462;
LBitProb[2][9][0][19]=0.0493615;
LBitProb[2][9][0][20]=0;
LBitProb[2][9][0][21]=0;
LBitProb[2][9][0][22]=0;
LBitProb[2][9][0][23]=0;
LBitProb[3][9][0][0]=0;
LBitProb[3][9][0][1]=0;
LBitProb[3][9][0][2]=0;
LBitProb[3][9][0][3]=0;
LBitProb[3][9][0][4]=0;
LBitProb[3][9][0][5]=0.00597563;
LBitProb[3][9][0][6]=0.260564;
LBitProb[3][9][0][7]=0.289813;
LBitProb[3][9][0][8]=0.302791;
LBitProb[3][9][0][9]=0.207523;
LBitProb[3][9][0][10]=0;
LBitProb[3][9][0][11]=0.00982389;
LBitProb[3][9][0][12]=0.190176;
LBitProb[3][9][0][13]=0;
LBitProb[3][9][0][14]=1.18157;
LBitProb[3][9][0][15]=0.781397;
LBitProb[3][9][0][16]=0.42403;
LBitProb[3][9][0][17]=0.319035;
LBitProb[3][9][0][18]=0.886521;
LBitProb[3][9][0][19]=0.140777;
LBitProb[3][9][0][20]=0;
LBitProb[3][9][0][21]=0;
LBitProb[3][9][0][22]=0;
LBitProb[3][9][0][23]=0;
LBitProb[4][9][0][0]=0;
LBitProb[4][9][0][1]=0;
LBitProb[4][9][0][2]=0;
LBitProb[4][9][0][3]=0;
LBitProb[4][9][0][4]=0;
LBitProb[4][9][0][5]=0;
LBitProb[4][9][0][6]=0;
LBitProb[4][9][0][7]=0;
LBitProb[4][9][0][8]=0.554829;
LBitProb[4][9][0][9]=0.0285039;
LBitProb[4][9][0][10]=0;
LBitProb[4][9][0][11]=0;
LBitProb[4][9][0][12]=0.0314207;
LBitProb[4][9][0][13]=0.85165;
LBitProb[4][9][0][14]=0.338299;
LBitProb[4][9][0][15]=0.111963;
LBitProb[4][9][0][16]=1.12248;
LBitProb[4][9][0][17]=1.7807;
LBitProb[4][9][0][18]=0.18015;
LBitProb[4][9][0][19]=0;
LBitProb[4][9][0][20]=0;
LBitProb[4][9][0][21]=0;
LBitProb[4][9][0][22]=0;
LBitProb[4][9][0][23]=0;
LBitProb[5][9][0][0]=0;
LBitProb[5][9][0][1]=0;
LBitProb[5][9][0][2]=0;
LBitProb[5][9][0][3]=0;
LBitProb[5][9][0][4]=0;
LBitProb[5][9][0][5]=0;
LBitProb[5][9][0][6]=0;
LBitProb[5][9][0][7]=0;
LBitProb[5][9][0][8]=0;
LBitProb[5][9][0][9]=0;
LBitProb[5][9][0][10]=0.0452228;
LBitProb[5][9][0][11]=0.321852;
LBitProb[5][9][0][12]=1.55908;
LBitProb[5][9][0][13]=0.740515;
LBitProb[5][9][0][14]=0.229737;
LBitProb[5][9][0][15]=1.3536;
LBitProb[5][9][0][16]=0.130996;
LBitProb[5][9][0][17]=1.50196;
LBitProb[5][9][0][18]=0.117047;
LBitProb[5][9][0][19]=0;
LBitProb[5][9][0][20]=0;
LBitProb[5][9][0][21]=0;
LBitProb[5][9][0][22]=0;
LBitProb[5][9][0][23]=0;
LBitProb[6][9][0][0]=0;
LBitProb[6][9][0][1]=0;
LBitProb[6][9][0][2]=0;
LBitProb[6][9][0][3]=0;
LBitProb[6][9][0][4]=0;
LBitProb[6][9][0][5]=0;
LBitProb[6][9][0][6]=0;
LBitProb[6][9][0][7]=0;
LBitProb[6][9][0][8]=0;
LBitProb[6][9][0][9]=0;
LBitProb[6][9][0][10]=0.312487;
LBitProb[6][9][0][11]=0.437513;
LBitProb[6][9][0][12]=0.35989;
LBitProb[6][9][0][13]=0.282475;
LBitProb[6][9][0][14]=1.07759;
LBitProb[6][9][0][15]=0.280044;
LBitProb[6][9][0][16]=0;
LBitProb[6][9][0][17]=0.510035;
LBitProb[6][9][0][18]=0.642367;
LBitProb[6][9][0][19]=0.0975976;
LBitProb[6][9][0][20]=0;
LBitProb[6][9][0][21]=0;
LBitProb[6][9][0][22]=0;
LBitProb[6][9][0][23]=0;
LBitProb[7][9][0][0]=0;
LBitProb[7][9][0][1]=0;
LBitProb[7][9][0][2]=0;
LBitProb[7][9][0][3]=0;
LBitProb[7][9][0][4]=0;
LBitProb[7][9][0][5]=0;
LBitProb[7][9][0][6]=0;
LBitProb[7][9][0][7]=0;
LBitProb[7][9][0][8]=0;
LBitProb[7][9][0][9]=0;
LBitProb[7][9][0][10]=0.851769;
LBitProb[7][9][0][11]=1.18456;
LBitProb[7][9][0][12]=0.13034;
LBitProb[7][9][0][13]=0.76777;
LBitProb[7][9][0][14]=0.631842;
LBitProb[7][9][0][15]=0.302387;
LBitProb[7][9][0][16]=0.131335;
LBitProb[7][9][0][17]=0.818409;
LBitProb[7][9][0][18]=0.181591;
LBitProb[7][9][0][19]=0;
LBitProb[7][9][0][20]=0;
LBitProb[7][9][0][21]=0;
LBitProb[7][9][0][22]=0;
LBitProb[7][9][0][23]=0;
LBitProb[8][9][0][0]=0;
LBitProb[8][9][0][1]=0;
LBitProb[8][9][0][2]=0;
LBitProb[8][9][0][3]=0;
LBitProb[8][9][0][4]=0;
LBitProb[8][9][0][5]=0;
LBitProb[8][9][0][6]=0;
LBitProb[8][9][0][7]=0;
LBitProb[8][9][0][8]=0;
LBitProb[8][9][0][9]=0;
LBitProb[8][9][0][10]=0;
LBitProb[8][9][0][11]=0;
LBitProb[8][9][0][12]=0;
LBitProb[8][9][0][13]=0.109556;
LBitProb[8][9][0][14]=1.42992;
LBitProb[8][9][0][15]=1.02464;
LBitProb[8][9][0][16]=0.333766;
LBitProb[8][9][0][17]=0.862429;
LBitProb[8][9][0][18]=1.07788;
LBitProb[8][9][0][19]=0.161818;
LBitProb[8][9][0][20]=0;
LBitProb[8][9][0][21]=0;
LBitProb[8][9][0][22]=0;
LBitProb[8][9][0][23]=0;
LBitProb[9][9][0][0]=0;
LBitProb[9][9][0][1]=0;
LBitProb[9][9][0][2]=0;
LBitProb[9][9][0][3]=0;
LBitProb[9][9][0][4]=0;
LBitProb[9][9][0][5]=0;
LBitProb[9][9][0][6]=0;
LBitProb[9][9][0][7]=0;
LBitProb[9][9][0][8]=0;
LBitProb[9][9][0][9]=0;
LBitProb[9][9][0][10]=0;
LBitProb[9][9][0][11]=0;
LBitProb[9][9][0][12]=0;
LBitProb[9][9][0][13]=0.248826;
LBitProb[9][9][0][14]=1.10437;
LBitProb[9][9][0][15]=0.759566;
LBitProb[9][9][0][16]=1.17475;
LBitProb[9][9][0][17]=1.56014;
LBitProb[9][9][0][18]=0.152352;
LBitProb[9][9][0][19]=0;
LBitProb[9][9][0][20]=0;
LBitProb[9][9][0][21]=0;
LBitProb[9][9][0][22]=0;
LBitProb[9][9][0][23]=0;
LBitProb[0][0][1][0]=0;
LBitProb[0][0][1][1]=0;
LBitProb[0][0][1][2]=0;
LBitProb[0][0][1][3]=0;
LBitProb[0][0][1][4]=0;
LBitProb[0][0][1][5]=0;
LBitProb[0][0][1][6]=0;
LBitProb[0][0][1][7]=0;
LBitProb[0][0][1][8]=0;
LBitProb[0][0][1][9]=0;
LBitProb[0][0][1][10]=0;
LBitProb[0][0][1][11]=0;
LBitProb[0][0][1][12]=0;
LBitProb[0][0][1][13]=0;
LBitProb[0][0][1][14]=0;
LBitProb[0][0][1][15]=0;
LBitProb[0][0][1][16]=0;
LBitProb[0][0][1][17]=0;
LBitProb[0][0][1][18]=0;
LBitProb[0][0][1][19]=0;
LBitProb[0][0][1][20]=0;
LBitProb[0][0][1][21]=0;
LBitProb[0][0][1][22]=0;
LBitProb[0][0][1][23]=0;
LBitProb[1][0][1][0]=0;
LBitProb[1][0][1][1]=0;
LBitProb[1][0][1][2]=0;
LBitProb[1][0][1][3]=0;
LBitProb[1][0][1][4]=0;
LBitProb[1][0][1][5]=0;
LBitProb[1][0][1][6]=0;
LBitProb[1][0][1][7]=0;
LBitProb[1][0][1][8]=0;
LBitProb[1][0][1][9]=0;
LBitProb[1][0][1][10]=0;
LBitProb[1][0][1][11]=0;
LBitProb[1][0][1][12]=0;
LBitProb[1][0][1][13]=0;
LBitProb[1][0][1][14]=0;
LBitProb[1][0][1][15]=0;
LBitProb[1][0][1][16]=0;
LBitProb[1][0][1][17]=0;
LBitProb[1][0][1][18]=0;
LBitProb[1][0][1][19]=0;
LBitProb[1][0][1][20]=0;
LBitProb[1][0][1][21]=0;
LBitProb[1][0][1][22]=0;
LBitProb[1][0][1][23]=0;
LBitProb[2][0][1][0]=0;
LBitProb[2][0][1][1]=0;
LBitProb[2][0][1][2]=0;
LBitProb[2][0][1][3]=0;
LBitProb[2][0][1][4]=0;
LBitProb[2][0][1][5]=0;
LBitProb[2][0][1][6]=0;
LBitProb[2][0][1][7]=0;
LBitProb[2][0][1][8]=0;
LBitProb[2][0][1][9]=0;
LBitProb[2][0][1][10]=0;
LBitProb[2][0][1][11]=0;
LBitProb[2][0][1][12]=0;
LBitProb[2][0][1][13]=0;
LBitProb[2][0][1][14]=0;
LBitProb[2][0][1][15]=0;
LBitProb[2][0][1][16]=0;
LBitProb[2][0][1][17]=0;
LBitProb[2][0][1][18]=0;
LBitProb[2][0][1][19]=0;
LBitProb[2][0][1][20]=0;
LBitProb[2][0][1][21]=0;
LBitProb[2][0][1][22]=0;
LBitProb[2][0][1][23]=0;
LBitProb[3][0][1][0]=0;
LBitProb[3][0][1][1]=0;
LBitProb[3][0][1][2]=0;
LBitProb[3][0][1][3]=0;
LBitProb[3][0][1][4]=0;
LBitProb[3][0][1][5]=0;
LBitProb[3][0][1][6]=0;
LBitProb[3][0][1][7]=0;
LBitProb[3][0][1][8]=0;
LBitProb[3][0][1][9]=0;
LBitProb[3][0][1][10]=0;
LBitProb[3][0][1][11]=0;
LBitProb[3][0][1][12]=0;
LBitProb[3][0][1][13]=0;
LBitProb[3][0][1][14]=0;
LBitProb[3][0][1][15]=0;
LBitProb[3][0][1][16]=0;
LBitProb[3][0][1][17]=0;
LBitProb[3][0][1][18]=0;
LBitProb[3][0][1][19]=0;
LBitProb[3][0][1][20]=0;
LBitProb[3][0][1][21]=0;
LBitProb[3][0][1][22]=0;
LBitProb[3][0][1][23]=0;
LBitProb[4][0][1][0]=0;
LBitProb[4][0][1][1]=0;
LBitProb[4][0][1][2]=0;
LBitProb[4][0][1][3]=0;
LBitProb[4][0][1][4]=0;
LBitProb[4][0][1][5]=0;
LBitProb[4][0][1][6]=0;
LBitProb[4][0][1][7]=0;
LBitProb[4][0][1][8]=0;
LBitProb[4][0][1][9]=0;
LBitProb[4][0][1][10]=0;
LBitProb[4][0][1][11]=0;
LBitProb[4][0][1][12]=0;
LBitProb[4][0][1][13]=0;
LBitProb[4][0][1][14]=0;
LBitProb[4][0][1][15]=0;
LBitProb[4][0][1][16]=0;
LBitProb[4][0][1][17]=0;
LBitProb[4][0][1][18]=0;
LBitProb[4][0][1][19]=0;
LBitProb[4][0][1][20]=0;
LBitProb[4][0][1][21]=0;
LBitProb[4][0][1][22]=0;
LBitProb[4][0][1][23]=0;
LBitProb[5][0][1][0]=0;
LBitProb[5][0][1][1]=0;
LBitProb[5][0][1][2]=0;
LBitProb[5][0][1][3]=0;
LBitProb[5][0][1][4]=0;
LBitProb[5][0][1][5]=0;
LBitProb[5][0][1][6]=0;
LBitProb[5][0][1][7]=0;
LBitProb[5][0][1][8]=0;
LBitProb[5][0][1][9]=0;
LBitProb[5][0][1][10]=0;
LBitProb[5][0][1][11]=0;
LBitProb[5][0][1][12]=0;
LBitProb[5][0][1][13]=0;
LBitProb[5][0][1][14]=0;
LBitProb[5][0][1][15]=0;
LBitProb[5][0][1][16]=0;
LBitProb[5][0][1][17]=0;
LBitProb[5][0][1][18]=0;
LBitProb[5][0][1][19]=0;
LBitProb[5][0][1][20]=0;
LBitProb[5][0][1][21]=0;
LBitProb[5][0][1][22]=0;
LBitProb[5][0][1][23]=0;
LBitProb[6][0][1][0]=0;
LBitProb[6][0][1][1]=0;
LBitProb[6][0][1][2]=0;
LBitProb[6][0][1][3]=0;
LBitProb[6][0][1][4]=0;
LBitProb[6][0][1][5]=0;
LBitProb[6][0][1][6]=0;
LBitProb[6][0][1][7]=0;
LBitProb[6][0][1][8]=0;
LBitProb[6][0][1][9]=0;
LBitProb[6][0][1][10]=0;
LBitProb[6][0][1][11]=0;
LBitProb[6][0][1][12]=0;
LBitProb[6][0][1][13]=0;
LBitProb[6][0][1][14]=0;
LBitProb[6][0][1][15]=0;
LBitProb[6][0][1][16]=0;
LBitProb[6][0][1][17]=0;
LBitProb[6][0][1][18]=0;
LBitProb[6][0][1][19]=0;
LBitProb[6][0][1][20]=0;
LBitProb[6][0][1][21]=0;
LBitProb[6][0][1][22]=0;
LBitProb[6][0][1][23]=0;
LBitProb[7][0][1][0]=0;
LBitProb[7][0][1][1]=0;
LBitProb[7][0][1][2]=0;
LBitProb[7][0][1][3]=0;
LBitProb[7][0][1][4]=0;
LBitProb[7][0][1][5]=0;
LBitProb[7][0][1][6]=0;
LBitProb[7][0][1][7]=0;
LBitProb[7][0][1][8]=0;
LBitProb[7][0][1][9]=0;
LBitProb[7][0][1][10]=0;
LBitProb[7][0][1][11]=0;
LBitProb[7][0][1][12]=0;
LBitProb[7][0][1][13]=0;
LBitProb[7][0][1][14]=0;
LBitProb[7][0][1][15]=0;
LBitProb[7][0][1][16]=0;
LBitProb[7][0][1][17]=0;
LBitProb[7][0][1][18]=0;
LBitProb[7][0][1][19]=0;
LBitProb[7][0][1][20]=0;
LBitProb[7][0][1][21]=0;
LBitProb[7][0][1][22]=0;
LBitProb[7][0][1][23]=0;
LBitProb[8][0][1][0]=0;
LBitProb[8][0][1][1]=0;
LBitProb[8][0][1][2]=0;
LBitProb[8][0][1][3]=0;
LBitProb[8][0][1][4]=0;
LBitProb[8][0][1][5]=0;
LBitProb[8][0][1][6]=0;
LBitProb[8][0][1][7]=0;
LBitProb[8][0][1][8]=0;
LBitProb[8][0][1][9]=0;
LBitProb[8][0][1][10]=0;
LBitProb[8][0][1][11]=0;
LBitProb[8][0][1][12]=0;
LBitProb[8][0][1][13]=0;
LBitProb[8][0][1][14]=0;
LBitProb[8][0][1][15]=0;
LBitProb[8][0][1][16]=0;
LBitProb[8][0][1][17]=0;
LBitProb[8][0][1][18]=0;
LBitProb[8][0][1][19]=0;
LBitProb[8][0][1][20]=0;
LBitProb[8][0][1][21]=0;
LBitProb[8][0][1][22]=0;
LBitProb[8][0][1][23]=0;
LBitProb[9][0][1][0]=0;
LBitProb[9][0][1][1]=0;
LBitProb[9][0][1][2]=0;
LBitProb[9][0][1][3]=0;
LBitProb[9][0][1][4]=0;
LBitProb[9][0][1][5]=0;
LBitProb[9][0][1][6]=0;
LBitProb[9][0][1][7]=0;
LBitProb[9][0][1][8]=0;
LBitProb[9][0][1][9]=0;
LBitProb[9][0][1][10]=0;
LBitProb[9][0][1][11]=0;
LBitProb[9][0][1][12]=0;
LBitProb[9][0][1][13]=0;
LBitProb[9][0][1][14]=0;
LBitProb[9][0][1][15]=0;
LBitProb[9][0][1][16]=0;
LBitProb[9][0][1][17]=0;
LBitProb[9][0][1][18]=0;
LBitProb[9][0][1][19]=0;
LBitProb[9][0][1][20]=0;
LBitProb[9][0][1][21]=0;
LBitProb[9][0][1][22]=0;
LBitProb[9][0][1][23]=0;
LBitProb[0][1][1][0]=0;
LBitProb[0][1][1][1]=0;
LBitProb[0][1][1][2]=0;
LBitProb[0][1][1][3]=0;
LBitProb[0][1][1][4]=0;
LBitProb[0][1][1][5]=0;
LBitProb[0][1][1][6]=0;
LBitProb[0][1][1][7]=0;
LBitProb[0][1][1][8]=0;
LBitProb[0][1][1][9]=0;
LBitProb[0][1][1][10]=0;
LBitProb[0][1][1][11]=0;
LBitProb[0][1][1][12]=0;
LBitProb[0][1][1][13]=0;
LBitProb[0][1][1][14]=0;
LBitProb[0][1][1][15]=0;
LBitProb[0][1][1][16]=0;
LBitProb[0][1][1][17]=0;
LBitProb[0][1][1][18]=0;
LBitProb[0][1][1][19]=0;
LBitProb[0][1][1][20]=0;
LBitProb[0][1][1][21]=0;
LBitProb[0][1][1][22]=0;
LBitProb[0][1][1][23]=0;
LBitProb[1][1][1][0]=0;
LBitProb[1][1][1][1]=0;
LBitProb[1][1][1][2]=0;
LBitProb[1][1][1][3]=0;
LBitProb[1][1][1][4]=0;
LBitProb[1][1][1][5]=0;
LBitProb[1][1][1][6]=0;
LBitProb[1][1][1][7]=0;
LBitProb[1][1][1][8]=0;
LBitProb[1][1][1][9]=0;
LBitProb[1][1][1][10]=0;
LBitProb[1][1][1][11]=0;
LBitProb[1][1][1][12]=0;
LBitProb[1][1][1][13]=0;
LBitProb[1][1][1][14]=0;
LBitProb[1][1][1][15]=0;
LBitProb[1][1][1][16]=0;
LBitProb[1][1][1][17]=0;
LBitProb[1][1][1][18]=0;
LBitProb[1][1][1][19]=0;
LBitProb[1][1][1][20]=0;
LBitProb[1][1][1][21]=0;
LBitProb[1][1][1][22]=0;
LBitProb[1][1][1][23]=0;
LBitProb[2][1][1][0]=0;
LBitProb[2][1][1][1]=0;
LBitProb[2][1][1][2]=0;
LBitProb[2][1][1][3]=0;
LBitProb[2][1][1][4]=0;
LBitProb[2][1][1][5]=0;
LBitProb[2][1][1][6]=0;
LBitProb[2][1][1][7]=0;
LBitProb[2][1][1][8]=0;
LBitProb[2][1][1][9]=0;
LBitProb[2][1][1][10]=0;
LBitProb[2][1][1][11]=0;
LBitProb[2][1][1][12]=0;
LBitProb[2][1][1][13]=0;
LBitProb[2][1][1][14]=0;
LBitProb[2][1][1][15]=0;
LBitProb[2][1][1][16]=0;
LBitProb[2][1][1][17]=0;
LBitProb[2][1][1][18]=0;
LBitProb[2][1][1][19]=0;
LBitProb[2][1][1][20]=0;
LBitProb[2][1][1][21]=0;
LBitProb[2][1][1][22]=0;
LBitProb[2][1][1][23]=0;
LBitProb[3][1][1][0]=0;
LBitProb[3][1][1][1]=0;
LBitProb[3][1][1][2]=0;
LBitProb[3][1][1][3]=0;
LBitProb[3][1][1][4]=0;
LBitProb[3][1][1][5]=0;
LBitProb[3][1][1][6]=0;
LBitProb[3][1][1][7]=0;
LBitProb[3][1][1][8]=0;
LBitProb[3][1][1][9]=0;
LBitProb[3][1][1][10]=0;
LBitProb[3][1][1][11]=0;
LBitProb[3][1][1][12]=0;
LBitProb[3][1][1][13]=0;
LBitProb[3][1][1][14]=0;
LBitProb[3][1][1][15]=0;
LBitProb[3][1][1][16]=0;
LBitProb[3][1][1][17]=0;
LBitProb[3][1][1][18]=0;
LBitProb[3][1][1][19]=0;
LBitProb[3][1][1][20]=0;
LBitProb[3][1][1][21]=0;
LBitProb[3][1][1][22]=0;
LBitProb[3][1][1][23]=0;
LBitProb[4][1][1][0]=0;
LBitProb[4][1][1][1]=0;
LBitProb[4][1][1][2]=0;
LBitProb[4][1][1][3]=0;
LBitProb[4][1][1][4]=0;
LBitProb[4][1][1][5]=0;
LBitProb[4][1][1][6]=0;
LBitProb[4][1][1][7]=0;
LBitProb[4][1][1][8]=0;
LBitProb[4][1][1][9]=0;
LBitProb[4][1][1][10]=0;
LBitProb[4][1][1][11]=0;
LBitProb[4][1][1][12]=0;
LBitProb[4][1][1][13]=0;
LBitProb[4][1][1][14]=0;
LBitProb[4][1][1][15]=0;
LBitProb[4][1][1][16]=0;
LBitProb[4][1][1][17]=0;
LBitProb[4][1][1][18]=0;
LBitProb[4][1][1][19]=0;
LBitProb[4][1][1][20]=0;
LBitProb[4][1][1][21]=0;
LBitProb[4][1][1][22]=0;
LBitProb[4][1][1][23]=0;
LBitProb[5][1][1][0]=0;
LBitProb[5][1][1][1]=0;
LBitProb[5][1][1][2]=0;
LBitProb[5][1][1][3]=0;
LBitProb[5][1][1][4]=0;
LBitProb[5][1][1][5]=0;
LBitProb[5][1][1][6]=0;
LBitProb[5][1][1][7]=0;
LBitProb[5][1][1][8]=0;
LBitProb[5][1][1][9]=0;
LBitProb[5][1][1][10]=0;
LBitProb[5][1][1][11]=0;
LBitProb[5][1][1][12]=0;
LBitProb[5][1][1][13]=0;
LBitProb[5][1][1][14]=0;
LBitProb[5][1][1][15]=0;
LBitProb[5][1][1][16]=0;
LBitProb[5][1][1][17]=0;
LBitProb[5][1][1][18]=0;
LBitProb[5][1][1][19]=0;
LBitProb[5][1][1][20]=0;
LBitProb[5][1][1][21]=0;
LBitProb[5][1][1][22]=0;
LBitProb[5][1][1][23]=0;
LBitProb[6][1][1][0]=0;
LBitProb[6][1][1][1]=0;
LBitProb[6][1][1][2]=0;
LBitProb[6][1][1][3]=0;
LBitProb[6][1][1][4]=0;
LBitProb[6][1][1][5]=0;
LBitProb[6][1][1][6]=0;
LBitProb[6][1][1][7]=0;
LBitProb[6][1][1][8]=0;
LBitProb[6][1][1][9]=0;
LBitProb[6][1][1][10]=0;
LBitProb[6][1][1][11]=0;
LBitProb[6][1][1][12]=0;
LBitProb[6][1][1][13]=0;
LBitProb[6][1][1][14]=0;
LBitProb[6][1][1][15]=0;
LBitProb[6][1][1][16]=0;
LBitProb[6][1][1][17]=0;
LBitProb[6][1][1][18]=0;
LBitProb[6][1][1][19]=0;
LBitProb[6][1][1][20]=0;
LBitProb[6][1][1][21]=0;
LBitProb[6][1][1][22]=0;
LBitProb[6][1][1][23]=0;
LBitProb[7][1][1][0]=0;
LBitProb[7][1][1][1]=0;
LBitProb[7][1][1][2]=0;
LBitProb[7][1][1][3]=0;
LBitProb[7][1][1][4]=0;
LBitProb[7][1][1][5]=0;
LBitProb[7][1][1][6]=0;
LBitProb[7][1][1][7]=0;
LBitProb[7][1][1][8]=0;
LBitProb[7][1][1][9]=0;
LBitProb[7][1][1][10]=0;
LBitProb[7][1][1][11]=0;
LBitProb[7][1][1][12]=0;
LBitProb[7][1][1][13]=0;
LBitProb[7][1][1][14]=0;
LBitProb[7][1][1][15]=0;
LBitProb[7][1][1][16]=0;
LBitProb[7][1][1][17]=0;
LBitProb[7][1][1][18]=0;
LBitProb[7][1][1][19]=0;
LBitProb[7][1][1][20]=0;
LBitProb[7][1][1][21]=0;
LBitProb[7][1][1][22]=0;
LBitProb[7][1][1][23]=0;
LBitProb[8][1][1][0]=0;
LBitProb[8][1][1][1]=0;
LBitProb[8][1][1][2]=0;
LBitProb[8][1][1][3]=0;
LBitProb[8][1][1][4]=0;
LBitProb[8][1][1][5]=0;
LBitProb[8][1][1][6]=0;
LBitProb[8][1][1][7]=0;
LBitProb[8][1][1][8]=0;
LBitProb[8][1][1][9]=0;
LBitProb[8][1][1][10]=0;
LBitProb[8][1][1][11]=0;
LBitProb[8][1][1][12]=0;
LBitProb[8][1][1][13]=0;
LBitProb[8][1][1][14]=0;
LBitProb[8][1][1][15]=0;
LBitProb[8][1][1][16]=0;
LBitProb[8][1][1][17]=0;
LBitProb[8][1][1][18]=0;
LBitProb[8][1][1][19]=0;
LBitProb[8][1][1][20]=0;
LBitProb[8][1][1][21]=0;
LBitProb[8][1][1][22]=0;
LBitProb[8][1][1][23]=0;
LBitProb[9][1][1][0]=0;
LBitProb[9][1][1][1]=0;
LBitProb[9][1][1][2]=0;
LBitProb[9][1][1][3]=0;
LBitProb[9][1][1][4]=0;
LBitProb[9][1][1][5]=0;
LBitProb[9][1][1][6]=0;
LBitProb[9][1][1][7]=0;
LBitProb[9][1][1][8]=0;
LBitProb[9][1][1][9]=0;
LBitProb[9][1][1][10]=0;
LBitProb[9][1][1][11]=0;
LBitProb[9][1][1][12]=0;
LBitProb[9][1][1][13]=0;
LBitProb[9][1][1][14]=0;
LBitProb[9][1][1][15]=0;
LBitProb[9][1][1][16]=0;
LBitProb[9][1][1][17]=0;
LBitProb[9][1][1][18]=0;
LBitProb[9][1][1][19]=0;
LBitProb[9][1][1][20]=0;
LBitProb[9][1][1][21]=0;
LBitProb[9][1][1][22]=0;
LBitProb[9][1][1][23]=0;
LBitProb[0][2][1][0]=0;
LBitProb[0][2][1][1]=0;
LBitProb[0][2][1][2]=0;
LBitProb[0][2][1][3]=0;
LBitProb[0][2][1][4]=0;
LBitProb[0][2][1][5]=0;
LBitProb[0][2][1][6]=0;
LBitProb[0][2][1][7]=0;
LBitProb[0][2][1][8]=0;
LBitProb[0][2][1][9]=0;
LBitProb[0][2][1][10]=0;
LBitProb[0][2][1][11]=0;
LBitProb[0][2][1][12]=0;
LBitProb[0][2][1][13]=0;
LBitProb[0][2][1][14]=0;
LBitProb[0][2][1][15]=0;
LBitProb[0][2][1][16]=0;
LBitProb[0][2][1][17]=0;
LBitProb[0][2][1][18]=0;
LBitProb[0][2][1][19]=0;
LBitProb[0][2][1][20]=0;
LBitProb[0][2][1][21]=0;
LBitProb[0][2][1][22]=0;
LBitProb[0][2][1][23]=0;
LBitProb[1][2][1][0]=0;
LBitProb[1][2][1][1]=0;
LBitProb[1][2][1][2]=0;
LBitProb[1][2][1][3]=0;
LBitProb[1][2][1][4]=0;
LBitProb[1][2][1][5]=0;
LBitProb[1][2][1][6]=0;
LBitProb[1][2][1][7]=0;
LBitProb[1][2][1][8]=0;
LBitProb[1][2][1][9]=0;
LBitProb[1][2][1][10]=0;
LBitProb[1][2][1][11]=0;
LBitProb[1][2][1][12]=0;
LBitProb[1][2][1][13]=0;
LBitProb[1][2][1][14]=0;
LBitProb[1][2][1][15]=0;
LBitProb[1][2][1][16]=0;
LBitProb[1][2][1][17]=0;
LBitProb[1][2][1][18]=0;
LBitProb[1][2][1][19]=0;
LBitProb[1][2][1][20]=0;
LBitProb[1][2][1][21]=0;
LBitProb[1][2][1][22]=0;
LBitProb[1][2][1][23]=0;
LBitProb[2][2][1][0]=0;
LBitProb[2][2][1][1]=0;
LBitProb[2][2][1][2]=0;
LBitProb[2][2][1][3]=0;
LBitProb[2][2][1][4]=0;
LBitProb[2][2][1][5]=0;
LBitProb[2][2][1][6]=0;
LBitProb[2][2][1][7]=0;
LBitProb[2][2][1][8]=0;
LBitProb[2][2][1][9]=0;
LBitProb[2][2][1][10]=0;
LBitProb[2][2][1][11]=0;
LBitProb[2][2][1][12]=0;
LBitProb[2][2][1][13]=0;
LBitProb[2][2][1][14]=0;
LBitProb[2][2][1][15]=0;
LBitProb[2][2][1][16]=0;
LBitProb[2][2][1][17]=0;
LBitProb[2][2][1][18]=0;
LBitProb[2][2][1][19]=0;
LBitProb[2][2][1][20]=0;
LBitProb[2][2][1][21]=0;
LBitProb[2][2][1][22]=0;
LBitProb[2][2][1][23]=0;
LBitProb[3][2][1][0]=0;
LBitProb[3][2][1][1]=0;
LBitProb[3][2][1][2]=0;
LBitProb[3][2][1][3]=0;
LBitProb[3][2][1][4]=0;
LBitProb[3][2][1][5]=0;
LBitProb[3][2][1][6]=0;
LBitProb[3][2][1][7]=0;
LBitProb[3][2][1][8]=0;
LBitProb[3][2][1][9]=0;
LBitProb[3][2][1][10]=0;
LBitProb[3][2][1][11]=0;
LBitProb[3][2][1][12]=0;
LBitProb[3][2][1][13]=0;
LBitProb[3][2][1][14]=0;
LBitProb[3][2][1][15]=0;
LBitProb[3][2][1][16]=0;
LBitProb[3][2][1][17]=0;
LBitProb[3][2][1][18]=0;
LBitProb[3][2][1][19]=0;
LBitProb[3][2][1][20]=0;
LBitProb[3][2][1][21]=0;
LBitProb[3][2][1][22]=0;
LBitProb[3][2][1][23]=0;
LBitProb[4][2][1][0]=0;
LBitProb[4][2][1][1]=0;
LBitProb[4][2][1][2]=0;
LBitProb[4][2][1][3]=0;
LBitProb[4][2][1][4]=0;
LBitProb[4][2][1][5]=0;
LBitProb[4][2][1][6]=0;
LBitProb[4][2][1][7]=0;
LBitProb[4][2][1][8]=0;
LBitProb[4][2][1][9]=0;
LBitProb[4][2][1][10]=0;
LBitProb[4][2][1][11]=0;
LBitProb[4][2][1][12]=0;
LBitProb[4][2][1][13]=0;
LBitProb[4][2][1][14]=0;
LBitProb[4][2][1][15]=0;
LBitProb[4][2][1][16]=0;
LBitProb[4][2][1][17]=0;
LBitProb[4][2][1][18]=0;
LBitProb[4][2][1][19]=0;
LBitProb[4][2][1][20]=0;
LBitProb[4][2][1][21]=0;
LBitProb[4][2][1][22]=0;
LBitProb[4][2][1][23]=0;
LBitProb[5][2][1][0]=0;
LBitProb[5][2][1][1]=0;
LBitProb[5][2][1][2]=0;
LBitProb[5][2][1][3]=0;
LBitProb[5][2][1][4]=0;
LBitProb[5][2][1][5]=0;
LBitProb[5][2][1][6]=0;
LBitProb[5][2][1][7]=0;
LBitProb[5][2][1][8]=0;
LBitProb[5][2][1][9]=0;
LBitProb[5][2][1][10]=0;
LBitProb[5][2][1][11]=0;
LBitProb[5][2][1][12]=0;
LBitProb[5][2][1][13]=0;
LBitProb[5][2][1][14]=0;
LBitProb[5][2][1][15]=0;
LBitProb[5][2][1][16]=0;
LBitProb[5][2][1][17]=0;
LBitProb[5][2][1][18]=0;
LBitProb[5][2][1][19]=0;
LBitProb[5][2][1][20]=0;
LBitProb[5][2][1][21]=0;
LBitProb[5][2][1][22]=0;
LBitProb[5][2][1][23]=0;
LBitProb[6][2][1][0]=0;
LBitProb[6][2][1][1]=0;
LBitProb[6][2][1][2]=0;
LBitProb[6][2][1][3]=0;
LBitProb[6][2][1][4]=0;
LBitProb[6][2][1][5]=0;
LBitProb[6][2][1][6]=0;
LBitProb[6][2][1][7]=0;
LBitProb[6][2][1][8]=0;
LBitProb[6][2][1][9]=0;
LBitProb[6][2][1][10]=0;
LBitProb[6][2][1][11]=0;
LBitProb[6][2][1][12]=0;
LBitProb[6][2][1][13]=0;
LBitProb[6][2][1][14]=0;
LBitProb[6][2][1][15]=0;
LBitProb[6][2][1][16]=0;
LBitProb[6][2][1][17]=0;
LBitProb[6][2][1][18]=0;
LBitProb[6][2][1][19]=0;
LBitProb[6][2][1][20]=0;
LBitProb[6][2][1][21]=0;
LBitProb[6][2][1][22]=0;
LBitProb[6][2][1][23]=0;
LBitProb[7][2][1][0]=0;
LBitProb[7][2][1][1]=0;
LBitProb[7][2][1][2]=0;
LBitProb[7][2][1][3]=0;
LBitProb[7][2][1][4]=0;
LBitProb[7][2][1][5]=0;
LBitProb[7][2][1][6]=0;
LBitProb[7][2][1][7]=0;
LBitProb[7][2][1][8]=0;
LBitProb[7][2][1][9]=0;
LBitProb[7][2][1][10]=0;
LBitProb[7][2][1][11]=0;
LBitProb[7][2][1][12]=0;
LBitProb[7][2][1][13]=0;
LBitProb[7][2][1][14]=0;
LBitProb[7][2][1][15]=0;
LBitProb[7][2][1][16]=0;
LBitProb[7][2][1][17]=0;
LBitProb[7][2][1][18]=0;
LBitProb[7][2][1][19]=0;
LBitProb[7][2][1][20]=0;
LBitProb[7][2][1][21]=0;
LBitProb[7][2][1][22]=0;
LBitProb[7][2][1][23]=0;
LBitProb[8][2][1][0]=0;
LBitProb[8][2][1][1]=0;
LBitProb[8][2][1][2]=0;
LBitProb[8][2][1][3]=0;
LBitProb[8][2][1][4]=0;
LBitProb[8][2][1][5]=0;
LBitProb[8][2][1][6]=0;
LBitProb[8][2][1][7]=0;
LBitProb[8][2][1][8]=0;
LBitProb[8][2][1][9]=0;
LBitProb[8][2][1][10]=0;
LBitProb[8][2][1][11]=0;
LBitProb[8][2][1][12]=0;
LBitProb[8][2][1][13]=0;
LBitProb[8][2][1][14]=0;
LBitProb[8][2][1][15]=0;
LBitProb[8][2][1][16]=0;
LBitProb[8][2][1][17]=0;
LBitProb[8][2][1][18]=0;
LBitProb[8][2][1][19]=0;
LBitProb[8][2][1][20]=0;
LBitProb[8][2][1][21]=0;
LBitProb[8][2][1][22]=0;
LBitProb[8][2][1][23]=0;
LBitProb[9][2][1][0]=0;
LBitProb[9][2][1][1]=0;
LBitProb[9][2][1][2]=0;
LBitProb[9][2][1][3]=0;
LBitProb[9][2][1][4]=0;
LBitProb[9][2][1][5]=0;
LBitProb[9][2][1][6]=0;
LBitProb[9][2][1][7]=0;
LBitProb[9][2][1][8]=0;
LBitProb[9][2][1][9]=0;
LBitProb[9][2][1][10]=0;
LBitProb[9][2][1][11]=0;
LBitProb[9][2][1][12]=0;
LBitProb[9][2][1][13]=0;
LBitProb[9][2][1][14]=0;
LBitProb[9][2][1][15]=0;
LBitProb[9][2][1][16]=0;
LBitProb[9][2][1][17]=0;
LBitProb[9][2][1][18]=0;
LBitProb[9][2][1][19]=0;
LBitProb[9][2][1][20]=0;
LBitProb[9][2][1][21]=0;
LBitProb[9][2][1][22]=0;
LBitProb[9][2][1][23]=0;
LBitProb[0][3][1][0]=0;
LBitProb[0][3][1][1]=0.00915724;
LBitProb[0][3][1][2]=0.0100735;
LBitProb[0][3][1][3]=0.0182515;
LBitProb[0][3][1][4]=0.114767;
LBitProb[0][3][1][5]=0.182746;
LBitProb[0][3][1][6]=0.321552;
LBitProb[0][3][1][7]=0.558592;
LBitProb[0][3][1][8]=0.731256;
LBitProb[0][3][1][9]=1.01025;
LBitProb[0][3][1][10]=1.39559;
LBitProb[0][3][1][11]=2.00193;
LBitProb[0][3][1][12]=2.71525;
LBitProb[0][3][1][13]=3.81416;
LBitProb[0][3][1][14]=5.06298;
LBitProb[0][3][1][15]=4.28476;
LBitProb[0][3][1][16]=2.0203;
LBitProb[0][3][1][17]=0.513962;
LBitProb[0][3][1][18]=0.178203;
LBitProb[0][3][1][19]=0.0443464;
LBitProb[0][3][1][20]=0.0118699;
LBitProb[0][3][1][21]=0;
LBitProb[0][3][1][22]=0;
LBitProb[0][3][1][23]=0;
LBitProb[1][3][1][0]=0;
LBitProb[1][3][1][1]=0;
LBitProb[1][3][1][2]=0.00970612;
LBitProb[1][3][1][3]=0.0209452;
LBitProb[1][3][1][4]=0.0691719;
LBitProb[1][3][1][5]=0.163095;
LBitProb[1][3][1][6]=0.314851;
LBitProb[1][3][1][7]=0.463981;
LBitProb[1][3][1][8]=0.553942;
LBitProb[1][3][1][9]=0.916032;
LBitProb[1][3][1][10]=1.46838;
LBitProb[1][3][1][11]=2.06701;
LBitProb[1][3][1][12]=2.8348;
LBitProb[1][3][1][13]=3.89052;
LBitProb[1][3][1][14]=5.01116;
LBitProb[1][3][1][15]=4.19612;
LBitProb[1][3][1][16]=2.33428;
LBitProb[1][3][1][17]=0.621606;
LBitProb[1][3][1][18]=0.0644091;
LBitProb[1][3][1][19]=0;
LBitProb[1][3][1][20]=0;
LBitProb[1][3][1][21]=0;
LBitProb[1][3][1][22]=0;
LBitProb[1][3][1][23]=0;
LBitProb[2][3][1][0]=0;
LBitProb[2][3][1][1]=0;
LBitProb[2][3][1][2]=0;
LBitProb[2][3][1][3]=0;
LBitProb[2][3][1][4]=0.0411742;
LBitProb[2][3][1][5]=0.122848;
LBitProb[2][3][1][6]=0.287013;
LBitProb[2][3][1][7]=0.584662;
LBitProb[2][3][1][8]=0.843016;
LBitProb[2][3][1][9]=1.07125;
LBitProb[2][3][1][10]=1.48139;
LBitProb[2][3][1][11]=2.12448;
LBitProb[2][3][1][12]=2.96619;
LBitProb[2][3][1][13]=4.06305;
LBitProb[2][3][1][14]=4.71205;
LBitProb[2][3][1][15]=4.15581;
LBitProb[2][3][1][16]=1.93562;
LBitProb[2][3][1][17]=0.449429;
LBitProb[2][3][1][18]=0.0807847;
LBitProb[2][3][1][19]=0.0541667;
LBitProb[2][3][1][20]=0.0270753;
LBitProb[2][3][1][21]=0;
LBitProb[2][3][1][22]=0;
LBitProb[2][3][1][23]=0;
LBitProb[3][3][1][0]=0;
LBitProb[3][3][1][1]=0;
LBitProb[3][3][1][2]=0;
LBitProb[3][3][1][3]=0;
LBitProb[3][3][1][4]=0.00702538;
LBitProb[3][3][1][5]=0.0996903;
LBitProb[3][3][1][6]=0.232841;
LBitProb[3][3][1][7]=0.401039;
LBitProb[3][3][1][8]=0.658005;
LBitProb[3][3][1][9]=0.845714;
LBitProb[3][3][1][10]=1.44238;
LBitProb[3][3][1][11]=2.16239;
LBitProb[3][3][1][12]=2.75897;
LBitProb[3][3][1][13]=3.90346;
LBitProb[3][3][1][14]=5.07236;
LBitProb[3][3][1][15]=4.41751;
LBitProb[3][3][1][16]=2.15124;
LBitProb[3][3][1][17]=0.692068;
LBitProb[3][3][1][18]=0.122337;
LBitProb[3][3][1][19]=0.0247738;
LBitProb[3][3][1][20]=0.00820085;
LBitProb[3][3][1][21]=0;
LBitProb[3][3][1][22]=0;
LBitProb[3][3][1][23]=0;
LBitProb[4][3][1][0]=0;
LBitProb[4][3][1][1]=0;
LBitProb[4][3][1][2]=0;
LBitProb[4][3][1][3]=0;
LBitProb[4][3][1][4]=0;
LBitProb[4][3][1][5]=0.0149541;
LBitProb[4][3][1][6]=0.0495777;
LBitProb[4][3][1][7]=0.187293;
LBitProb[4][3][1][8]=0.57345;
LBitProb[4][3][1][9]=1.0133;
LBitProb[4][3][1][10]=1.73475;
LBitProb[4][3][1][11]=2.40218;
LBitProb[4][3][1][12]=2.81031;
LBitProb[4][3][1][13]=3.81231;
LBitProb[4][3][1][14]=4.71897;
LBitProb[4][3][1][15]=4.31881;
LBitProb[4][3][1][16]=2.51812;
LBitProb[4][3][1][17]=0.739284;
LBitProb[4][3][1][18]=0.071244;
LBitProb[4][3][1][19]=0.0264194;
LBitProb[4][3][1][20]=0.0090223;
LBitProb[4][3][1][21]=0;
LBitProb[4][3][1][22]=0;
LBitProb[4][3][1][23]=0;
LBitProb[5][3][1][0]=0;
LBitProb[5][3][1][1]=0;
LBitProb[5][3][1][2]=0;
LBitProb[5][3][1][3]=0;
LBitProb[5][3][1][4]=0.0158942;
LBitProb[5][3][1][5]=0.0354858;
LBitProb[5][3][1][6]=0.0229891;
LBitProb[5][3][1][7]=0.0556232;
LBitProb[5][3][1][8]=0.24584;
LBitProb[5][3][1][9]=0.72342;
LBitProb[5][3][1][10]=1.45754;
LBitProb[5][3][1][11]=2.17194;
LBitProb[5][3][1][12]=2.83048;
LBitProb[5][3][1][13]=3.8986;
LBitProb[5][3][1][14]=5.05101;
LBitProb[5][3][1][15]=4.98333;
LBitProb[5][3][1][16]=2.65549;
LBitProb[5][3][1][17]=0.702608;
LBitProb[5][3][1][18]=0.104291;
LBitProb[5][3][1][19]=0.0454574;
LBitProb[5][3][1][20]=0;
LBitProb[5][3][1][21]=0;
LBitProb[5][3][1][22]=0;
LBitProb[5][3][1][23]=0;
LBitProb[6][3][1][0]=0;
LBitProb[6][3][1][1]=0;
LBitProb[6][3][1][2]=0.0161009;
LBitProb[6][3][1][3]=0.0255702;
LBitProb[6][3][1][4]=0.0111785;
LBitProb[6][3][1][5]=0.00319321;
LBitProb[6][3][1][6]=0.0121914;
LBitProb[6][3][1][7]=0.0156867;
LBitProb[6][3][1][8]=0.0713309;
LBitProb[6][3][1][9]=0.313021;
LBitProb[6][3][1][10]=0.769102;
LBitProb[6][3][1][11]=1.73928;
LBitProb[6][3][1][12]=3.08328;
LBitProb[6][3][1][13]=4.12952;
LBitProb[6][3][1][14]=5.21538;
LBitProb[6][3][1][15]=5.07457;
LBitProb[6][3][1][16]=3.29212;
LBitProb[6][3][1][17]=1.05317;
LBitProb[6][3][1][18]=0.149982;
LBitProb[6][3][1][19]=0.011504;
LBitProb[6][3][1][20]=0.013829;
LBitProb[6][3][1][21]=0;
LBitProb[6][3][1][22]=0;
LBitProb[6][3][1][23]=0;
LBitProb[7][3][1][0]=0;
LBitProb[7][3][1][1]=0;
LBitProb[7][3][1][2]=0;
LBitProb[7][3][1][3]=0;
LBitProb[7][3][1][4]=0;
LBitProb[7][3][1][5]=0.0072132;
LBitProb[7][3][1][6]=0.00727955;
LBitProb[7][3][1][7]=0.00789702;
LBitProb[7][3][1][8]=0.0218663;
LBitProb[7][3][1][9]=0.103738;
LBitProb[7][3][1][10]=0.359784;
LBitProb[7][3][1][11]=1.14944;
LBitProb[7][3][1][12]=2.71046;
LBitProb[7][3][1][13]=4.44584;
LBitProb[7][3][1][14]=5.74471;
LBitProb[7][3][1][15]=5.62964;
LBitProb[7][3][1][16]=3.48332;
LBitProb[7][3][1][17]=1.09574;
LBitProb[7][3][1][18]=0.189791;
LBitProb[7][3][1][19]=0.0432758;
LBitProb[7][3][1][20]=0;
LBitProb[7][3][1][21]=0;
LBitProb[7][3][1][22]=0;
LBitProb[7][3][1][23]=0;
LBitProb[8][3][1][0]=0;
LBitProb[8][3][1][1]=0.00708576;
LBitProb[8][3][1][2]=0.0101556;
LBitProb[8][3][1][3]=0;
LBitProb[8][3][1][4]=0;
LBitProb[8][3][1][5]=0;
LBitProb[8][3][1][6]=0;
LBitProb[8][3][1][7]=0;
LBitProb[8][3][1][8]=0;
LBitProb[8][3][1][9]=0.0594731;
LBitProb[8][3][1][10]=0.189643;
LBitProb[8][3][1][11]=0.653122;
LBitProb[8][3][1][12]=1.77692;
LBitProb[8][3][1][13]=3.82772;
LBitProb[8][3][1][14]=6.0002;
LBitProb[8][3][1][15]=6.451;
LBitProb[8][3][1][16]=4.30123;
LBitProb[8][3][1][17]=1.42403;
LBitProb[8][3][1][18]=0.217286;
LBitProb[8][3][1][19]=0.0508822;
LBitProb[8][3][1][20]=0.0312538;
LBitProb[8][3][1][21]=0;
LBitProb[8][3][1][22]=0;
LBitProb[8][3][1][23]=0;
LBitProb[9][3][1][0]=0;
LBitProb[9][3][1][1]=0;
LBitProb[9][3][1][2]=0;
LBitProb[9][3][1][3]=0;
LBitProb[9][3][1][4]=0;
LBitProb[9][3][1][5]=0;
LBitProb[9][3][1][6]=0;
LBitProb[9][3][1][7]=0;
LBitProb[9][3][1][8]=0.0104103;
LBitProb[9][3][1][9]=0.0304602;
LBitProb[9][3][1][10]=0.0677539;
LBitProb[9][3][1][11]=0.231283;
LBitProb[9][3][1][12]=0.786725;
LBitProb[9][3][1][13]=2.13703;
LBitProb[9][3][1][14]=5.35116;
LBitProb[9][3][1][15]=7.79537;
LBitProb[9][3][1][16]=5.80054;
LBitProb[9][3][1][17]=2.3965;
LBitProb[9][3][1][18]=0.314248;
LBitProb[9][3][1][19]=0.0393443;
LBitProb[9][3][1][20]=0.0391732;
LBitProb[9][3][1][21]=0;
LBitProb[9][3][1][22]=0;
LBitProb[9][3][1][23]=0;
LBitProb[0][4][1][0]=0;
LBitProb[0][4][1][1]=0.0022296;
LBitProb[0][4][1][2]=0.0158603;
LBitProb[0][4][1][3]=0.0614868;
LBitProb[0][4][1][4]=0.150043;
LBitProb[0][4][1][5]=0.254469;
LBitProb[0][4][1][6]=0.396637;
LBitProb[0][4][1][7]=0.564547;
LBitProb[0][4][1][8]=0.774382;
LBitProb[0][4][1][9]=1.11703;
LBitProb[0][4][1][10]=1.58668;
LBitProb[0][4][1][11]=2.18597;
LBitProb[0][4][1][12]=2.90731;
LBitProb[0][4][1][13]=3.89797;
LBitProb[0][4][1][14]=4.6477;
LBitProb[0][4][1][15]=3.90931;
LBitProb[0][4][1][16]=1.95144;
LBitProb[0][4][1][17]=0.462107;
LBitProb[0][4][1][18]=0.0704446;
LBitProb[0][4][1][19]=0.0278657;
LBitProb[0][4][1][20]=0.0165226;
LBitProb[0][4][1][21]=0;
LBitProb[0][4][1][22]=0;
LBitProb[0][4][1][23]=0;
LBitProb[1][4][1][0]=0;
LBitProb[1][4][1][1]=0.00104724;
LBitProb[1][4][1][2]=0.00780498;
LBitProb[1][4][1][3]=0.0401125;
LBitProb[1][4][1][4]=0.126732;
LBitProb[1][4][1][5]=0.259817;
LBitProb[1][4][1][6]=0.422062;
LBitProb[1][4][1][7]=0.592138;
LBitProb[1][4][1][8]=0.806432;
LBitProb[1][4][1][9]=1.15772;
LBitProb[1][4][1][10]=1.60165;
LBitProb[1][4][1][11]=2.13954;
LBitProb[1][4][1][12]=2.86999;
LBitProb[1][4][1][13]=3.84503;
LBitProb[1][4][1][14]=4.58715;
LBitProb[1][4][1][15]=3.97416;
LBitProb[1][4][1][16]=1.95127;
LBitProb[1][4][1][17]=0.488115;
LBitProb[1][4][1][18]=0.0895869;
LBitProb[1][4][1][19]=0.0238642;
LBitProb[1][4][1][20]=0.0157834;
LBitProb[1][4][1][21]=0;
LBitProb[1][4][1][22]=0;
LBitProb[1][4][1][23]=0;
LBitProb[2][4][1][0]=0;
LBitProb[2][4][1][1]=0.000872308;
LBitProb[2][4][1][2]=0.00229201;
LBitProb[2][4][1][3]=0.00862339;
LBitProb[2][4][1][4]=0.0531729;
LBitProb[2][4][1][5]=0.176968;
LBitProb[2][4][1][6]=0.368874;
LBitProb[2][4][1][7]=0.603706;
LBitProb[2][4][1][8]=0.853661;
LBitProb[2][4][1][9]=1.17431;
LBitProb[2][4][1][10]=1.63458;
LBitProb[2][4][1][11]=2.16376;
LBitProb[2][4][1][12]=2.88844;
LBitProb[2][4][1][13]=3.78517;
LBitProb[2][4][1][14]=4.60167;
LBitProb[2][4][1][15]=4.06701;
LBitProb[2][4][1][16]=2.01042;
LBitProb[2][4][1][17]=0.482587;
LBitProb[2][4][1][18]=0.0759613;
LBitProb[2][4][1][19]=0.0247155;
LBitProb[2][4][1][20]=0.0232073;
LBitProb[2][4][1][21]=0;
LBitProb[2][4][1][22]=0;
LBitProb[2][4][1][23]=0;
LBitProb[3][4][1][0]=0;
LBitProb[3][4][1][1]=0.000400862;
LBitProb[3][4][1][2]=0.000792254;
LBitProb[3][4][1][3]=0.00244119;
LBitProb[3][4][1][4]=0.0109758;
LBitProb[3][4][1][5]=0.0652807;
LBitProb[3][4][1][6]=0.217304;
LBitProb[3][4][1][7]=0.489236;
LBitProb[3][4][1][8]=0.877863;
LBitProb[3][4][1][9]=1.25708;
LBitProb[3][4][1][10]=1.68155;
LBitProb[3][4][1][11]=2.21467;
LBitProb[3][4][1][12]=2.8832;
LBitProb[3][4][1][13]=3.77657;
LBitProb[3][4][1][14]=4.57861;
LBitProb[3][4][1][15]=4.08351;
LBitProb[3][4][1][16]=2.17728;
LBitProb[3][4][1][17]=0.564204;
LBitProb[3][4][1][18]=0.083624;
LBitProb[3][4][1][19]=0.0188442;
LBitProb[3][4][1][20]=0.016557;
LBitProb[3][4][1][21]=0;
LBitProb[3][4][1][22]=0;
LBitProb[3][4][1][23]=0;
LBitProb[4][4][1][0]=0;
LBitProb[4][4][1][1]=0.000208715;
LBitProb[4][4][1][2]=0.00102101;
LBitProb[4][4][1][3]=0.00197127;
LBitProb[4][4][1][4]=0.00331529;
LBitProb[4][4][1][5]=0.0141147;
LBitProb[4][4][1][6]=0.0655376;
LBitProb[4][4][1][7]=0.231248;
LBitProb[4][4][1][8]=0.620894;
LBitProb[4][4][1][9]=1.24522;
LBitProb[4][4][1][10]=1.8346;
LBitProb[4][4][1][11]=2.26742;
LBitProb[4][4][1][12]=2.8544;
LBitProb[4][4][1][13]=3.7236;
LBitProb[4][4][1][14]=4.61434;
LBitProb[4][4][1][15]=4.35523;
LBitProb[4][4][1][16]=2.39361;
LBitProb[4][4][1][17]=0.637409;
LBitProb[4][4][1][18]=0.0896166;
LBitProb[4][4][1][19]=0.0261189;
LBitProb[4][4][1][20]=0.0201307;
LBitProb[4][4][1][21]=0;
LBitProb[4][4][1][22]=0;
LBitProb[4][4][1][23]=0;
LBitProb[5][4][1][0]=0;
LBitProb[5][4][1][1]=0;
LBitProb[5][4][1][2]=0.00068733;
LBitProb[5][4][1][3]=0.00166987;
LBitProb[5][4][1][4]=0.00258145;
LBitProb[5][4][1][5]=0.00462276;
LBitProb[5][4][1][6]=0.0143193;
LBitProb[5][4][1][7]=0.0791341;
LBitProb[5][4][1][8]=0.317808;
LBitProb[5][4][1][9]=0.857319;
LBitProb[5][4][1][10]=1.67538;
LBitProb[5][4][1][11]=2.48545;
LBitProb[5][4][1][12]=3.10315;
LBitProb[5][4][1][13]=3.78408;
LBitProb[5][4][1][14]=4.62739;
LBitProb[5][4][1][15]=4.49426;
LBitProb[5][4][1][16]=2.64607;
LBitProb[5][4][1][17]=0.770517;
LBitProb[5][4][1][18]=0.0989994;
LBitProb[5][4][1][19]=0.0229763;
LBitProb[5][4][1][20]=0.0135755;
LBitProb[5][4][1][21]=0;
LBitProb[5][4][1][22]=0;
LBitProb[5][4][1][23]=0;
LBitProb[6][4][1][0]=0;
LBitProb[6][4][1][1]=0.000149738;
LBitProb[6][4][1][2]=0.000394925;
LBitProb[6][4][1][3]=0.000720314;
LBitProb[6][4][1][4]=0.00239776;
LBitProb[6][4][1][5]=0.00386372;
LBitProb[6][4][1][6]=0.00552642;
LBitProb[6][4][1][7]=0.0185423;
LBitProb[6][4][1][8]=0.0920272;
LBitProb[6][4][1][9]=0.376768;
LBitProb[6][4][1][10]=1.1341;
LBitProb[6][4][1][11]=2.36049;
LBitProb[6][4][1][12]=3.39856;
LBitProb[6][4][1][13]=4.0603;
LBitProb[6][4][1][14]=4.81915;
LBitProb[6][4][1][15]=4.7702;
LBitProb[6][4][1][16]=2.88909;
LBitProb[6][4][1][17]=0.910814;
LBitProb[6][4][1][18]=0.111692;
LBitProb[6][4][1][19]=0.0266965;
LBitProb[6][4][1][20]=0.0185197;
LBitProb[6][4][1][21]=0;
LBitProb[6][4][1][22]=0;
LBitProb[6][4][1][23]=0;
LBitProb[7][4][1][0]=0;
LBitProb[7][4][1][1]=0;
LBitProb[7][4][1][2]=0.000631745;
LBitProb[7][4][1][3]=0.000974457;
LBitProb[7][4][1][4]=0.00122051;
LBitProb[7][4][1][5]=0.00271508;
LBitProb[7][4][1][6]=0.00347588;
LBitProb[7][4][1][7]=0.00956706;
LBitProb[7][4][1][8]=0.0216824;
LBitProb[7][4][1][9]=0.108104;
LBitProb[7][4][1][10]=0.475476;
LBitProb[7][4][1][11]=1.49205;
LBitProb[7][4][1][12]=3.05911;
LBitProb[7][4][1][13]=4.42456;
LBitProb[7][4][1][14]=5.41754;
LBitProb[7][4][1][15]=5.24275;
LBitProb[7][4][1][16]=3.39744;
LBitProb[7][4][1][17]=1.15879;
LBitProb[7][4][1][18]=0.14413;
LBitProb[7][4][1][19]=0.0210228;
LBitProb[7][4][1][20]=0.0187624;
LBitProb[7][4][1][21]=0;
LBitProb[7][4][1][22]=0;
LBitProb[7][4][1][23]=0;
LBitProb[8][4][1][0]=0;
LBitProb[8][4][1][1]=0.000738906;
LBitProb[8][4][1][2]=0.00142325;
LBitProb[8][4][1][3]=0.00260775;
LBitProb[8][4][1][4]=0.00290751;
LBitProb[8][4][1][5]=0.00347405;
LBitProb[8][4][1][6]=0.00408845;
LBitProb[8][4][1][7]=0.00673982;
LBitProb[8][4][1][8]=0.0114989;
LBitProb[8][4][1][9]=0.0301863;
LBitProb[8][4][1][10]=0.146105;
LBitProb[8][4][1][11]=0.587376;
LBitProb[8][4][1][12]=1.89876;
LBitProb[8][4][1][13]=4.15899;
LBitProb[8][4][1][14]=6.09852;
LBitProb[8][4][1][15]=6.27926;
LBitProb[8][4][1][16]=4.10315;
LBitProb[8][4][1][17]=1.42899;
LBitProb[8][4][1][18]=0.194339;
LBitProb[8][4][1][19]=0.023869;
LBitProb[8][4][1][20]=0.0169629;
LBitProb[8][4][1][21]=0;
LBitProb[8][4][1][22]=0;
LBitProb[8][4][1][23]=0;
LBitProb[9][4][1][0]=0;
LBitProb[9][4][1][1]=0.000122587;
LBitProb[9][4][1][2]=0.000945199;
LBitProb[9][4][1][3]=0.00182111;
LBitProb[9][4][1][4]=0.00256954;
LBitProb[9][4][1][5]=0.0027915;
LBitProb[9][4][1][6]=0.00185119;
LBitProb[9][4][1][7]=0.00410395;
LBitProb[9][4][1][8]=0.00878828;
LBitProb[9][4][1][9]=0.0136346;
LBitProb[9][4][1][10]=0.0398475;
LBitProb[9][4][1][11]=0.173601;
LBitProb[9][4][1][12]=0.715131;
LBitProb[9][4][1][13]=2.47341;
LBitProb[9][4][1][14]=5.79807;
LBitProb[9][4][1][15]=7.81557;
LBitProb[9][4][1][16]=5.66442;
LBitProb[9][4][1][17]=1.97982;
LBitProb[9][4][1][18]=0.267627;
LBitProb[9][4][1][19]=0.0220396;
LBitProb[9][4][1][20]=0.0138371;
LBitProb[9][4][1][21]=0;
LBitProb[9][4][1][22]=0;
LBitProb[9][4][1][23]=0;
LBitProb[0][5][1][0]=0;
LBitProb[0][5][1][1]=0.00144918;
LBitProb[0][5][1][2]=0.0212016;
LBitProb[0][5][1][3]=0.093868;
LBitProb[0][5][1][4]=0.212077;
LBitProb[0][5][1][5]=0.352627;
LBitProb[0][5][1][6]=0.493602;
LBitProb[0][5][1][7]=0.663227;
LBitProb[0][5][1][8]=0.888427;
LBitProb[0][5][1][9]=1.24383;
LBitProb[0][5][1][10]=1.72387;
LBitProb[0][5][1][11]=2.2912;
LBitProb[0][5][1][12]=2.9427;
LBitProb[0][5][1][13]=3.72567;
LBitProb[0][5][1][14]=4.32941;
LBitProb[0][5][1][15]=3.68617;
LBitProb[0][5][1][16]=1.80406;
LBitProb[0][5][1][17]=0.411941;
LBitProb[0][5][1][18]=0.0702514;
LBitProb[0][5][1][19]=0.0226511;
LBitProb[0][5][1][20]=0.0217613;
LBitProb[0][5][1][21]=0;
LBitProb[0][5][1][22]=0;
LBitProb[0][5][1][23]=0;
LBitProb[1][5][1][0]=0;
LBitProb[1][5][1][1]=0.000458537;
LBitProb[1][5][1][2]=0.00634657;
LBitProb[1][5][1][3]=0.0473578;
LBitProb[1][5][1][4]=0.170665;
LBitProb[1][5][1][5]=0.351214;
LBitProb[1][5][1][6]=0.541675;
LBitProb[1][5][1][7]=0.695695;
LBitProb[1][5][1][8]=0.912881;
LBitProb[1][5][1][9]=1.25473;
LBitProb[1][5][1][10]=1.71111;
LBitProb[1][5][1][11]=2.27533;
LBitProb[1][5][1][12]=2.89726;
LBitProb[1][5][1][13]=3.68653;
LBitProb[1][5][1][14]=4.3228;
LBitProb[1][5][1][15]=3.71594;
LBitProb[1][5][1][16]=1.85694;
LBitProb[1][5][1][17]=0.435567;
LBitProb[1][5][1][18]=0.0709082;
LBitProb[1][5][1][19]=0.022724;
LBitProb[1][5][1][20]=0.0238689;
LBitProb[1][5][1][21]=0;
LBitProb[1][5][1][22]=0;
LBitProb[1][5][1][23]=0;
LBitProb[2][5][1][0]=0;
LBitProb[2][5][1][1]=3.67163e-05;
LBitProb[2][5][1][2]=0.000786533;
LBitProb[2][5][1][3]=0.0106587;
LBitProb[2][5][1][4]=0.0669147;
LBitProb[2][5][1][5]=0.238606;
LBitProb[2][5][1][6]=0.494837;
LBitProb[2][5][1][7]=0.748666;
LBitProb[2][5][1][8]=0.989512;
LBitProb[2][5][1][9]=1.30735;
LBitProb[2][5][1][10]=1.74156;
LBitProb[2][5][1][11]=2.24747;
LBitProb[2][5][1][12]=2.84214;
LBitProb[2][5][1][13]=3.68721;
LBitProb[2][5][1][14]=4.3374;
LBitProb[2][5][1][15]=3.77793;
LBitProb[2][5][1][16]=1.93059;
LBitProb[2][5][1][17]=0.454051;
LBitProb[2][5][1][18]=0.0744992;
LBitProb[2][5][1][19]=0.0259472;
LBitProb[2][5][1][20]=0.0238268;
LBitProb[2][5][1][21]=0;
LBitProb[2][5][1][22]=0;
LBitProb[2][5][1][23]=0;
LBitProb[3][5][1][0]=0;
LBitProb[3][5][1][1]=5.30257e-05;
LBitProb[3][5][1][2]=0.000344745;
LBitProb[3][5][1][3]=0.00213507;
LBitProb[3][5][1][4]=0.0138864;
LBitProb[3][5][1][5]=0.0797604;
LBitProb[3][5][1][6]=0.286654;
LBitProb[3][5][1][7]=0.655407;
LBitProb[3][5][1][8]=1.0517;
LBitProb[3][5][1][9]=1.42007;
LBitProb[3][5][1][10]=1.82196;
LBitProb[3][5][1][11]=2.26093;
LBitProb[3][5][1][12]=2.81153;
LBitProb[3][5][1][13]=3.63774;
LBitProb[3][5][1][14]=4.38485;
LBitProb[3][5][1][15]=3.90241;
LBitProb[3][5][1][16]=2.04584;
LBitProb[3][5][1][17]=0.50267;
LBitProb[3][5][1][18]=0.0728346;
LBitProb[3][5][1][19]=0.0246535;
LBitProb[3][5][1][20]=0.0245721;
LBitProb[3][5][1][21]=0;
LBitProb[3][5][1][22]=0;
LBitProb[3][5][1][23]=0;
LBitProb[4][5][1][0]=0;
LBitProb[4][5][1][1]=0.000123384;
LBitProb[4][5][1][2]=0.000398349;
LBitProb[4][5][1][3]=0.00119174;
LBitProb[4][5][1][4]=0.00240242;
LBitProb[4][5][1][5]=0.0151385;
LBitProb[4][5][1][6]=0.0891373;
LBitProb[4][5][1][7]=0.34149;
LBitProb[4][5][1][8]=0.84894;
LBitProb[4][5][1][9]=1.47184;
LBitProb[4][5][1][10]=1.98254;
LBitProb[4][5][1][11]=2.37491;
LBitProb[4][5][1][12]=2.88235;
LBitProb[4][5][1][13]=3.59128;
LBitProb[4][5][1][14]=4.37544;
LBitProb[4][5][1][15]=4.07185;
LBitProb[4][5][1][16]=2.24236;
LBitProb[4][5][1][17]=0.583598;
LBitProb[4][5][1][18]=0.0793836;
LBitProb[4][5][1][19]=0.0224079;
LBitProb[4][5][1][20]=0.0232116;
LBitProb[4][5][1][21]=0;
LBitProb[4][5][1][22]=0;
LBitProb[4][5][1][23]=0;
LBitProb[5][5][1][0]=0;
LBitProb[5][5][1][1]=4.09209e-05;
LBitProb[5][5][1][2]=0.000173662;
LBitProb[5][5][1][3]=0.00121429;
LBitProb[5][5][1][4]=0.00254695;
LBitProb[5][5][1][5]=0.0034956;
LBitProb[5][5][1][6]=0.0140158;
LBitProb[5][5][1][7]=0.0930014;
LBitProb[5][5][1][8]=0.400288;
LBitProb[5][5][1][9]=1.10713;
LBitProb[5][5][1][10]=2.01172;
LBitProb[5][5][1][11]=2.65887;
LBitProb[5][5][1][12]=3.09892;
LBitProb[5][5][1][13]=3.66446;
LBitProb[5][5][1][14]=4.40939;
LBitProb[5][5][1][15]=4.24698;
LBitProb[5][5][1][16]=2.47615;
LBitProb[5][5][1][17]=0.682065;
LBitProb[5][5][1][18]=0.0843341;
LBitProb[5][5][1][19]=0.0239364;
LBitProb[5][5][1][20]=0.0212664;
LBitProb[5][5][1][21]=0;
LBitProb[5][5][1][22]=0;
LBitProb[5][5][1][23]=0;
LBitProb[6][5][1][0]=0;
LBitProb[6][5][1][1]=0.000102775;
LBitProb[6][5][1][2]=0.000538714;
LBitProb[6][5][1][3]=0.000527071;
LBitProb[6][5][1][4]=0.00151588;
LBitProb[6][5][1][5]=0.00229169;
LBitProb[6][5][1][6]=0.00330707;
LBitProb[6][5][1][7]=0.016083;
LBitProb[6][5][1][8]=0.109843;
LBitProb[6][5][1][9]=0.489367;
LBitProb[6][5][1][10]=1.4188;
LBitProb[6][5][1][11]=2.65448;
LBitProb[6][5][1][12]=3.44384;
LBitProb[6][5][1][13]=4.0049;
LBitProb[6][5][1][14]=4.65086;
LBitProb[6][5][1][15]=4.50531;
LBitProb[6][5][1][16]=2.74906;
LBitProb[6][5][1][17]=0.809206;
LBitProb[6][5][1][18]=0.0988444;
LBitProb[6][5][1][19]=0.0226749;
LBitProb[6][5][1][20]=0.0184375;
LBitProb[6][5][1][21]=0;
LBitProb[6][5][1][22]=0;
LBitProb[6][5][1][23]=0;
LBitProb[7][5][1][0]=0;
LBitProb[7][5][1][1]=0.00018571;
LBitProb[7][5][1][2]=0.000767673;
LBitProb[7][5][1][3]=0.00104683;
LBitProb[7][5][1][4]=0.00117652;
LBitProb[7][5][1][5]=0.00208539;
LBitProb[7][5][1][6]=0.00299546;
LBitProb[7][5][1][7]=0.00634952;
LBitProb[7][5][1][8]=0.0188349;
LBitProb[7][5][1][9]=0.12916;
LBitProb[7][5][1][10]=0.602671;
LBitProb[7][5][1][11]=1.79819;
LBitProb[7][5][1][12]=3.4382;
LBitProb[7][5][1][13]=4.5523;
LBitProb[7][5][1][14]=5.19848;
LBitProb[7][5][1][15]=4.94881;
LBitProb[7][5][1][16]=3.1456;
LBitProb[7][5][1][17]=0.998255;
LBitProb[7][5][1][18]=0.114281;
LBitProb[7][5][1][19]=0.0212875;
LBitProb[7][5][1][20]=0.0193389;
LBitProb[7][5][1][21]=0;
LBitProb[7][5][1][22]=0;
LBitProb[7][5][1][23]=0;
LBitProb[8][5][1][0]=0;
LBitProb[8][5][1][1]=0.000157276;
LBitProb[8][5][1][2]=0.000934969;
LBitProb[8][5][1][3]=0.00179235;
LBitProb[8][5][1][4]=0.00231467;
LBitProb[8][5][1][5]=0.0027517;
LBitProb[8][5][1][6]=0.00345234;
LBitProb[8][5][1][7]=0.00498882;
LBitProb[8][5][1][8]=0.00742365;
LBitProb[8][5][1][9]=0.0251573;
LBitProb[8][5][1][10]=0.153585;
LBitProb[8][5][1][11]=0.721154;
LBitProb[8][5][1][12]=2.22237;
LBitProb[8][5][1][13]=4.45283;
LBitProb[8][5][1][14]=6.04761;
LBitProb[8][5][1][15]=6.01003;
LBitProb[8][5][1][16]=3.86163;
LBitProb[8][5][1][17]=1.28527;
LBitProb[8][5][1][18]=0.153519;
LBitProb[8][5][1][19]=0.0227865;
LBitProb[8][5][1][20]=0.0202421;
LBitProb[8][5][1][21]=0;
LBitProb[8][5][1][22]=0;
LBitProb[8][5][1][23]=0;
LBitProb[9][5][1][0]=0;
LBitProb[9][5][1][1]=0.000111162;
LBitProb[9][5][1][2]=0.000477389;
LBitProb[9][5][1][3]=0.00105897;
LBitProb[9][5][1][4]=0.00149101;
LBitProb[9][5][1][5]=0.00233977;
LBitProb[9][5][1][6]=0.00362973;
LBitProb[9][5][1][7]=0.00431975;
LBitProb[9][5][1][8]=0.00634538;
LBitProb[9][5][1][9]=0.0115886;
LBitProb[9][5][1][10]=0.0297625;
LBitProb[9][5][1][11]=0.17802;
LBitProb[9][5][1][12]=0.834804;
LBitProb[9][5][1][13]=2.78396;
LBitProb[9][5][1][14]=6.05483;
LBitProb[9][5][1][15]=7.61801;
LBitProb[9][5][1][16]=5.32997;
LBitProb[9][5][1][17]=1.87118;
LBitProb[9][5][1][18]=0.232673;
LBitProb[9][5][1][19]=0.0197352;
LBitProb[9][5][1][20]=0.015699;
LBitProb[9][5][1][21]=0;
LBitProb[9][5][1][22]=0;
LBitProb[9][5][1][23]=0;
LBitProb[0][6][1][0]=0;
LBitProb[0][6][1][1]=0.00253828;
LBitProb[0][6][1][2]=0.0305261;
LBitProb[0][6][1][3]=0.128862;
LBitProb[0][6][1][4]=0.276472;
LBitProb[0][6][1][5]=0.429302;
LBitProb[0][6][1][6]=0.580867;
LBitProb[0][6][1][7]=0.755295;
LBitProb[0][6][1][8]=0.999702;
LBitProb[0][6][1][9]=1.34266;
LBitProb[0][6][1][10]=1.80641;
LBitProb[0][6][1][11]=2.32614;
LBitProb[0][6][1][12]=2.89989;
LBitProb[0][6][1][13]=3.62244;
LBitProb[0][6][1][14]=4.12298;
LBitProb[0][6][1][15]=3.47507;
LBitProb[0][6][1][16]=1.69563;
LBitProb[0][6][1][17]=0.393097;
LBitProb[0][6][1][18]=0.0651697;
LBitProb[0][6][1][19]=0.0239894;
LBitProb[0][6][1][20]=0.022955;
LBitProb[0][6][1][21]=0;
LBitProb[0][6][1][22]=0;
LBitProb[0][6][1][23]=0;
LBitProb[1][6][1][0]=0;
LBitProb[1][6][1][1]=0.000394707;
LBitProb[1][6][1][2]=0.00829553;
LBitProb[1][6][1][3]=0.0631205;
LBitProb[1][6][1][4]=0.217258;
LBitProb[1][6][1][5]=0.443383;
LBitProb[1][6][1][6]=0.634091;
LBitProb[1][6][1][7]=0.795181;
LBitProb[1][6][1][8]=1.00887;
LBitProb[1][6][1][9]=1.3421;
LBitProb[1][6][1][10]=1.78545;
LBitProb[1][6][1][11]=2.30493;
LBitProb[1][6][1][12]=2.8862;
LBitProb[1][6][1][13]=3.62435;
LBitProb[1][6][1][14]=4.13693;
LBitProb[1][6][1][15]=3.50824;
LBitProb[1][6][1][16]=1.73654;
LBitProb[1][6][1][17]=0.40083;
LBitProb[1][6][1][18]=0.0596986;
LBitProb[1][6][1][19]=0.0223807;
LBitProb[1][6][1][20]=0.0217466;
LBitProb[1][6][1][21]=0;
LBitProb[1][6][1][22]=0;
LBitProb[1][6][1][23]=0;
LBitProb[2][6][1][0]=0;
LBitProb[2][6][1][1]=0.00022034;
LBitProb[2][6][1][2]=0.00159215;
LBitProb[2][6][1][3]=0.0143425;
LBitProb[2][6][1][4]=0.091018;
LBitProb[2][6][1][5]=0.302379;
LBitProb[2][6][1][6]=0.609849;
LBitProb[2][6][1][7]=0.867612;
LBitProb[2][6][1][8]=1.09537;
LBitProb[2][6][1][9]=1.40194;
LBitProb[2][6][1][10]=1.79793;
LBitProb[2][6][1][11]=2.2864;
LBitProb[2][6][1][12]=2.85255;
LBitProb[2][6][1][13]=3.5935;
LBitProb[2][6][1][14]=4.15492;
LBitProb[2][6][1][15]=3.58542;
LBitProb[2][6][1][16]=1.80606;
LBitProb[2][6][1][17]=0.433349;
LBitProb[2][6][1][18]=0.0591116;
LBitProb[2][6][1][19]=0.0232792;
LBitProb[2][6][1][20]=0.0231555;
LBitProb[2][6][1][21]=0;
LBitProb[2][6][1][22]=0;
LBitProb[2][6][1][23]=0;
LBitProb[3][6][1][0]=0;
LBitProb[3][6][1][1]=0.000249768;
LBitProb[3][6][1][2]=0.000753421;
LBitProb[3][6][1][3]=0.00204133;
LBitProb[3][6][1][4]=0.0183583;
LBitProb[3][6][1][5]=0.108026;
LBitProb[3][6][1][6]=0.367802;
LBitProb[3][6][1][7]=0.779538;
LBitProb[3][6][1][8]=1.19222;
LBitProb[3][6][1][9]=1.54581;
LBitProb[3][6][1][10]=1.9093;
LBitProb[3][6][1][11]=2.33158;
LBitProb[3][6][1][12]=2.84991;
LBitProb[3][6][1][13]=3.55801;
LBitProb[3][6][1][14]=4.18096;
LBitProb[3][6][1][15]=3.67051;
LBitProb[3][6][1][16]=1.8961;
LBitProb[3][6][1][17]=0.478283;
LBitProb[3][6][1][18]=0.066944;
LBitProb[3][6][1][19]=0.0220038;
LBitProb[3][6][1][20]=0.0216037;
LBitProb[3][6][1][21]=0;
LBitProb[3][6][1][22]=0;
LBitProb[3][6][1][23]=0;
LBitProb[4][6][1][0]=0;
LBitProb[4][6][1][1]=5.65945e-05;
LBitProb[4][6][1][2]=0.000538346;
LBitProb[4][6][1][3]=0.0012872;
LBitProb[4][6][1][4]=0.00358706;
LBitProb[4][6][1][5]=0.0170964;
LBitProb[4][6][1][6]=0.114136;
LBitProb[4][6][1][7]=0.427317;
LBitProb[4][6][1][8]=1.01846;
LBitProb[4][6][1][9]=1.6517;
LBitProb[4][6][1][10]=2.10805;
LBitProb[4][6][1][11]=2.48813;
LBitProb[4][6][1][12]=2.91482;
LBitProb[4][6][1][13]=3.55013;
LBitProb[4][6][1][14]=4.18986;
LBitProb[4][6][1][15]=3.80482;
LBitProb[4][6][1][16]=2.07173;
LBitProb[4][6][1][17]=0.52596;
LBitProb[4][6][1][18]=0.0683765;
LBitProb[4][6][1][19]=0.021929;
LBitProb[4][6][1][20]=0.0220132;
LBitProb[4][6][1][21]=0;
LBitProb[4][6][1][22]=0;
LBitProb[4][6][1][23]=0;
LBitProb[5][6][1][0]=0;
LBitProb[5][6][1][1]=0.000198965;
LBitProb[5][6][1][2]=0.000581064;
LBitProb[5][6][1][3]=0.00130966;
LBitProb[5][6][1][4]=0.00249333;
LBitProb[5][6][1][5]=0.00457289;
LBitProb[5][6][1][6]=0.0178197;
LBitProb[5][6][1][7]=0.121745;
LBitProb[5][6][1][8]=0.509148;
LBitProb[5][6][1][9]=1.31134;
LBitProb[5][6][1][10]=2.21573;
LBitProb[5][6][1][11]=2.76456;
LBitProb[5][6][1][12]=3.12733;
LBitProb[5][6][1][13]=3.6379;
LBitProb[5][6][1][14]=4.2625;
LBitProb[5][6][1][15]=4.01042;
LBitProb[5][6][1][16]=2.27098;
LBitProb[5][6][1][17]=0.623884;
LBitProb[5][6][1][18]=0.0748861;
LBitProb[5][6][1][19]=0.0218634;
LBitProb[5][6][1][20]=0.0207394;
LBitProb[5][6][1][21]=0;
LBitProb[5][6][1][22]=0;
LBitProb[5][6][1][23]=0;
LBitProb[6][6][1][0]=0;
LBitProb[6][6][1][1]=0.00010992;
LBitProb[6][6][1][2]=0.000589305;
LBitProb[6][6][1][3]=0.00115481;
LBitProb[6][6][1][4]=0.00248975;
LBitProb[6][6][1][5]=0.00294434;
LBitProb[6][6][1][6]=0.00530006;
LBitProb[6][6][1][7]=0.0216455;
LBitProb[6][6][1][8]=0.139832;
LBitProb[6][6][1][9]=0.615257;
LBitProb[6][6][1][10]=1.68921;
LBitProb[6][6][1][11]=2.89207;
LBitProb[6][6][1][12]=3.54846;
LBitProb[6][6][1][13]=3.96451;
LBitProb[6][6][1][14]=4.48132;
LBitProb[6][6][1][15]=4.24164;
LBitProb[6][6][1][16]=2.52486;
LBitProb[6][6][1][17]=0.734948;
LBitProb[6][6][1][18]=0.0881651;
LBitProb[6][6][1][19]=0.023684;
LBitProb[6][6][1][20]=0.0217995;
LBitProb[6][6][1][21]=0;
LBitProb[6][6][1][22]=0;
LBitProb[6][6][1][23]=0;
LBitProb[7][6][1][0]=0;
LBitProb[7][6][1][1]=0.000173933;
LBitProb[7][6][1][2]=0.000518573;
LBitProb[7][6][1][3]=0.00101779;
LBitProb[7][6][1][4]=0.001967;
LBitProb[7][6][1][5]=0.00316608;
LBitProb[7][6][1][6]=0.00386422;
LBitProb[7][6][1][7]=0.00631643;
LBitProb[7][6][1][8]=0.0263299;
LBitProb[7][6][1][9]=0.169748;
LBitProb[7][6][1][10]=0.760836;
LBitProb[7][6][1][11]=2.12092;
LBitProb[7][6][1][12]=3.69825;
LBitProb[7][6][1][13]=4.57732;
LBitProb[7][6][1][14]=5.02224;
LBitProb[7][6][1][15]=4.66195;
LBitProb[7][6][1][16]=2.89824;
LBitProb[7][6][1][17]=0.903343;
LBitProb[7][6][1][18]=0.102239;
LBitProb[7][6][1][19]=0.0206523;
LBitProb[7][6][1][20]=0.0208986;
LBitProb[7][6][1][21]=0;
LBitProb[7][6][1][22]=0;
LBitProb[7][6][1][23]=0;
LBitProb[8][6][1][0]=0;
LBitProb[8][6][1][1]=0.000295064;
LBitProb[8][6][1][2]=0.00120562;
LBitProb[8][6][1][3]=0.00122285;
LBitProb[8][6][1][4]=0.00153908;
LBitProb[8][6][1][5]=0.00275433;
LBitProb[8][6][1][6]=0.00379765;
LBitProb[8][6][1][7]=0.0046809;
LBitProb[8][6][1][8]=0.00824007;
LBitProb[8][6][1][9]=0.0317228;
LBitProb[8][6][1][10]=0.2025;
LBitProb[8][6][1][11]=0.892449;
LBitProb[8][6][1][12]=2.57501;
LBitProb[8][6][1][13]=4.76916;
LBitProb[8][6][1][14]=6.02363;
LBitProb[8][6][1][15]=5.64951;
LBitProb[8][6][1][16]=3.50622;
LBitProb[8][6][1][17]=1.15433;
LBitProb[8][6][1][18]=0.136401;
LBitProb[8][6][1][19]=0.0188394;
LBitProb[8][6][1][20]=0.0164802;
LBitProb[8][6][1][21]=0;
LBitProb[8][6][1][22]=0;
LBitProb[8][6][1][23]=0;
LBitProb[9][6][1][0]=0;
LBitProb[9][6][1][1]=0.00033245;
LBitProb[9][6][1][2]=0.00116572;
LBitProb[9][6][1][3]=0.00145007;
LBitProb[9][6][1][4]=0.00242349;
LBitProb[9][6][1][5]=0.00259288;
LBitProb[9][6][1][6]=0.00406853;
LBitProb[9][6][1][7]=0.0062794;
LBitProb[9][6][1][8]=0.00816827;
LBitProb[9][6][1][9]=0.0125715;
LBitProb[9][6][1][10]=0.0373704;
LBitProb[9][6][1][11]=0.223236;
LBitProb[9][6][1][12]=1.03317;
LBitProb[9][6][1][13]=3.20747;
LBitProb[9][6][1][14]=6.35124;
LBitProb[9][6][1][15]=7.3919;
LBitProb[9][6][1][16]=4.87128;
LBitProb[9][6][1][17]=1.62226;
LBitProb[9][6][1][18]=0.189539;
LBitProb[9][6][1][19]=0.0175499;
LBitProb[9][6][1][20]=0.0159296;
LBitProb[9][6][1][21]=0;
LBitProb[9][6][1][22]=0;
LBitProb[9][6][1][23]=0;
LBitProb[0][7][1][0]=0;
LBitProb[0][7][1][1]=0.00212767;
LBitProb[0][7][1][2]=0.0330863;
LBitProb[0][7][1][3]=0.147282;
LBitProb[0][7][1][4]=0.317374;
LBitProb[0][7][1][5]=0.476196;
LBitProb[0][7][1][6]=0.629059;
LBitProb[0][7][1][7]=0.795081;
LBitProb[0][7][1][8]=1.02277;
LBitProb[0][7][1][9]=1.38554;
LBitProb[0][7][1][10]=1.85683;
LBitProb[0][7][1][11]=2.3401;
LBitProb[0][7][1][12]=2.88095;
LBitProb[0][7][1][13]=3.53682;
LBitProb[0][7][1][14]=3.98905;
LBitProb[0][7][1][15]=3.37451;
LBitProb[0][7][1][16]=1.69642;
LBitProb[0][7][1][17]=0.410745;
LBitProb[0][7][1][18]=0.0595403;
LBitProb[0][7][1][19]=0.0235991;
LBitProb[0][7][1][20]=0.0229244;
LBitProb[0][7][1][21]=0;
LBitProb[0][7][1][22]=0;
LBitProb[0][7][1][23]=0;
LBitProb[1][7][1][0]=0;
LBitProb[1][7][1][1]=0.000512781;
LBitProb[1][7][1][2]=0.00989171;
LBitProb[1][7][1][3]=0.0737478;
LBitProb[1][7][1][4]=0.25206;
LBitProb[1][7][1][5]=0.494676;
LBitProb[1][7][1][6]=0.70259;
LBitProb[1][7][1][7]=0.852863;
LBitProb[1][7][1][8]=1.06472;
LBitProb[1][7][1][9]=1.39264;
LBitProb[1][7][1][10]=1.82737;
LBitProb[1][7][1][11]=2.30855;
LBitProb[1][7][1][12]=2.86193;
LBitProb[1][7][1][13]=3.52973;
LBitProb[1][7][1][14]=4.00226;
LBitProb[1][7][1][15]=3.39984;
LBitProb[1][7][1][16]=1.70714;
LBitProb[1][7][1][17]=0.412395;
LBitProb[1][7][1][18]=0.0603475;
LBitProb[1][7][1][19]=0.0224695;
LBitProb[1][7][1][20]=0.0242686;
LBitProb[1][7][1][21]=0;
LBitProb[1][7][1][22]=0;
LBitProb[1][7][1][23]=0;
LBitProb[2][7][1][0]=0;
LBitProb[2][7][1][1]=0.000374131;
LBitProb[2][7][1][2]=0.00184406;
LBitProb[2][7][1][3]=0.0156674;
LBitProb[2][7][1][4]=0.101157;
LBitProb[2][7][1][5]=0.336737;
LBitProb[2][7][1][6]=0.676455;
LBitProb[2][7][1][7]=0.941962;
LBitProb[2][7][1][8]=1.16694;
LBitProb[2][7][1][9]=1.45568;
LBitProb[2][7][1][10]=1.85208;
LBitProb[2][7][1][11]=2.31267;
LBitProb[2][7][1][12]=2.83977;
LBitProb[2][7][1][13]=3.51298;
LBitProb[2][7][1][14]=4.01671;
LBitProb[2][7][1][15]=3.45966;
LBitProb[2][7][1][16]=1.77442;
LBitProb[2][7][1][17]=0.430325;
LBitProb[2][7][1][18]=0.0585064;
LBitProb[2][7][1][19]=0.0228288;
LBitProb[2][7][1][20]=0.0232383;
LBitProb[2][7][1][21]=0;
LBitProb[2][7][1][22]=0;
LBitProb[2][7][1][23]=0;
LBitProb[3][7][1][0]=0;
LBitProb[3][7][1][1]=0.00030086;
LBitProb[3][7][1][2]=0.000989372;
LBitProb[3][7][1][3]=0.00261863;
LBitProb[3][7][1][4]=0.0207837;
LBitProb[3][7][1][5]=0.122991;
LBitProb[3][7][1][6]=0.406941;
LBitProb[3][7][1][7]=0.853277;
LBitProb[3][7][1][8]=1.27914;
LBitProb[3][7][1][9]=1.60196;
LBitProb[3][7][1][10]=1.9552;
LBitProb[3][7][1][11]=2.34018;
LBitProb[3][7][1][12]=2.83388;
LBitProb[3][7][1][13]=3.50655;
LBitProb[3][7][1][14]=4.06084;
LBitProb[3][7][1][15]=3.56532;
LBitProb[3][7][1][16]=1.87637;
LBitProb[3][7][1][17]=0.464445;
LBitProb[3][7][1][18]=0.0616325;
LBitProb[3][7][1][19]=0.0227486;
LBitProb[3][7][1][20]=0.0238413;
LBitProb[3][7][1][21]=0;
LBitProb[3][7][1][22]=0;
LBitProb[3][7][1][23]=0;
LBitProb[4][7][1][0]=0;
LBitProb[4][7][1][1]=0.000150422;
LBitProb[4][7][1][2]=0.000931504;
LBitProb[4][7][1][3]=0.00208724;
LBitProb[4][7][1][4]=0.00472438;
LBitProb[4][7][1][5]=0.0236192;
LBitProb[4][7][1][6]=0.136877;
LBitProb[4][7][1][7]=0.48748;
LBitProb[4][7][1][8]=1.10484;
LBitProb[4][7][1][9]=1.74315;
LBitProb[4][7][1][10]=2.16393;
LBitProb[4][7][1][11]=2.5079;
LBitProb[4][7][1][12]=2.89129;
LBitProb[4][7][1][13]=3.48437;
LBitProb[4][7][1][14]=4.0798;
LBitProb[4][7][1][15]=3.70562;
LBitProb[4][7][1][16]=2.02117;
LBitProb[4][7][1][17]=0.529414;
LBitProb[4][7][1][18]=0.0657125;
LBitProb[4][7][1][19]=0.0232355;
LBitProb[4][7][1][20]=0.0237041;
LBitProb[4][7][1][21]=0;
LBitProb[4][7][1][22]=0;
LBitProb[4][7][1][23]=0;
LBitProb[5][7][1][0]=0;
LBitProb[5][7][1][1]=0.000227292;
LBitProb[5][7][1][2]=0.000900892;
LBitProb[5][7][1][3]=0.00134497;
LBitProb[5][7][1][4]=0.00300412;
LBitProb[5][7][1][5]=0.00587608;
LBitProb[5][7][1][6]=0.0244599;
LBitProb[5][7][1][7]=0.150898;
LBitProb[5][7][1][8]=0.583316;
LBitProb[5][7][1][9]=1.42628;
LBitProb[5][7][1][10]=2.33078;
LBitProb[5][7][1][11]=2.8267;
LBitProb[5][7][1][12]=3.1451;
LBitProb[5][7][1][13]=3.60326;
LBitProb[5][7][1][14]=4.14355;
LBitProb[5][7][1][15]=3.85226;
LBitProb[5][7][1][16]=2.18923;
LBitProb[5][7][1][17]=0.601663;
LBitProb[5][7][1][18]=0.0665439;
LBitProb[5][7][1][19]=0.0217604;
LBitProb[5][7][1][20]=0.022848;
LBitProb[5][7][1][21]=0;
LBitProb[5][7][1][22]=0;
LBitProb[5][7][1][23]=0;
LBitProb[6][7][1][0]=0;
LBitProb[6][7][1][1]=0.000158021;
LBitProb[6][7][1][2]=0.000657389;
LBitProb[6][7][1][3]=0.00120721;
LBitProb[6][7][1][4]=0.00261784;
LBitProb[6][7][1][5]=0.00392989;
LBitProb[6][7][1][6]=0.0065537;
LBitProb[6][7][1][7]=0.0257342;
LBitProb[6][7][1][8]=0.16856;
LBitProb[6][7][1][9]=0.705437;
LBitProb[6][7][1][10]=1.81399;
LBitProb[6][7][1][11]=3.01562;
LBitProb[6][7][1][12]=3.59509;
LBitProb[6][7][1][13]=3.95848;
LBitProb[6][7][1][14]=4.3736;
LBitProb[6][7][1][15]=4.0773;
LBitProb[6][7][1][16]=2.41332;
LBitProb[6][7][1][17]=0.715124;
LBitProb[6][7][1][18]=0.0787013;
LBitProb[6][7][1][19]=0.0216529;
LBitProb[6][7][1][20]=0.0222742;
LBitProb[6][7][1][21]=0;
LBitProb[6][7][1][22]=0;
LBitProb[6][7][1][23]=0;
LBitProb[7][7][1][0]=0;
LBitProb[7][7][1][1]=0.000340372;
LBitProb[7][7][1][2]=0.00105279;
LBitProb[7][7][1][3]=0.00154031;
LBitProb[7][7][1][4]=0.00280616;
LBitProb[7][7][1][5]=0.00392396;
LBitProb[7][7][1][6]=0.0051227;
LBitProb[7][7][1][7]=0.00802353;
LBitProb[7][7][1][8]=0.0326203;
LBitProb[7][7][1][9]=0.205724;
LBitProb[7][7][1][10]=0.866424;
LBitProb[7][7][1][11]=2.26836;
LBitProb[7][7][1][12]=3.81101;
LBitProb[7][7][1][13]=4.5922;
LBitProb[7][7][1][14]=4.94524;
LBitProb[7][7][1][15]=4.5211;
LBitProb[7][7][1][16]=2.75214;
LBitProb[7][7][1][17]=0.850013;
LBitProb[7][7][1][18]=0.092513;
LBitProb[7][7][1][19]=0.0202192;
LBitProb[7][7][1][20]=0.0196215;
LBitProb[7][7][1][21]=0;
LBitProb[7][7][1][22]=0;
LBitProb[7][7][1][23]=0;
LBitProb[8][7][1][0]=0;
LBitProb[8][7][1][1]=0.00020227;
LBitProb[8][7][1][2]=0.000947684;
LBitProb[8][7][1][3]=0.00195518;
LBitProb[8][7][1][4]=0.00268301;
LBitProb[8][7][1][5]=0.00381026;
LBitProb[8][7][1][6]=0.00472041;
LBitProb[8][7][1][7]=0.00682704;
LBitProb[8][7][1][8]=0.0118544;
LBitProb[8][7][1][9]=0.0401689;
LBitProb[8][7][1][10]=0.246515;
LBitProb[8][7][1][11]=1.04251;
LBitProb[8][7][1][12]=2.78788;
LBitProb[8][7][1][13]=4.88486;
LBitProb[8][7][1][14]=5.95416;
LBitProb[8][7][1][15]=5.43971;
LBitProb[8][7][1][16]=3.33417;
LBitProb[8][7][1][17]=1.07932;
LBitProb[8][7][1][18]=0.11992;
LBitProb[8][7][1][19]=0.019466;
LBitProb[8][7][1][20]=0.0183169;
LBitProb[8][7][1][21]=0;
LBitProb[8][7][1][22]=0;
LBitProb[8][7][1][23]=0;
LBitProb[9][7][1][0]=0;
LBitProb[9][7][1][1]=0.000245741;
LBitProb[9][7][1][2]=0.00100081;
LBitProb[9][7][1][3]=0.00157577;
LBitProb[9][7][1][4]=0.00280182;
LBitProb[9][7][1][5]=0.0041016;
LBitProb[9][7][1][6]=0.00518624;
LBitProb[9][7][1][7]=0.00732774;
LBitProb[9][7][1][8]=0.0108887;
LBitProb[9][7][1][9]=0.017272;
LBitProb[9][7][1][10]=0.0509196;
LBitProb[9][7][1][11]=0.282411;
LBitProb[9][7][1][12]=1.21445;
LBitProb[9][7][1][13]=3.50666;
LBitProb[9][7][1][14]=6.48905;
LBitProb[9][7][1][15]=7.17593;
LBitProb[9][7][1][16]=4.56546;
LBitProb[9][7][1][17]=1.46602;
LBitProb[9][7][1][18]=0.164063;
LBitProb[9][7][1][19]=0.0174532;
LBitProb[9][7][1][20]=0.017176;
LBitProb[9][7][1][21]=0;
LBitProb[9][7][1][22]=0;
LBitProb[9][7][1][23]=0;
LBitProb[0][8][1][0]=0;
LBitProb[0][8][1][1]=0.00190739;
LBitProb[0][8][1][2]=0.0312767;
LBitProb[0][8][1][3]=0.147813;
LBitProb[0][8][1][4]=0.326438;
LBitProb[0][8][1][5]=0.498405;
LBitProb[0][8][1][6]=0.650772;
LBitProb[0][8][1][7]=0.818994;
LBitProb[0][8][1][8]=1.04718;
LBitProb[0][8][1][9]=1.38663;
LBitProb[0][8][1][10]=1.83267;
LBitProb[0][8][1][11]=2.30737;
LBitProb[0][8][1][12]=2.8146;
LBitProb[0][8][1][13]=3.42581;
LBitProb[0][8][1][14]=3.91477;
LBitProb[0][8][1][15]=3.44152;
LBitProb[0][8][1][16]=1.80925;
LBitProb[0][8][1][17]=0.448705;
LBitProb[0][8][1][18]=0.0532118;
LBitProb[0][8][1][19]=0.0185231;
LBitProb[0][8][1][20]=0.0241523;
LBitProb[0][8][1][21]=0;
LBitProb[0][8][1][22]=0;
LBitProb[0][8][1][23]=0;
LBitProb[1][8][1][0]=0;
LBitProb[1][8][1][1]=0.000464989;
LBitProb[1][8][1][2]=0.00964572;
LBitProb[1][8][1][3]=0.072868;
LBitProb[1][8][1][4]=0.258775;
LBitProb[1][8][1][5]=0.516903;
LBitProb[1][8][1][6]=0.728407;
LBitProb[1][8][1][7]=0.876872;
LBitProb[1][8][1][8]=1.08724;
LBitProb[1][8][1][9]=1.39902;
LBitProb[1][8][1][10]=1.81052;
LBitProb[1][8][1][11]=2.28249;
LBitProb[1][8][1][12]=2.80414;
LBitProb[1][8][1][13]=3.41792;
LBitProb[1][8][1][14]=3.92164;
LBitProb[1][8][1][15]=3.44078;
LBitProb[1][8][1][16]=1.82339;
LBitProb[1][8][1][17]=0.452068;
LBitProb[1][8][1][18]=0.0524684;
LBitProb[1][8][1][19]=0.0203538;
LBitProb[1][8][1][20]=0.0240502;
LBitProb[1][8][1][21]=0;
LBitProb[1][8][1][22]=0;
LBitProb[1][8][1][23]=0;
LBitProb[2][8][1][0]=0;
LBitProb[2][8][1][1]=0.000245346;
LBitProb[2][8][1][2]=0.0018935;
LBitProb[2][8][1][3]=0.0166556;
LBitProb[2][8][1][4]=0.103126;
LBitProb[2][8][1][5]=0.344872;
LBitProb[2][8][1][6]=0.691478;
LBitProb[2][8][1][7]=0.978438;
LBitProb[2][8][1][8]=1.18585;
LBitProb[2][8][1][9]=1.4618;
LBitProb[2][8][1][10]=1.84724;
LBitProb[2][8][1][11]=2.2806;
LBitProb[2][8][1][12]=2.78049;
LBitProb[2][8][1][13]=3.40287;
LBitProb[2][8][1][14]=3.94163;
LBitProb[2][8][1][15]=3.50587;
LBitProb[2][8][1][16]=1.88111;
LBitProb[2][8][1][17]=0.478903;
LBitProb[2][8][1][18]=0.0533256;
LBitProb[2][8][1][19]=0.0198631;
LBitProb[2][8][1][20]=0.0237356;
LBitProb[2][8][1][21]=0;
LBitProb[2][8][1][22]=0;
LBitProb[2][8][1][23]=0;
LBitProb[3][8][1][0]=0;
LBitProb[3][8][1][1]=0.00025875;
LBitProb[3][8][1][2]=0.00109279;
LBitProb[3][8][1][3]=0.00298057;
LBitProb[3][8][1][4]=0.0208423;
LBitProb[3][8][1][5]=0.122942;
LBitProb[3][8][1][6]=0.421259;
LBitProb[3][8][1][7]=0.884987;
LBitProb[3][8][1][8]=1.31538;
LBitProb[3][8][1][9]=1.63494;
LBitProb[3][8][1][10]=1.9602;
LBitProb[3][8][1][11]=2.33188;
LBitProb[3][8][1][12]=2.7858;
LBitProb[3][8][1][13]=3.40582;
LBitProb[3][8][1][14]=3.9554;
LBitProb[3][8][1][15]=3.58619;
LBitProb[3][8][1][16]=1.96064;
LBitProb[3][8][1][17]=0.509827;
LBitProb[3][8][1][18]=0.054668;
LBitProb[3][8][1][19]=0.020619;
LBitProb[3][8][1][20]=0.0242794;
LBitProb[3][8][1][21]=0;
LBitProb[3][8][1][22]=0;
LBitProb[3][8][1][23]=0;
LBitProb[4][8][1][0]=0;
LBitProb[4][8][1][1]=0.000184955;
LBitProb[4][8][1][2]=0.000887808;
LBitProb[4][8][1][3]=0.00182475;
LBitProb[4][8][1][4]=0.00522378;
LBitProb[4][8][1][5]=0.023889;
LBitProb[4][8][1][6]=0.136749;
LBitProb[4][8][1][7]=0.499587;
LBitProb[4][8][1][8]=1.13005;
LBitProb[4][8][1][9]=1.78374;
LBitProb[4][8][1][10]=2.19691;
LBitProb[4][8][1][11]=2.51192;
LBitProb[4][8][1][12]=2.8565;
LBitProb[4][8][1][13]=3.40941;
LBitProb[4][8][1][14]=3.98531;
LBitProb[4][8][1][15]=3.7036;
LBitProb[4][8][1][16]=2.0928;
LBitProb[4][8][1][17]=0.561275;
LBitProb[4][8][1][18]=0.0564273;
LBitProb[4][8][1][19]=0.0199308;
LBitProb[4][8][1][20]=0.0237815;
LBitProb[4][8][1][21]=0;
LBitProb[4][8][1][22]=0;
LBitProb[4][8][1][23]=0;
LBitProb[5][8][1][0]=0;
LBitProb[5][8][1][1]=0.000142218;
LBitProb[5][8][1][2]=0.000641956;
LBitProb[5][8][1][3]=0.00156539;
LBitProb[5][8][1][4]=0.00290102;
LBitProb[5][8][1][5]=0.00573077;
LBitProb[5][8][1][6]=0.0252167;
LBitProb[5][8][1][7]=0.149852;
LBitProb[5][8][1][8]=0.591487;
LBitProb[5][8][1][9]=1.45555;
LBitProb[5][8][1][10]=2.3775;
LBitProb[5][8][1][11]=2.86695;
LBitProb[5][8][1][12]=3.13095;
LBitProb[5][8][1][13]=3.55134;
LBitProb[5][8][1][14]=4.05357;
LBitProb[5][8][1][15]=3.83168;
LBitProb[5][8][1][16]=2.23092;
LBitProb[5][8][1][17]=0.62053;
LBitProb[5][8][1][18]=0.0601318;
LBitProb[5][8][1][19]=0.0201662;
LBitProb[5][8][1][20]=0.0231726;
LBitProb[5][8][1][21]=0;
LBitProb[5][8][1][22]=0;
LBitProb[5][8][1][23]=0;
LBitProb[6][8][1][0]=0;
LBitProb[6][8][1][1]=0.000183353;
LBitProb[6][8][1][2]=0.000888647;
LBitProb[6][8][1][3]=0.00138288;
LBitProb[6][8][1][4]=0.00240985;
LBitProb[6][8][1][5]=0.00394521;
LBitProb[6][8][1][6]=0.00651682;
LBitProb[6][8][1][7]=0.0273122;
LBitProb[6][8][1][8]=0.176525;
LBitProb[6][8][1][9]=0.734241;
LBitProb[6][8][1][10]=1.86831;
LBitProb[6][8][1][11]=3.07713;
LBitProb[6][8][1][12]=3.61997;
LBitProb[6][8][1][13]=3.91149;
LBitProb[6][8][1][14]=4.30249;
LBitProb[6][8][1][15]=4.029;
LBitProb[6][8][1][16]=2.42566;
LBitProb[6][8][1][17]=0.707618;
LBitProb[6][8][1][18]=0.0653927;
LBitProb[6][8][1][19]=0.0175149;
LBitProb[6][8][1][20]=0.0220227;
LBitProb[6][8][1][21]=0;
LBitProb[6][8][1][22]=0;
LBitProb[6][8][1][23]=0;
LBitProb[7][8][1][0]=0;
LBitProb[7][8][1][1]=0.000217744;
LBitProb[7][8][1][2]=0.000863041;
LBitProb[7][8][1][3]=0.00157805;
LBitProb[7][8][1][4]=0.00290497;
LBitProb[7][8][1][5]=0.00370315;
LBitProb[7][8][1][6]=0.00475826;
LBitProb[7][8][1][7]=0.00880085;
LBitProb[7][8][1][8]=0.0342315;
LBitProb[7][8][1][9]=0.216761;
LBitProb[7][8][1][10]=0.912972;
LBitProb[7][8][1][11]=2.35568;
LBitProb[7][8][1][12]=3.90337;
LBitProb[7][8][1][13]=4.5979;
LBitProb[7][8][1][14]=4.88145;
LBitProb[7][8][1][15]=4.44578;
LBitProb[7][8][1][16]=2.69643;
LBitProb[7][8][1][17]=0.815681;
LBitProb[7][8][1][18]=0.0769075;
LBitProb[7][8][1][19]=0.0186257;
LBitProb[7][8][1][20]=0.0213965;
LBitProb[7][8][1][21]=0;
LBitProb[7][8][1][22]=0;
LBitProb[7][8][1][23]=0;
LBitProb[8][8][1][0]=0;
LBitProb[8][8][1][1]=0.000213487;
LBitProb[8][8][1][2]=0.00103925;
LBitProb[8][8][1][3]=0.0015239;
LBitProb[8][8][1][4]=0.00276808;
LBitProb[8][8][1][5]=0.00406459;
LBitProb[8][8][1][6]=0.00483152;
LBitProb[8][8][1][7]=0.00658032;
LBitProb[8][8][1][8]=0.0120995;
LBitProb[8][8][1][9]=0.0436919;
LBitProb[8][8][1][10]=0.268533;
LBitProb[8][8][1][11]=1.12042;
LBitProb[8][8][1][12]=2.93428;
LBitProb[8][8][1][13]=5.01954;
LBitProb[8][8][1][14]=5.94791;
LBitProb[8][8][1][15]=5.34263;
LBitProb[8][8][1][16]=3.18239;
LBitProb[8][8][1][17]=0.97839;
LBitProb[8][8][1][18]=0.0907912;
LBitProb[8][8][1][19]=0.0176978;
LBitProb[8][8][1][20]=0.0206018;
LBitProb[8][8][1][21]=0;
LBitProb[8][8][1][22]=0;
LBitProb[8][8][1][23]=0;
LBitProb[9][8][1][0]=0;
LBitProb[9][8][1][1]=0.000192151;
LBitProb[9][8][1][2]=0.000991282;
LBitProb[9][8][1][3]=0.00200937;
LBitProb[9][8][1][4]=0.00331228;
LBitProb[9][8][1][5]=0.00406105;
LBitProb[9][8][1][6]=0.0049495;
LBitProb[9][8][1][7]=0.0065391;
LBitProb[9][8][1][8]=0.00906828;
LBitProb[9][8][1][9]=0.0159415;
LBitProb[9][8][1][10]=0.0554878;
LBitProb[9][8][1][11]=0.316622;
LBitProb[9][8][1][12]=1.34929;
LBitProb[9][8][1][13]=3.74869;
LBitProb[9][8][1][14]=6.69092;
LBitProb[9][8][1][15]=7.08721;
LBitProb[9][8][1][16]=4.26674;
LBitProb[9][8][1][17]=1.28678;
LBitProb[9][8][1][18]=0.117517;
LBitProb[9][8][1][19]=0.0153023;
LBitProb[9][8][1][20]=0.0183705;
LBitProb[9][8][1][21]=0;
LBitProb[9][8][1][22]=0;
LBitProb[9][8][1][23]=0;
LBitProb[0][9][1][0]=0;
LBitProb[0][9][1][1]=0.000810048;
LBitProb[0][9][1][2]=0.0187185;
LBitProb[0][9][1][3]=0.128953;
LBitProb[0][9][1][4]=0.320755;
LBitProb[0][9][1][5]=0.494666;
LBitProb[0][9][1][6]=0.642612;
LBitProb[0][9][1][7]=0.800284;
LBitProb[0][9][1][8]=1.01664;
LBitProb[0][9][1][9]=1.33924;
LBitProb[0][9][1][10]=1.7707;
LBitProb[0][9][1][11]=2.26499;
LBitProb[0][9][1][12]=2.72257;
LBitProb[0][9][1][13]=3.31897;
LBitProb[0][9][1][14]=3.9102;
LBitProb[0][9][1][15]=3.64981;
LBitProb[0][9][1][16]=2.02548;
LBitProb[0][9][1][17]=0.488236;
LBitProb[0][9][1][18]=0.0411438;
LBitProb[0][9][1][19]=0.0169633;
LBitProb[0][9][1][20]=0.0282224;
LBitProb[0][9][1][21]=4.37804e-05;
LBitProb[0][9][1][22]=0;
LBitProb[0][9][1][23]=0;
LBitProb[1][9][1][0]=0;
LBitProb[1][9][1][1]=0.000178834;
LBitProb[1][9][1][2]=0.00526319;
LBitProb[1][9][1][3]=0.054106;
LBitProb[1][9][1][4]=0.23097;
LBitProb[1][9][1][5]=0.49961;
LBitProb[1][9][1][6]=0.728693;
LBitProb[1][9][1][7]=0.868939;
LBitProb[1][9][1][8]=1.05713;
LBitProb[1][9][1][9]=1.35361;
LBitProb[1][9][1][10]=1.75949;
LBitProb[1][9][1][11]=2.22518;
LBitProb[1][9][1][12]=2.7217;
LBitProb[1][9][1][13]=3.31418;
LBitProb[1][9][1][14]=3.91395;
LBitProb[1][9][1][15]=3.66529;
LBitProb[1][9][1][16]=2.02336;
LBitProb[1][9][1][17]=0.493489;
LBitProb[1][9][1][18]=0.0409151;
LBitProb[1][9][1][19]=0.016725;
LBitProb[1][9][1][20]=0.0271666;
LBitProb[1][9][1][21]=4.4009e-05;
LBitProb[1][9][1][22]=0;
LBitProb[1][9][1][23]=0;
LBitProb[2][9][1][0]=0;
LBitProb[2][9][1][1]=6.52787e-05;
LBitProb[2][9][1][2]=0.00114722;
LBitProb[2][9][1][3]=0.0105477;
LBitProb[2][9][1][4]=0.083617;
LBitProb[2][9][1][5]=0.324783;
LBitProb[2][9][1][6]=0.684005;
LBitProb[2][9][1][7]=0.966072;
LBitProb[2][9][1][8]=1.16903;
LBitProb[2][9][1][9]=1.43182;
LBitProb[2][9][1][10]=1.80155;
LBitProb[2][9][1][11]=2.2226;
LBitProb[2][9][1][12]=2.69486;
LBitProb[2][9][1][13]=3.29458;
LBitProb[2][9][1][14]=3.92258;
LBitProb[2][9][1][15]=3.71774;
LBitProb[2][9][1][16]=2.07854;
LBitProb[2][9][1][17]=0.510882;
LBitProb[2][9][1][18]=0.0402439;
LBitProb[2][9][1][19]=0.0171867;
LBitProb[2][9][1][20]=0.0281111;
LBitProb[2][9][1][21]=4.2517e-05;
LBitProb[2][9][1][22]=0;
LBitProb[2][9][1][23]=0;
LBitProb[3][9][1][0]=0;
LBitProb[3][9][1][1]=3.92675e-05;
LBitProb[3][9][1][2]=0.000605189;
LBitProb[3][9][1][3]=0.00209206;
LBitProb[3][9][1][4]=0.0147546;
LBitProb[3][9][1][5]=0.100834;
LBitProb[3][9][1][6]=0.383531;
LBitProb[3][9][1][7]=0.858023;
LBitProb[3][9][1][8]=1.30677;
LBitProb[3][9][1][9]=1.60594;
LBitProb[3][9][1][10]=1.9342;
LBitProb[3][9][1][11]=2.27134;
LBitProb[3][9][1][12]=2.71209;
LBitProb[3][9][1][13]=3.30421;
LBitProb[3][9][1][14]=3.9513;
LBitProb[3][9][1][15]=3.78219;
LBitProb[3][9][1][16]=2.15273;
LBitProb[3][9][1][17]=0.535286;
LBitProb[3][9][1][18]=0.0415469;
LBitProb[3][9][1][19]=0.0155089;
LBitProb[3][9][1][20]=0.0269607;
LBitProb[3][9][1][21]=4.09573e-05;
LBitProb[3][9][1][22]=0;
LBitProb[3][9][1][23]=0;
LBitProb[4][9][1][0]=0;
LBitProb[4][9][1][1]=4.86468e-05;
LBitProb[4][9][1][2]=0.00061427;
LBitProb[4][9][1][3]=0.00167927;
LBitProb[4][9][1][4]=0.00392143;
LBitProb[4][9][1][5]=0.0163158;
LBitProb[4][9][1][6]=0.110619;
LBitProb[4][9][1][7]=0.450965;
LBitProb[4][9][1][8]=1.08563;
LBitProb[4][9][1][9]=1.76193;
LBitProb[4][9][1][10]=2.18271;
LBitProb[4][9][1][11]=2.48613;
LBitProb[4][9][1][12]=2.8127;
LBitProb[4][9][1][13]=3.31059;
LBitProb[4][9][1][14]=3.97292;
LBitProb[4][9][1][15]=3.88315;
LBitProb[4][9][1][16]=2.25687;
LBitProb[4][9][1][17]=0.577374;
LBitProb[4][9][1][18]=0.042907;
LBitProb[4][9][1][19]=0.0158357;
LBitProb[4][9][1][20]=0.0270513;
LBitProb[4][9][1][21]=4.24104e-05;
LBitProb[4][9][1][22]=0;
LBitProb[4][9][1][23]=0;
LBitProb[5][9][1][0]=0;
LBitProb[5][9][1][1]=3.98059e-05;
LBitProb[5][9][1][2]=0.000578773;
LBitProb[5][9][1][3]=0.00135893;
LBitProb[5][9][1][4]=0.00281629;
LBitProb[5][9][1][5]=0.00572899;
LBitProb[5][9][1][6]=0.0184176;
LBitProb[5][9][1][7]=0.118194;
LBitProb[5][9][1][8]=0.522348;
LBitProb[5][9][1][9]=1.38207;
LBitProb[5][9][1][10]=2.36157;
LBitProb[5][9][1][11]=2.87536;
LBitProb[5][9][1][12]=3.10302;
LBitProb[5][9][1][13]=3.47259;
LBitProb[5][9][1][14]=4.05316;
LBitProb[5][9][1][15]=3.99543;
LBitProb[5][9][1][16]=2.37601;
LBitProb[5][9][1][17]=0.624218;
LBitProb[5][9][1][18]=0.0439995;
LBitProb[5][9][1][19]=0.0163621;
LBitProb[5][9][1][20]=0.0266745;
LBitProb[5][9][1][21]=4.10113e-05;
LBitProb[5][9][1][22]=0;
LBitProb[5][9][1][23]=0;
LBitProb[6][9][1][0]=0;
LBitProb[6][9][1][1]=6.23199e-05;
LBitProb[6][9][1][2]=0.000841546;
LBitProb[6][9][1][3]=0.00124928;
LBitProb[6][9][1][4]=0.00256023;
LBitProb[6][9][1][5]=0.00363989;
LBitProb[6][9][1][6]=0.00621046;
LBitProb[6][9][1][7]=0.0209312;
LBitProb[6][9][1][8]=0.140288;
LBitProb[6][9][1][9]=0.645999;
LBitProb[6][9][1][10]=1.78378;
LBitProb[6][9][1][11]=3.08876;
LBitProb[6][9][1][12]=3.61259;
LBitProb[6][9][1][13]=3.88357;
LBitProb[6][9][1][14]=4.2965;
LBitProb[6][9][1][15]=4.19214;
LBitProb[6][9][1][16]=2.53902;
LBitProb[6][9][1][17]=0.691845;
LBitProb[6][9][1][18]=0.0481158;
LBitProb[6][9][1][19]=0.0158654;
LBitProb[6][9][1][20]=0.0260112;
LBitProb[6][9][1][21]=3.52636e-05;
LBitProb[6][9][1][22]=0;
LBitProb[6][9][1][23]=0;
LBitProb[7][9][1][0]=0;
LBitProb[7][9][1][1]=6.70643e-05;
LBitProb[7][9][1][2]=0.000746937;
LBitProb[7][9][1][3]=0.00145981;
LBitProb[7][9][1][4]=0.00241864;
LBitProb[7][9][1][5]=0.00379493;
LBitProb[7][9][1][6]=0.00516117;
LBitProb[7][9][1][7]=0.00821454;
LBitProb[7][9][1][8]=0.0261127;
LBitProb[7][9][1][9]=0.176354;
LBitProb[7][9][1][10]=0.828392;
LBitProb[7][9][1][11]=2.27598;
LBitProb[7][9][1][12]=3.9145;
LBitProb[7][9][1][13]=4.62086;
LBitProb[7][9][1][14]=4.91178;
LBitProb[7][9][1][15]=4.58411;
LBitProb[7][9][1][16]=2.77271;
LBitProb[7][9][1][17]=0.776974;
LBitProb[7][9][1][18]=0.0502158;
LBitProb[7][9][1][19]=0.0144872;
LBitProb[7][9][1][20]=0.0256259;
LBitProb[7][9][1][21]=4.07649e-05;
LBitProb[7][9][1][22]=0;
LBitProb[7][9][1][23]=0;
LBitProb[8][9][1][0]=0;
LBitProb[8][9][1][1]=4.25378e-05;
LBitProb[8][9][1][2]=0.000608834;
LBitProb[8][9][1][3]=0.00133962;
LBitProb[8][9][1][4]=0.00257799;
LBitProb[8][9][1][5]=0.00352038;
LBitProb[8][9][1][6]=0.00515219;
LBitProb[8][9][1][7]=0.00734416;
LBitProb[8][9][1][8]=0.0119038;
LBitProb[8][9][1][9]=0.0345303;
LBitProb[8][9][1][10]=0.222905;
LBitProb[8][9][1][11]=1.03302;
LBitProb[8][9][1][12]=2.85811;
LBitProb[8][9][1][13]=5.05565;
LBitProb[8][9][1][14]=6.0406;
LBitProb[8][9][1][15]=5.50363;
LBitProb[8][9][1][16]=3.22246;
LBitProb[8][9][1][17]=0.902934;
LBitProb[8][9][1][18]=0.0559877;
LBitProb[8][9][1][19]=0.014179;
LBitProb[8][9][1][20]=0.0234739;
LBitProb[8][9][1][21]=4.25648e-05;
LBitProb[8][9][1][22]=0;
LBitProb[8][9][1][23]=0;
LBitProb[9][9][1][0]=0;
LBitProb[9][9][1][1]=7.40472e-05;
LBitProb[9][9][1][2]=0.000947359;
LBitProb[9][9][1][3]=0.00176611;
LBitProb[9][9][1][4]=0.00296328;
LBitProb[9][9][1][5]=0.00427235;
LBitProb[9][9][1][6]=0.00494954;
LBitProb[9][9][1][7]=0.00694354;
LBitProb[9][9][1][8]=0.0102555;
LBitProb[9][9][1][9]=0.0157249;
LBitProb[9][9][1][10]=0.0465527;
LBitProb[9][9][1][11]=0.274798;
LBitProb[9][9][1][12]=1.26158;
LBitProb[9][9][1][13]=3.69092;
LBitProb[9][9][1][14]=6.88674;
LBitProb[9][9][1][15]=7.32909;
LBitProb[9][9][1][16]=4.22997;
LBitProb[9][9][1][17]=1.12853;
LBitProb[9][9][1][18]=0.0685747;
LBitProb[9][9][1][19]=0.0128033;
LBitProb[9][9][1][20]=0.0225133;
LBitProb[9][9][1][21]=3.21746e-05;
LBitProb[9][9][1][22]=0;
LBitProb[9][9][1][23]=0;
	// Ensure that none are zero
	for (int i = 0; i < NRFEBINS; i++)
	  for (int j = 0; j < NETABINS; j++)
	    for (int k = 0; k < 2; k++)
	      for (int l = 0; l < 24; l++)
	        if (LBitProb[i][j][k][l] == 0)
	          LBitProb[i][j][k][l] = 1.0e-6;
	
	return 0;
}

