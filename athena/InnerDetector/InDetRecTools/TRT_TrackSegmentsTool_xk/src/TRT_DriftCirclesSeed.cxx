/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

///////////////////////////////////////////////////////////////////
//   Implementation file for class TRT_DriftCirclesSeed
///////////////////////////////////////////////////////////////////
// (c) ATLAS Detector software
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
// Version 1.0 11/10/2005 I.Gavrilenko
///////////////////////////////////////////////////////////////////

#include <iostream>
#include <iomanip>
#include "GaudiKernel/MsgStream.h"
#include "TRT_TrackSegmentsTool_xk/TRT_DriftCirclesSeed.h"

namespace InDet {

  /////////////////////////////////////////////////////////////////////////////////
  // Copy constructor
  /////////////////////////////////////////////////////////////////////////////////

  TRT_DriftCirclesSeed::TRT_DriftCirclesSeed (const TRT_DriftCirclesSeed& Se)
  {
    m_driftcircles = Se.m_driftcircles;
  }

  /////////////////////////////////////////////////////////////////////////////////
  // Operator =
  /////////////////////////////////////////////////////////////////////////////////
  
  TRT_DriftCirclesSeed& TRT_DriftCirclesSeed::operator = (const TRT_DriftCirclesSeed& Se) 
  {
    m_driftcircles = Se.m_driftcircles;
    return *this;
  }

  ///////////////////////////////////////////////////////////////////
  // Dumps relevant information into the MsgStream
  ///////////////////////////////////////////////////////////////////
  
  MsgStream& TRT_DriftCirclesSeed::dump( MsgStream& out ) const
  {
    return out;
  }

  ///////////////////////////////////////////////////////////////////
  // Dumps relevant information into the ostream
  ///////////////////////////////////////////////////////////////////

  std::ostream& TRT_DriftCirclesSeed::dump( std::ostream& out ) const
  {
    return out;
  }

  ///////////////////////////////////////////////////////////////////
  // Overload of << operator MsgStream
  ///////////////////////////////////////////////////////////////////
  
  MsgStream& operator    << (MsgStream&    sl,const TRT_DriftCirclesSeed& se)
  { 
    return se.dump(sl); 
  }
  ///////////////////////////////////////////////////////////////////
  // Overload of << operator std::ostream
  ///////////////////////////////////////////////////////////////////
  
  std::ostream& operator << (std::ostream& sl,const TRT_DriftCirclesSeed& se)
  { 
    return se.dump(sl); 
  }
   
} // end of name space





