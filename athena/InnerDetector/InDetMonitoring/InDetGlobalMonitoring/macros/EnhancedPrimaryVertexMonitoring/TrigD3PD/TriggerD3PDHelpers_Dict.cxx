/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

//
// File generated by /afs/cern.ch/sw/lcg/app/releases/ROOT/5.26.00e_python2.6/i686-slc5-gcc43-opt/root/bin/rootcint at Fri Jan  7 17:48:48 2011

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TriggerD3PDHelpers_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::IDataAccess IDataAccess;
      #else
      class IDataAccess  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::D3PD::Trig::IDataAccess::L1ResultType L1ResultType;
         #else
         enum L1ResultType  {
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::D3PD::Trig::IDataAccess::HLTResultType HLTResultType;
         #else
         enum HLTResultType  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~IDataAccess() throw() {};
      };
      #endif
      } } 
      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::IConfigAccess IConfigAccess;
      #else
      class IConfigAccess  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IConfigAccess() throw() {};
      };
      #endif
      } } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void D3PDcLcLTrigConfigSvcD3PD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_D3PDcLcLTrigConfigSvcD3PD(void *p = 0);
   static void *newArray_D3PDcLcLTrigConfigSvcD3PD(Long_t size, void *p);
   static void delete_D3PDcLcLTrigConfigSvcD3PD(void *p);
   static void deleteArray_D3PDcLcLTrigConfigSvcD3PD(void *p);
   static void destruct_D3PDcLcLTrigConfigSvcD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::TrigConfigSvcD3PD*)
   {
      ::D3PD::TrigConfigSvcD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::TrigConfigSvcD3PD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::TrigConfigSvcD3PD", ::D3PD::TrigConfigSvcD3PD::Class_Version(), "./TrigConfigSvcD3PD.h", 35,
                  typeid(::D3PD::TrigConfigSvcD3PD), DefineBehavior(ptr, ptr),
                  &::D3PD::TrigConfigSvcD3PD::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::TrigConfigSvcD3PD) );
      instance.SetNew(&new_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetNewArray(&newArray_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDelete(&delete_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLTrigConfigSvcD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::TrigConfigSvcD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::TrigConfigSvcD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLIDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void D3PDcLcLTrigcLcLIDataAccess_Dictionary();
   static void delete_D3PDcLcLTrigcLcLIDataAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLIDataAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLIDataAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::IDataAccess*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::IDataAccess) == sizeof(::ROOT::Shadow::D3PD::Trig::IDataAccess));
      ::D3PD::Trig::IDataAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::IDataAccess),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::IDataAccess", "./IDataAccess.h", 32,
                  typeid(::D3PD::Trig::IDataAccess), DefineBehavior(ptr, ptr),
                  (void*)&D3PDcLcLTrigcLcLIDataAccess_ShowMembers, &D3PDcLcLTrigcLcLIDataAccess_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::IDataAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLIDataAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLIDataAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLIDataAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::IDataAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::IDataAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLIDataAccess_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLChainGroupHandling_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_D3PDcLcLTrigcLcLChainGroupHandling(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLChainGroupHandling(void *p);
   static void destruct_D3PDcLcLTrigcLcLChainGroupHandling(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::ChainGroupHandling*)
   {
      ::D3PD::Trig::ChainGroupHandling *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::Trig::ChainGroupHandling >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::ChainGroupHandling", ::D3PD::Trig::ChainGroupHandling::Class_Version(), "./ChainGroupHandling.h", 36,
                  typeid(::D3PD::Trig::ChainGroupHandling), DefineBehavior(ptr, ptr),
                  &::D3PD::Trig::ChainGroupHandling::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::ChainGroupHandling) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLChainGroupHandling);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLChainGroupHandling);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLChainGroupHandling);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::ChainGroupHandling*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::ChainGroupHandling*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLChainGroup_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_D3PDcLcLChainGroup(void *p);
   static void deleteArray_D3PDcLcLChainGroup(void *p);
   static void destruct_D3PDcLcLChainGroup(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::ChainGroup*)
   {
      ::D3PD::ChainGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::ChainGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::ChainGroup", ::D3PD::ChainGroup::Class_Version(), "./ChainGroup.h", 37,
                  typeid(::D3PD::ChainGroup), DefineBehavior(ptr, ptr),
                  &::D3PD::ChainGroup::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::ChainGroup) );
      instance.SetDelete(&delete_D3PDcLcLChainGroup);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLChainGroup);
      instance.SetDestructor(&destruct_D3PDcLcLChainGroup);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::ChainGroup*)
   {
      return GenerateInitInstanceLocal((::D3PD::ChainGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLIConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void D3PDcLcLTrigcLcLIConfigAccess_Dictionary();
   static void delete_D3PDcLcLTrigcLcLIConfigAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLIConfigAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLIConfigAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::IConfigAccess*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::IConfigAccess) == sizeof(::ROOT::Shadow::D3PD::Trig::IConfigAccess));
      ::D3PD::Trig::IConfigAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::IConfigAccess),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::IConfigAccess", "./IConfigAccess.h", 26,
                  typeid(::D3PD::Trig::IConfigAccess), DefineBehavior(ptr, ptr),
                  (void*)&D3PDcLcLTrigcLcLIConfigAccess_ShowMembers, &D3PDcLcLTrigcLcLIConfigAccess_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::IConfigAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLIConfigAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLIConfigAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLIConfigAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::IConfigAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::IConfigAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLIConfigAccess_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_D3PDcLcLTrigcLcLConfigAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLConfigAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLConfigAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::ConfigAccess*)
   {
      ::D3PD::Trig::ConfigAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::Trig::ConfigAccess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::ConfigAccess", ::D3PD::Trig::ConfigAccess::Class_Version(), "./ConfigAccess.h", 32,
                  typeid(::D3PD::Trig::ConfigAccess), DefineBehavior(ptr, ptr),
                  &::D3PD::Trig::ConfigAccess::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::ConfigAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLConfigAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLConfigAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLConfigAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::ConfigAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::ConfigAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_D3PDcLcLTrigcLcLDataAccess(void *p = 0);
   static void *newArray_D3PDcLcLTrigcLcLDataAccess(Long_t size, void *p);
   static void delete_D3PDcLcLTrigcLcLDataAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLDataAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLDataAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::DataAccess*)
   {
      ::D3PD::Trig::DataAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::Trig::DataAccess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::DataAccess", ::D3PD::Trig::DataAccess::Class_Version(), "./DataAccess.h", 49,
                  typeid(::D3PD::Trig::DataAccess), DefineBehavior(ptr, ptr),
                  &::D3PD::Trig::DataAccess::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::DataAccess) );
      instance.SetNew(&new_D3PDcLcLTrigcLcLDataAccess);
      instance.SetNewArray(&newArray_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLDataAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::DataAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::DataAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigDecisionToolD3PD_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_D3PDcLcLTrigDecisionToolD3PD(void *p = 0);
   static void *newArray_D3PDcLcLTrigDecisionToolD3PD(Long_t size, void *p);
   static void delete_D3PDcLcLTrigDecisionToolD3PD(void *p);
   static void deleteArray_D3PDcLcLTrigDecisionToolD3PD(void *p);
   static void destruct_D3PDcLcLTrigDecisionToolD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::TrigDecisionToolD3PD*)
   {
      ::D3PD::TrigDecisionToolD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::TrigDecisionToolD3PD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::TrigDecisionToolD3PD", ::D3PD::TrigDecisionToolD3PD::Class_Version(), "./TrigDecisionToolD3PD.h", 42,
                  typeid(::D3PD::TrigDecisionToolD3PD), DefineBehavior(ptr, ptr),
                  &::D3PD::TrigDecisionToolD3PD::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::TrigDecisionToolD3PD) );
      instance.SetNew(&new_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetNewArray(&newArray_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDelete(&delete_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLTrigDecisionToolD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::TrigDecisionToolD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::TrigDecisionToolD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace D3PD {
//______________________________________________________________________________
TClass *TrigConfigSvcD3PD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrigConfigSvcD3PD::Class_Name()
{
   return "D3PD::TrigConfigSvcD3PD";
}

//______________________________________________________________________________
const char *TrigConfigSvcD3PD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrigConfigSvcD3PD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrigConfigSvcD3PD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrigConfigSvcD3PD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
TClass *ChainGroupHandling::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ChainGroupHandling::Class_Name()
{
   return "D3PD::Trig::ChainGroupHandling";
}

//______________________________________________________________________________
const char *ChainGroupHandling::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ChainGroupHandling::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ChainGroupHandling::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ChainGroupHandling::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
      namespace D3PD {
//______________________________________________________________________________
TClass *ChainGroup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ChainGroup::Class_Name()
{
   return "D3PD::ChainGroup";
}

//______________________________________________________________________________
const char *ChainGroup::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ChainGroup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ChainGroup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ChainGroup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
TClass *ConfigAccess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ConfigAccess::Class_Name()
{
   return "D3PD::Trig::ConfigAccess";
}

//______________________________________________________________________________
const char *ConfigAccess::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConfigAccess::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConfigAccess::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConfigAccess::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
TClass *DataAccess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DataAccess::Class_Name()
{
   return "D3PD::Trig::DataAccess";
}

//______________________________________________________________________________
const char *DataAccess::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataAccess::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataAccess::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataAccess::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
      namespace D3PD {
//______________________________________________________________________________
TClass *TrigDecisionToolD3PD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrigDecisionToolD3PD::Class_Name()
{
   return "D3PD::TrigDecisionToolD3PD";
}

//______________________________________________________________________________
const char *TrigDecisionToolD3PD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrigDecisionToolD3PD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrigDecisionToolD3PD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrigDecisionToolD3PD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLIDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class D3PD::Trig::IDataAccess.
      typedef ::ROOT::Shadow::D3PD::Trig::IDataAccess ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      delete ((::D3PD::Trig::IDataAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      delete [] ((::D3PD::Trig::IDataAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      typedef ::D3PD::Trig::IDataAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::IDataAccess

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLIConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent)
   {
      // Inspect the data members of an object of class D3PD::Trig::IConfigAccess.
      typedef ::ROOT::Shadow::D3PD::Trig::IConfigAccess ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0)->GetClass();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      delete ((::D3PD::Trig::IConfigAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      delete [] ((::D3PD::Trig::IConfigAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      typedef ::D3PD::Trig::IConfigAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::IConfigAccess

      namespace D3PD {
//______________________________________________________________________________
void TrigConfigSvcD3PD::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::TrigConfigSvcD3PD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::TrigConfigSvcD3PD::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::TrigConfigSvcD3PD::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void TrigConfigSvcD3PD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::TrigConfigSvcD3PD.
      TClass *R__cl = ::D3PD::TrigConfigSvcD3PD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_tree", &m_tree);
      R__insp.Inspect(R__cl, R__parent, "m_initialized", &m_initialized);
      R__insp.Inspect(R__cl, R__parent, "m_smk", &m_smk);
      R__insp.Inspect(R__cl, R__parent, "m_l1psk", &m_l1psk);
      R__insp.Inspect(R__cl, R__parent, "m_hltpsk", &m_hltpsk);
      R__insp.Inspect(R__cl, R__parent, "*m_lvl1NameMap", &m_lvl1NameMap);
      R__insp.Inspect(R__cl, R__parent, "*m_lvl1PrescaleMap", &m_lvl1PrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_hltNameMap", &m_hltNameMap);
      R__insp.Inspect(R__cl, R__parent, "*m_hltPrescaleMap", &m_hltPrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_hltRerunPrescaleMap", &m_hltRerunPrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_hltPassthroughMap", &m_hltPassthroughMap);
      R__insp.Inspect(R__cl, R__parent, "*m_lowerChainNameMap", &m_lowerChainNameMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_smk", &m_b_smk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l1psk", &m_b_l1psk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltpsk", &m_b_hltpsk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_lvl1NameMap", &m_b_lvl1NameMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_lvl1PrescaleMap", &m_b_lvl1PrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltNameMap", &m_b_hltNameMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltPrescaleMap", &m_b_hltPrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltRerunPrescaleMap", &m_b_hltRerunPrescaleMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltPassthroughMap", &m_b_hltPassthroughMap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_lowerChainNameMap", &m_b_lowerChainNameMap);
      R__insp.Inspect(R__cl, R__parent, "m_configKeyMap", (void*)&m_configKeyMap);
      ::ROOT::GenericShowMembers("map<DBKeys_t,Int_t>", (void*)&m_configKeyMap, R__insp, strcat(R__parent,"m_configKeyMap."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_confLVL1Items", (void*)&m_confLVL1Items);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&m_confLVL1Items, R__insp, strcat(R__parent,"m_confLVL1Items."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_confHLTChains", (void*)&m_confHLTChains);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&m_confHLTChains, R__insp, strcat(R__parent,"m_confHLTChains."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_dummy", (void*)&m_dummy);
      ::ROOT::GenericShowMembers("string", (void*)&m_dummy, R__insp, strcat(R__parent,"m_dummy."),false);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

} // namespace D3PD
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      return  p ? new(p) ::D3PD::TrigConfigSvcD3PD : new ::D3PD::TrigConfigSvcD3PD;
   }
   static void *newArray_D3PDcLcLTrigConfigSvcD3PD(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::TrigConfigSvcD3PD[nElements] : new ::D3PD::TrigConfigSvcD3PD[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      delete ((::D3PD::TrigConfigSvcD3PD*)p);
   }
   static void deleteArray_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      delete [] ((::D3PD::TrigConfigSvcD3PD*)p);
   }
   static void destruct_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      typedef ::D3PD::TrigConfigSvcD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::TrigConfigSvcD3PD

      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
void DataAccess::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::Trig::DataAccess.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::Trig::DataAccess::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::Trig::DataAccess::Class(),this);
   }
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
//______________________________________________________________________________
      namespace D3PD {
         namespace Trig {
void DataAccess::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::Trig::DataAccess.
      TClass *R__cl = ::D3PD::Trig::DataAccess::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_tree", &m_tree);
      R__insp.Inspect(R__cl, R__parent, "m_prefix", &m_prefix);
      const_cast<  TString &>( m_prefix ).ShowMembers(R__insp, strcat(R__parent,"m_prefix.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_initialized", &m_initialized);
      R__insp.Inspect(R__cl, R__parent, "m_detailLevel", &m_detailLevel);
      R__insp.Inspect(R__cl, R__parent, "m_smk", &m_smk);
      R__insp.Inspect(R__cl, R__parent, "m_l1psk", &m_l1psk);
      R__insp.Inspect(R__cl, R__parent, "m_hltpsk", &m_hltpsk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_smk", &m_b_smk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l1psk", &m_b_l1psk);
      R__insp.Inspect(R__cl, R__parent, "*m_b_hltpsk", &m_b_hltpsk);
      R__insp.Inspect(R__cl, R__parent, "*m_l1_tav", &m_l1_tav);
      R__insp.Inspect(R__cl, R__parent, "*m_l2_physics", &m_l2_physics);
      R__insp.Inspect(R__cl, R__parent, "*m_ef_physics", &m_ef_physics);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l1_tav", &m_b_l1_tav);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l2_physics", &m_b_l2_physics);
      R__insp.Inspect(R__cl, R__parent, "*m_b_ef_physics", &m_b_ef_physics);
      R__insp.Inspect(R__cl, R__parent, "*m_l1_tbp", &m_l1_tbp);
      R__insp.Inspect(R__cl, R__parent, "*m_l1_tap", &m_l1_tap);
      R__insp.Inspect(R__cl, R__parent, "*m_l2_raw", &m_l2_raw);
      R__insp.Inspect(R__cl, R__parent, "*m_ef_raw", &m_ef_raw);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l1_tbp", &m_b_l1_tbp);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l1_tap", &m_b_l1_tap);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l2_raw", &m_b_l2_raw);
      R__insp.Inspect(R__cl, R__parent, "*m_b_ef_raw", &m_b_ef_raw);
      R__insp.Inspect(R__cl, R__parent, "*m_l2_resurrected", &m_l2_resurrected);
      R__insp.Inspect(R__cl, R__parent, "*m_ef_resurrected", &m_ef_resurrected);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l2_resurrected", &m_b_l2_resurrected);
      R__insp.Inspect(R__cl, R__parent, "*m_b_ef_resurrected", &m_b_ef_resurrected);
      R__insp.Inspect(R__cl, R__parent, "*m_l2_passedThrough", &m_l2_passedThrough);
      R__insp.Inspect(R__cl, R__parent, "*m_ef_passedThrough", &m_ef_passedThrough);
      R__insp.Inspect(R__cl, R__parent, "*m_b_l2_passedThrough", &m_b_l2_passedThrough);
      R__insp.Inspect(R__cl, R__parent, "*m_b_ef_passedThrough", &m_b_ef_passedThrough);
      TNamed::ShowMembers(R__insp, R__parent);
      ::ROOT::GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess *) (this ), R__insp, R__parent, false);
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigcLcLDataAccess(void *p) {
      return  p ? new(p) ::D3PD::Trig::DataAccess : new ::D3PD::Trig::DataAccess;
   }
   static void *newArray_D3PDcLcLTrigcLcLDataAccess(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::Trig::DataAccess[nElements] : new ::D3PD::Trig::DataAccess[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLDataAccess(void *p) {
      delete ((::D3PD::Trig::DataAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLDataAccess(void *p) {
      delete [] ((::D3PD::Trig::DataAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLDataAccess(void *p) {
      typedef ::D3PD::Trig::DataAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::DataAccess

      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
void ConfigAccess::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::Trig::ConfigAccess.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::Trig::ConfigAccess::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::Trig::ConfigAccess::Class(),this);
   }
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
//______________________________________________________________________________
      namespace D3PD {
         namespace Trig {
void ConfigAccess::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::Trig::ConfigAccess.
      TClass *R__cl = ::D3PD::Trig::ConfigAccess::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_configSvc", &m_configSvc);
      m_configSvc.ShowMembers(R__insp, strcat(R__parent,"m_configSvc.")); R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
      ::ROOT::GenericShowMembers("D3PD::Trig::IConfigAccess", ( ::D3PD::Trig::IConfigAccess *) (this ), R__insp, R__parent, false);
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      delete ((::D3PD::Trig::ConfigAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      delete [] ((::D3PD::Trig::ConfigAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      typedef ::D3PD::Trig::ConfigAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::ConfigAccess

      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
void ChainGroupHandling::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::Trig::ChainGroupHandling.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::Trig::ChainGroupHandling::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::Trig::ChainGroupHandling::Class(),this);
   }
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
//______________________________________________________________________________
      namespace D3PD {
         namespace Trig {
void ChainGroupHandling::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::Trig::ChainGroupHandling.
      TClass *R__cl = ::D3PD::Trig::ChainGroupHandling::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp, R__parent);
      ::ROOT::GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess *) (this ), R__insp, R__parent, false);
      ::ROOT::GenericShowMembers("D3PD::Trig::IConfigAccess", ( ::D3PD::Trig::IConfigAccess *) (this ), R__insp, R__parent, false);
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      delete ((::D3PD::Trig::ChainGroupHandling*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      delete [] ((::D3PD::Trig::ChainGroupHandling*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      typedef ::D3PD::Trig::ChainGroupHandling current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::ChainGroupHandling

      namespace D3PD {
//______________________________________________________________________________
void TrigDecisionToolD3PD::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::TrigDecisionToolD3PD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::TrigDecisionToolD3PD::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::TrigDecisionToolD3PD::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void TrigDecisionToolD3PD::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::TrigDecisionToolD3PD.
      TClass *R__cl = ::D3PD::TrigDecisionToolD3PD::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp, R__parent);
      //This works around a msvc bug and should be harmless on other platforms
      typedef D3PD::Trig::DataAccess baseClass2;
      baseClass2::ShowMembers(R__insp, R__parent);
      //This works around a msvc bug and should be harmless on other platforms
      typedef D3PD::Trig::ConfigAccess baseClass3;
      baseClass3::ShowMembers(R__insp, R__parent);
      //This works around a msvc bug and should be harmless on other platforms
      typedef D3PD::Trig::ChainGroupHandling baseClass4;
      baseClass4::ShowMembers(R__insp, R__parent);
}

} // namespace D3PD
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      return  p ? new(p) ::D3PD::TrigDecisionToolD3PD : new ::D3PD::TrigDecisionToolD3PD;
   }
   static void *newArray_D3PDcLcLTrigDecisionToolD3PD(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::TrigDecisionToolD3PD[nElements] : new ::D3PD::TrigDecisionToolD3PD[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      delete ((::D3PD::TrigDecisionToolD3PD*)p);
   }
   static void deleteArray_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      delete [] ((::D3PD::TrigDecisionToolD3PD*)p);
   }
   static void destruct_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      typedef ::D3PD::TrigDecisionToolD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::TrigDecisionToolD3PD

      namespace D3PD {
//______________________________________________________________________________
void ChainGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::ChainGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::ChainGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::ChainGroup::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void ChainGroup::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class D3PD::ChainGroup.
      TClass *R__cl = ::D3PD::ChainGroup::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "m_triggerNames", (void*)&m_triggerNames);
      ::ROOT::GenericShowMembers("const vector<std::string>", (void*)&m_triggerNames, R__insp, strcat(R__parent,"m_triggerNames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_smk", &m_smk);
      R__insp.Inspect(R__cl, R__parent, "m_existingTriggers", (void*)&m_existingTriggers);
      ::ROOT::GenericShowMembers("vector<std::string>", (void*)&m_existingTriggers, R__insp, strcat(R__parent,"m_existingTriggers."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "m_existingIDs", (void*)&m_existingIDs);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&m_existingIDs, R__insp, strcat(R__parent,"m_existingIDs."),false);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

} // namespace D3PD
namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLChainGroup(void *p) {
      delete ((::D3PD::ChainGroup*)p);
   }
   static void deleteArray_D3PDcLcLChainGroup(void *p) {
      delete [] ((::D3PD::ChainGroup*)p);
   }
   static void destruct_D3PDcLcLChainGroup(void *p) {
      typedef ::D3PD::ChainGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::ChainGroup

namespace ROOT {
   void maplEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEstringcOfloatgR_Dictionary();
   static void *new_maplEstringcOfloatgR(void *p = 0);
   static void *newArray_maplEstringcOfloatgR(Long_t size, void *p);
   static void delete_maplEstringcOfloatgR(void *p);
   static void deleteArray_maplEstringcOfloatgR(void *p);
   static void destruct_maplEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,float>*)
   {
      map<string,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,float>", -2, "map.dll", 0,
                  typeid(map<string,float>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,float>) );
      instance.SetNew(&new_maplEstringcOfloatgR);
      instance.SetNewArray(&newArray_maplEstringcOfloatgR);
      instance.SetDelete(&delete_maplEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOfloatgR);
      instance.SetDestructor(&destruct_maplEstringcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float> : new map<string,float>;
   }
   static void *newArray_maplEstringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float>[nElements] : new map<string,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOfloatgR(void *p) {
      delete ((map<string,float>*)p);
   }
   static void deleteArray_maplEstringcOfloatgR(void *p) {
      delete [] ((map<string,float>*)p);
   }
   static void destruct_maplEstringcOfloatgR(void *p) {
      typedef map<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,float>

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "/afs/cern.ch/sw/lcg/app/releases/ROOT/5.26.00e_python2.6/i686-slc5-gcc43-opt/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

/********************************************************
* TriggerD3PDHelpers_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTriggerD3PDHelpers_Dict();

extern "C" void G__set_cpp_environmentTriggerD3PDHelpers_Dict() {
  G__cpp_reset_tagtableTriggerD3PDHelpers_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevTriggerD3PDHelpers_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* D3PD::TrigConfigSvcD3PD */
static int G__TriggerD3PDHelpers_Dict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::TrigConfigSvcD3PD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigConfigSvcD3PD((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::TrigConfigSvcD3PD((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigConfigSvcD3PD[n];
       } else {
         p = new((void*) gvp) D3PD::TrigConfigSvcD3PD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigConfigSvcD3PD;
       } else {
         p = new((void*) gvp) D3PD::TrigConfigSvcD3PD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->SetConfigTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->Load((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->IsConfigured(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetCTPId(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainId(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetPrescale(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetRerunPrescale(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetPassthrough(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetLowerChainName(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetLVL1Items();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetHLTChains();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->PrintSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->PrintConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::TrigConfigSvcD3PD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::TrigConfigSvcD3PD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::TrigConfigSvcD3PD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigConfigSvcD3PD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigConfigSvcD3PD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TriggerD3PDHelpers_Dict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::TrigConfigSvcD3PD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::TrigConfigSvcD3PD(*(D3PD::TrigConfigSvcD3PD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::TrigConfigSvcD3PD G__TD3PDcLcLTrigConfigSvcD3PD;
static int G__TriggerD3PDHelpers_Dict_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::TrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::TrigConfigSvcD3PD*) (soff+(sizeof(D3PD::TrigConfigSvcD3PD)*i)))->~G__TD3PDcLcLTrigConfigSvcD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::TrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::TrigConfigSvcD3PD*) (soff))->~G__TD3PDcLcLTrigConfigSvcD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TriggerD3PDHelpers_Dict_168_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::TrigConfigSvcD3PD* dest = (D3PD::TrigConfigSvcD3PD*) G__getstructoffset();
   *dest = *(D3PD::TrigConfigSvcD3PD*) libp->para[0].ref;
   const D3PD::TrigConfigSvcD3PD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::IDataAccess */
static int G__TriggerD3PDHelpers_Dict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetDetailLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::IDataAccess G__TD3PDcLcLTrigcLcLIDataAccess;
static int G__TriggerD3PDHelpers_Dict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::IDataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::IDataAccess*) (soff+(sizeof(D3PD::Trig::IDataAccess)*i)))->~G__TD3PDcLcLTrigcLcLIDataAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::IDataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::IDataAccess*) (soff))->~G__TD3PDcLcLTrigcLcLIDataAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TriggerD3PDHelpers_Dict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::IDataAccess* dest = (D3PD::Trig::IDataAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::IDataAccess*) libp->para[0].ref;
   const D3PD::Trig::IDataAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::ChainGroupHandling */
static int G__TriggerD3PDHelpers_Dict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         D3PD::ChainGroup* pobj;
         D3PD::ChainGroup xobj = ((D3PD::Trig::ChainGroupHandling*) G__getstructoffset())->GetChainGroup(*(vector<std::string>*) libp->para[0].ref);
         pobj = new D3PD::ChainGroup(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         D3PD::ChainGroup* pobj;
         D3PD::ChainGroup xobj = ((D3PD::Trig::ChainGroupHandling*) G__getstructoffset())->GetChainGroup(*(string*) libp->para[0].ref);
         pobj = new D3PD::ChainGroup(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::Trig::ChainGroupHandling::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ChainGroupHandling::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::Trig::ChainGroupHandling::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::Trig::ChainGroupHandling::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::Trig::ChainGroupHandling*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ChainGroupHandling::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ChainGroupHandling::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ChainGroupHandling::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ChainGroupHandling::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::ChainGroupHandling G__TD3PDcLcLTrigcLcLChainGroupHandling;
static int G__TriggerD3PDHelpers_Dict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::ChainGroupHandling*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::ChainGroupHandling*) (soff+(sizeof(D3PD::Trig::ChainGroupHandling)*i)))->~G__TD3PDcLcLTrigcLcLChainGroupHandling();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::ChainGroupHandling*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::ChainGroupHandling*) (soff))->~G__TD3PDcLcLTrigcLcLChainGroupHandling();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TriggerD3PDHelpers_Dict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::ChainGroupHandling* dest = (D3PD::Trig::ChainGroupHandling*) G__getstructoffset();
   *dest = *(D3PD::Trig::ChainGroupHandling*) libp->para[0].ref;
   const D3PD::Trig::ChainGroupHandling& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::ChainGroup */
static int G__TriggerD3PDHelpers_Dict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((D3PD::ChainGroup*) G__getstructoffset())->IsPassed((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((D3PD::ChainGroup*) G__getstructoffset())->IsPassed());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((D3PD::ChainGroup*) G__getstructoffset())->GetPrescale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((D3PD::ChainGroup*) G__getstructoffset())->GetListOfTriggers();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::ChainGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::ChainGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::ChainGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::ChainGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::ChainGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::ChainGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TriggerD3PDHelpers_Dict_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::ChainGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::ChainGroup(*(D3PD::ChainGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::ChainGroup G__TD3PDcLcLChainGroup;
static int G__TriggerD3PDHelpers_Dict_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::ChainGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::ChainGroup*) (soff+(sizeof(D3PD::ChainGroup)*i)))->~G__TD3PDcLcLChainGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::ChainGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::ChainGroup*) (soff))->~G__TD3PDcLcLChainGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::IConfigAccess */
static int G__TriggerD3PDHelpers_Dict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const D3PD::TrigConfigSvcD3PD& obj = ((D3PD::Trig::IConfigAccess*) G__getstructoffset())->GetConfigSvc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::IConfigAccess G__TD3PDcLcLTrigcLcLIConfigAccess;
static int G__TriggerD3PDHelpers_Dict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::IConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::IConfigAccess*) (soff+(sizeof(D3PD::Trig::IConfigAccess)*i)))->~G__TD3PDcLcLTrigcLcLIConfigAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::IConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::IConfigAccess*) (soff))->~G__TD3PDcLcLTrigcLcLIConfigAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TriggerD3PDHelpers_Dict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::IConfigAccess* dest = (D3PD::Trig::IConfigAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::IConfigAccess*) libp->para[0].ref;
   const D3PD::Trig::IConfigAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,string,less<string>,allocator<pair<const string,string> > > */
static int G__TriggerD3PDHelpers_Dict_424_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >;
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator=(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->begin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->end();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rend();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>* pobj;
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool> xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->swap(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_424_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,string,less<string>,allocator<pair<const string,string> > > G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
static int G__TriggerD3PDHelpers_Dict_424_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff+(sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >)*i)))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::ConfigAccess */
static int G__TriggerD3PDHelpers_Dict_438_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::ConfigAccess* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new D3PD::Trig::ConfigAccess((TTree*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) D3PD::Trig::ConfigAccess((TTree*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::Trig::ConfigAccess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::Trig::ConfigAccess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::Trig::ConfigAccess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::Trig::ConfigAccess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ConfigAccess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_438_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ConfigAccess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TriggerD3PDHelpers_Dict_438_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::Trig::ConfigAccess* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::Trig::ConfigAccess(*(D3PD::Trig::ConfigAccess*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::ConfigAccess G__TD3PDcLcLTrigcLcLConfigAccess;
static int G__TriggerD3PDHelpers_Dict_438_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::ConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::ConfigAccess*) (soff+(sizeof(D3PD::Trig::ConfigAccess)*i)))->~G__TD3PDcLcLTrigcLcLConfigAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::ConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::ConfigAccess*) (soff))->~G__TD3PDcLcLTrigcLcLConfigAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TriggerD3PDHelpers_Dict_438_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::ConfigAccess* dest = (D3PD::Trig::ConfigAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::ConfigAccess*) libp->para[0].ref;
   const D3PD::Trig::ConfigAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::DataAccess */
static int G__TriggerD3PDHelpers_Dict_439_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::DataAccess* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::Trig::DataAccess[n];
       } else {
         p = new((void*) gvp) D3PD::Trig::DataAccess[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::Trig::DataAccess;
       } else {
         p = new((void*) gvp) D3PD::Trig::DataAccess;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::Trig::DataAccess*) G__getstructoffset())->GetEventTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->SetEventTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::Trig::DataAccess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::Trig::DataAccess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::Trig::DataAccess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::Trig::DataAccess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::DataAccess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_439_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::DataAccess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TriggerD3PDHelpers_Dict_439_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::Trig::DataAccess* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::Trig::DataAccess(*(D3PD::Trig::DataAccess*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::DataAccess G__TD3PDcLcLTrigcLcLDataAccess;
static int G__TriggerD3PDHelpers_Dict_439_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::DataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::DataAccess*) (soff+(sizeof(D3PD::Trig::DataAccess)*i)))->~G__TD3PDcLcLTrigcLcLDataAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::DataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::DataAccess*) (soff))->~G__TD3PDcLcLTrigcLcLDataAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::TrigDecisionToolD3PD */
static int G__TriggerD3PDHelpers_Dict_440_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::TrigDecisionToolD3PD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigDecisionToolD3PD[n];
       } else {
         p = new((void*) gvp) D3PD::TrigDecisionToolD3PD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigDecisionToolD3PD;
       } else {
         p = new((void*) gvp) D3PD::TrigDecisionToolD3PD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((D3PD::TrigDecisionToolD3PD*) G__getstructoffset())->IsPassed(*(string*) libp->para[0].ref, (D3PD::TrigDefs::DecisionTypes) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((D3PD::TrigDecisionToolD3PD*) G__getstructoffset())->IsPassed(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::TrigDecisionToolD3PD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::TrigDecisionToolD3PD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::TrigDecisionToolD3PD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigDecisionToolD3PD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigDecisionToolD3PD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TriggerD3PDHelpers_Dict_440_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigDecisionToolD3PD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TriggerD3PDHelpers_Dict_440_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::TrigDecisionToolD3PD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::TrigDecisionToolD3PD(*(D3PD::TrigDecisionToolD3PD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::TrigDecisionToolD3PD G__TD3PDcLcLTrigDecisionToolD3PD;
static int G__TriggerD3PDHelpers_Dict_440_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::TrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::TrigDecisionToolD3PD*) (soff+(sizeof(D3PD::TrigDecisionToolD3PD)*i)))->~G__TD3PDcLcLTrigDecisionToolD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::TrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::TrigDecisionToolD3PD*) (soff))->~G__TD3PDcLcLTrigDecisionToolD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* D3PD::TrigConfigSvcD3PD */

/* D3PD::Trig::IDataAccess */

/* D3PD::Trig::ChainGroupHandling */

/* D3PD::ChainGroup */

/* D3PD::Trig::IConfigAccess */

/* map<string,string,less<string>,allocator<pair<const string,string> > > */

/* D3PD::Trig::ConfigAccess */

/* D3PD::Trig::DataAccess */

/* D3PD::TrigDecisionToolD3PD */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTriggerD3PDHelpers_Dict {
 public:
  G__Sizep2memfuncTriggerD3PDHelpers_Dict(): p(&G__Sizep2memfuncTriggerD3PDHelpers_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTriggerD3PDHelpers_Dict::*p)();
};

size_t G__get_sizep2memfuncTriggerD3PDHelpers_Dict()
{
  G__Sizep2memfuncTriggerD3PDHelpers_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_TNamed_0(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_TObject_1(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIDataAccess_2(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIConfigAccess_3(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TNamed_0(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TObject_1(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIConfigAccess_2(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_TNamed_0(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_TObject_1(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_D3PDcLcLTrigcLcLIDataAccess_2(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_0(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_1(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_3(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_4(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_5(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_7(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_8(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_9(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_11(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_12(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_13(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_14(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTriggerD3PDHelpers_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD))) {
     D3PD::TrigConfigSvcD3PD *G__Lderived;
     G__Lderived=(D3PD::TrigConfigSvcD3PD*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIDataAccess_2,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIConfigAccess_3,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup))) {
     D3PD::ChainGroup *G__Lderived;
     G__Lderived=(D3PD::ChainGroup*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIConfigAccess_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_D3PDcLcLTrigcLcLIDataAccess_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD))) {
     D3PD::TrigDecisionToolD3PD *G__Lderived;
     G__Lderived=(D3PD::TrigDecisionToolD3PD*)0x1000;
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_1,1,6);
     }
     {
       D3PD::Trig::DataAccess *G__Lpbase=(D3PD::Trig::DataAccess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_3,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_4,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_5,1,2);
     }
     {
       D3PD::Trig::ConfigAccess *G__Lpbase=(D3PD::Trig::ConfigAccess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_7,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_8,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_9,1,2);
     }
     {
       D3PD::Trig::ChainGroupHandling *G__Lpbase=(D3PD::Trig::ChainGroupHandling*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_11,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_12,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_13,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_14,1,2);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTriggerD3PDHelpers_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",105,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOintgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",102,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOfloatgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,std::pair<Int_t,Int_t> >",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DBKeys_t",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOstringgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR),0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,Int_t>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,int>",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,int,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* D3PD::TrigConfigSvcD3PD */
static void G__setup_memvarD3PDcLcLTrigConfigSvcD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   { D3PD::TrigConfigSvcD3PD *p; p=(D3PD::TrigConfigSvcD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TTree),-1,-1,4,"m_tree=",0,"/< Pointer to the configuration tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_initialized=",0,"/< Internal status flag");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_smk=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_l1psk=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_hltpsk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,4,"m_lvl1NameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"m_lvl1PrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,4,"m_hltNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"m_hltPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"m_hltRerunPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"m_hltPassthroughMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,4,"m_lowerChainNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_smk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l1psk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltpsk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_lvl1NameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_lvl1PrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltRerunPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltPassthroughMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_lowerChainNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR),G__defined_typename("map<DBKeys_t,Int_t>"),-1,4,"m_configKeyMap=",0,"/< Internal cache of the configuration keys");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_confLVL1Items=",0,"/< Internal cache of the LVL1 item names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_confHLTChains=",0,"/< Internal cache of the HLT chain names");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string),-1,-1,4,"m_dummy=",0,"/< Dummy string needed for technical reasons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::IDataAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLIDataAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess));
   { D3PD::Trig::IDataAccess *p; p=(D3PD::Trig::IDataAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,"TBP=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,"TAP=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,"TAV=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,"Physics=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,"Raw=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,"Resurrected=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,"PassedThrough=3",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::ChainGroupHandling */
static void G__setup_memvarD3PDcLcLTrigcLcLChainGroupHandling(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling));
   { D3PD::Trig::ChainGroupHandling *p; p=(D3PD::Trig::ChainGroupHandling*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::ChainGroup */
static void G__setup_memvarD3PDcLcLChainGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup));
   { D3PD::ChainGroup *p; p=(D3PD::ChainGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),-1,-1,4,"m_parent=",0,"/< Interface for accessing the trigger data");
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD),-1,-1,4,"m_configSvc=",0,"/< Reference to the configuration service");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_triggerNames=",0,"/< The names given by the user");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_smk=",0,"/< The last SMK that was used to update the object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_existingTriggers=",0,"/< Names of the triggers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"m_existingIDs=",0,"/< IDs of the triggers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::IConfigAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLIConfigAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess));
   { D3PD::Trig::IConfigAccess *p; p=(D3PD::Trig::IConfigAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
static void G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   { map<string,string,less<string>,allocator<pair<const string,string> > > *p; p=(map<string,string,less<string>,allocator<pair<const string,string> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::ConfigAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLConfigAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   { D3PD::Trig::ConfigAccess *p; p=(D3PD::Trig::ConfigAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD),-1,-1,4,"m_configSvc=",0,"/< The trigger configuration service");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::DataAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLDataAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess));
   { D3PD::Trig::DataAccess *p; p=(D3PD::Trig::DataAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TTree),-1,-1,4,"m_tree=",0,"/< The event-wise TTree");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TString),-1,-1,4,"m_prefix=",0,"/< Prefix for the trigger branch names");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_initialized=",0,"/< Flag for knowing if the branches have been connected");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_detailLevel=",0,"/< The detail level guessed from the available branches");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_smk=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_l1psk=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_hltpsk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_smk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l1psk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_hltpsk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,4,"m_l1_tav=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_l2_physics=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_ef_physics=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l1_tav=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l2_physics=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_ef_physics=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,4,"m_l1_tbp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,4,"m_l1_tap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_l2_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_ef_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l1_tbp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l1_tap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l2_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_ef_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_l2_resurrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_ef_resurrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l2_resurrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_ef_resurrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_l2_passedThrough=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"m_ef_passedThrough=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_l2_passedThrough=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TBranch),-1,-1,4,"m_b_ef_passedThrough=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::TrigDecisionToolD3PD */
static void G__setup_memvarD3PDcLcLTrigDecisionToolD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   { D3PD::TrigDecisionToolD3PD *p; p=(D3PD::TrigDecisionToolD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTriggerD3PDHelpers_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncD3PDcLcLTrigConfigSvcD3PD(void) {
   /* D3PD::TrigConfigSvcD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   G__memfunc_setup("TrigConfigSvcD3PD",1571,G__TriggerD3PDHelpers_Dict_168_0_1, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfigTree",1298,G__TriggerD3PDHelpers_Dict_168_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__TriggerD3PDHelpers_Dict_168_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - SMK i - 'Int_t' 0 - L1PSK "
"i - 'Int_t' 0 - HLTPSK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConfigured",1218,G__TriggerD3PDHelpers_Dict_168_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCTPId",692,G__TriggerD3PDHelpers_Dict_168_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainId",944,G__TriggerD3PDHelpers_Dict_168_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrescale",1103,G__TriggerD3PDHelpers_Dict_168_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRerunPrescale",1627,G__TriggerD3PDHelpers_Dict_168_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPassthrough",1464,G__TriggerD3PDHelpers_Dict_168_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerChainName",1677,G__TriggerD3PDHelpers_Dict_168_0_10, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string), -1, 1, 1, 1, 1, 9, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLVL1Items",1089,G__TriggerD3PDHelpers_Dict_168_0_11, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHLTChains",1118,G__TriggerD3PDHelpers_Dict_168_0_12, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSummary",1275,G__TriggerD3PDHelpers_Dict_168_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintConfig",1123,G__TriggerD3PDHelpers_Dict_168_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTriggerNames",1835,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDBKeys",928,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR), G__defined_typename("D3PD::TrigConfigSvcD3PD::DBKeys_t"), 0, 3, 3, 4, 0, 
"i - 'Int_t' 0 - SMK i - 'Int_t' 0 - L1PSK "
"i - 'Int_t' 0 - HLTPSK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_168_0_19, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::TrigConfigSvcD3PD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_168_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_168_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::TrigConfigSvcD3PD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_168_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::TrigConfigSvcD3PD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_168_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_168_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_168_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigConfigSvcD3PD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_168_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_168_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigConfigSvcD3PD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrigConfigSvcD3PD", 1571, G__TriggerD3PDHelpers_Dict_168_0_31, (int) ('i'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 0, 1, 1, 1, 0, "u 'D3PD::TrigConfigSvcD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrigConfigSvcD3PD", 1697, G__TriggerD3PDHelpers_Dict_168_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TriggerD3PDHelpers_Dict_168_0_33, (int) ('u'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 1, 1, 1, 1, 0, "u 'D3PD::TrigConfigSvcD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLIDataAccess(void) {
   /* D3PD::Trig::IDataAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess));
   G__memfunc_setup("GetDetailLevel",1387,G__TriggerD3PDHelpers_Dict_170_0_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSMK",523,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL1PSK",651,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetHLTPSK",758,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL1Result",1052,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::L1ResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL2Result",1053,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEFResult",1066,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IDataAccess", 1171, G__TriggerD3PDHelpers_Dict_170_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TriggerD3PDHelpers_Dict_170_0_9, (int) ('u'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::IDataAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLChainGroupHandling(void) {
   /* D3PD::Trig::ChainGroupHandling */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling));
   G__memfunc_setup("GetChainGroup",1296,G__TriggerD3PDHelpers_Dict_171_0_2, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - patterns", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainGroup",1296,G__TriggerD3PDHelpers_Dict_171_0_3, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_171_0_4, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::Trig::ChainGroupHandling::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_171_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ChainGroupHandling::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_171_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::Trig::ChainGroupHandling::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_171_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::Trig::ChainGroupHandling::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_171_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_171_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ChainGroupHandling::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_171_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ChainGroupHandling::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_171_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ChainGroupHandling::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_171_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ChainGroupHandling::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ChainGroupHandling", 1939, G__TriggerD3PDHelpers_Dict_171_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TriggerD3PDHelpers_Dict_171_0_17, (int) ('u'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::ChainGroupHandling' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLChainGroup(void) {
   /* D3PD::ChainGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup));
   G__memfunc_setup("ChainGroup",1008,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup), -1, 0, 3, 1, 2, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - triggerNames u 'D3PD::Trig::IDataAccess' - 11 - parent "
"u 'D3PD::TrigConfigSvcD3PD' - 1 - svc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPassed",796,G__TriggerD3PDHelpers_Dict_172_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrescale",1103,G__TriggerD3PDHelpers_Dict_172_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfTriggers",1720,G__TriggerD3PDHelpers_Dict_172_0_4, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToVector",822,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 3, 4, 0, "u 'string' - 11 - names", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_172_0_7, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::ChainGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_172_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_172_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::ChainGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_172_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::ChainGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_172_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_172_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_172_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::ChainGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_172_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_172_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::ChainGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ChainGroup", 1008, G__TriggerD3PDHelpers_Dict_172_0_19, (int) ('i'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'D3PD::ChainGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChainGroup", 1134, G__TriggerD3PDHelpers_Dict_172_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLIConfigAccess(void) {
   /* D3PD::Trig::IConfigAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess));
   G__memfunc_setup("GetConfigSvc",1186,G__TriggerD3PDHelpers_Dict_183_0_1, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IConfigAccess", 1391, G__TriggerD3PDHelpers_Dict_183_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TriggerD3PDHelpers_Dict_183_0_3, (int) ('u'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::IConfigAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TriggerD3PDHelpers_Dict_424_0_1, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TriggerD3PDHelpers_Dict_424_0_2, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TriggerD3PDHelpers_Dict_424_0_3, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TriggerD3PDHelpers_Dict_424_0_4, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TriggerD3PDHelpers_Dict_424_0_5, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TriggerD3PDHelpers_Dict_424_0_6, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TriggerD3PDHelpers_Dict_424_0_7, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TriggerD3PDHelpers_Dict_424_0_8, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TriggerD3PDHelpers_Dict_424_0_9, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TriggerD3PDHelpers_Dict_424_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TriggerD3PDHelpers_Dict_424_0_11, 104, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TriggerD3PDHelpers_Dict_424_0_12, 104, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TriggerD3PDHelpers_Dict_424_0_13, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TriggerD3PDHelpers_Dict_424_0_14, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TriggerD3PDHelpers_Dict_424_0_15, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TriggerD3PDHelpers_Dict_424_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TriggerD3PDHelpers_Dict_424_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TriggerD3PDHelpers_Dict_424_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TriggerD3PDHelpers_Dict_424_0_19, 104, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TriggerD3PDHelpers_Dict_424_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TriggerD3PDHelpers_Dict_424_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TriggerD3PDHelpers_Dict_424_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TriggerD3PDHelpers_Dict_424_0_23, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TriggerD3PDHelpers_Dict_424_0_24, 104, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TriggerD3PDHelpers_Dict_424_0_25, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TriggerD3PDHelpers_Dict_424_0_26, 117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,string,less<string>,allocator<pair<const string,string> > >", 6898, G__TriggerD3PDHelpers_Dict_424_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLConfigAccess(void) {
   /* D3PD::Trig::ConfigAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   G__memfunc_setup("ConfigAccess",1192,G__TriggerD3PDHelpers_Dict_438_0_1, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfigSvc",1186,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_438_0_3, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::Trig::ConfigAccess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_438_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_438_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::Trig::ConfigAccess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_438_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::Trig::ConfigAccess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_438_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_438_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_438_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ConfigAccess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_438_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_438_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ConfigAccess::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ConfigAccess", 1192, G__TriggerD3PDHelpers_Dict_438_0_15, (int) ('i'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess), -1, 0, 1, 1, 1, 0, "u 'D3PD::Trig::ConfigAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConfigAccess", 1318, G__TriggerD3PDHelpers_Dict_438_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TriggerD3PDHelpers_Dict_438_0_17, (int) ('u'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::ConfigAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLDataAccess(void) {
   /* D3PD::Trig::DataAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess));
   G__memfunc_setup("DataAccess",972,G__TriggerD3PDHelpers_Dict_439_0_1, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 '0' eventTree u 'TString' - 11 '\"trig_\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTree",1202,G__TriggerD3PDHelpers_Dict_439_0_2, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTree",1214,G__TriggerD3PDHelpers_Dict_439_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - eventTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__TriggerD3PDHelpers_Dict_439_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetailLevel",1387,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSMK",523,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL1PSK",651,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHLTPSK",758,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL1Result",1052,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::L1ResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2Result",1053,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEFResult",1066,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 2, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_439_0_14, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::Trig::DataAccess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_439_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_439_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::Trig::DataAccess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_439_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::Trig::DataAccess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_439_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_439_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_439_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::DataAccess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_439_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_439_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::DataAccess::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataAccess", 972, G__TriggerD3PDHelpers_Dict_439_0_26, (int) ('i'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess), -1, 0, 1, 1, 1, 0, "u 'D3PD::Trig::DataAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataAccess", 1098, G__TriggerD3PDHelpers_Dict_439_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigDecisionToolD3PD(void) {
   /* D3PD::TrigDecisionToolD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   G__memfunc_setup("TrigDecisionToolD3PD",1901,G__TriggerD3PDHelpers_Dict_440_0_1, 105, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 '0' eventTree U 'TTree' - 0 '0' confTree "
"u 'TString' - 11 '\"trig_\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPassed",796,G__TriggerD3PDHelpers_Dict_440_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - name i 'D3PD::TrigDefs::DecisionTypes' - 0 'TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TriggerD3PDHelpers_Dict_440_0_3, 85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::TrigDecisionToolD3PD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TriggerD3PDHelpers_Dict_440_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TriggerD3PDHelpers_Dict_440_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::TrigDecisionToolD3PD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TriggerD3PDHelpers_Dict_440_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::TrigDecisionToolD3PD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TriggerD3PDHelpers_Dict_440_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TriggerD3PDHelpers_Dict_440_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TriggerD3PDHelpers_Dict_440_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigDecisionToolD3PD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TriggerD3PDHelpers_Dict_440_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TriggerD3PDHelpers_Dict_440_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigDecisionToolD3PD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrigDecisionToolD3PD", 1901, G__TriggerD3PDHelpers_Dict_440_0_15, (int) ('i'), G__get_linked_tagnum(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD), -1, 0, 1, 1, 1, 0, "u 'D3PD::TrigDecisionToolD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrigDecisionToolD3PD", 2027, G__TriggerD3PDHelpers_Dict_440_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTriggerD3PDHelpers_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTriggerD3PDHelpers_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTriggerD3PDHelpers_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PD = { "D3PD" , 110 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefs = { "D3PD::TrigDefs" , 110 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes = { "D3PD::TrigDefs::DecisionTypes" , 101 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD = { "D3PD::TrigConfigSvcD3PD" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrig = { "D3PD::Trig" , 110 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess = { "D3PD::Trig::IDataAccess" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling = { "D3PD::Trig::ChainGroupHandling" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup = { "D3PD::ChainGroup" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType = { "D3PD::Trig::IDataAccess::L1ResultType" , 101 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType = { "D3PD::Trig::IDataAccess::HLTResultType" , 101 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess = { "D3PD::Trig::IConfigAccess" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR = { "allocator<pair<const string,int> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator = { "map<string,int,less<string>,allocator<pair<const string,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator = { "map<string,int,less<string>,allocator<pair<const string,int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR = { "allocator<pair<const string,float> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEstringcOfloatgR = { "pair<string,float>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator = { "map<string,float,less<string>,allocator<pair<const string,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator = { "map<string,float,less<string>,allocator<pair<const string,float> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR = { "pair<int,pair<int,int> >" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR = { "allocator<pair<const string,string> >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR = { "map<pair<int,pair<int,int> >,int,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,int> > >" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess = { "D3PD::Trig::ConfigAccess" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess = { "D3PD::Trig::DataAccess" , 99 , -1 };
G__linked_taginfo G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD = { "D3PD::TrigDecisionToolD3PD" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTriggerD3PDHelpers_Dict() {
  G__TriggerD3PDHelpers_DictLN_TClass.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TBuffer.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TMemberInspector.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TObject.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TNamed.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_string.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TString.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PD.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefs.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrig.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_lesslEstringgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEstringcOfloatgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEintcOintgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TTree.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_TBranch.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess.tagnum = -1 ;
  G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTriggerD3PDHelpers_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_string);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TString);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PD);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigConfigSvcD3PD),sizeof(D3PD::TrigConfigSvcD3PD),-1,324864,(char*)NULL,G__setup_memvarD3PDcLcLTrigConfigSvcD3PD,G__setup_memfuncD3PDcLcLTrigConfigSvcD3PD);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrig);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccess),sizeof(D3PD::Trig::IDataAccess),-1,263175,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLIDataAccess,G__setup_memfuncD3PDcLcLTrigcLcLIDataAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),sizeof(D3PD::Trig::ChainGroupHandling),-1,323848,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLChainGroupHandling,G__setup_memfuncD3PDcLcLTrigcLcLChainGroupHandling);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLChainGroup),sizeof(D3PD::ChainGroup),-1,323584,(char*)NULL,G__setup_memvarD3PDcLcLChainGroup,G__setup_memfuncD3PDcLcLChainGroup);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLIConfigAccess),sizeof(D3PD::Trig::IConfigAccess),-1,263169,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLIConfigAccess,G__setup_memfuncD3PDcLcLTrigcLcLIConfigAccess);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOfloatgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TTree);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEintcOpairlEintcOintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR,G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOintcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLConfigAccess),sizeof(D3PD::Trig::ConfigAccess),-1,323584,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLConfigAccess,G__setup_memfuncD3PDcLcLTrigcLcLConfigAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigcLcLDataAccess),sizeof(D3PD::Trig::DataAccess),-1,324864,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLDataAccess,G__setup_memfuncD3PDcLcLTrigcLcLDataAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TriggerD3PDHelpers_DictLN_D3PDcLcLTrigDecisionToolD3PD),sizeof(D3PD::TrigDecisionToolD3PD),-1,323840,(char*)NULL,G__setup_memvarD3PDcLcLTrigDecisionToolD3PD,G__setup_memfuncD3PDcLcLTrigDecisionToolD3PD);
}
extern "C" void G__cpp_setupTriggerD3PDHelpers_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTriggerD3PDHelpers_Dict()");
  G__set_cpp_environmentTriggerD3PDHelpers_Dict();
  G__cpp_setup_tagtableTriggerD3PDHelpers_Dict();

  G__cpp_setup_inheritanceTriggerD3PDHelpers_Dict();

  G__cpp_setup_typetableTriggerD3PDHelpers_Dict();

  G__cpp_setup_memvarTriggerD3PDHelpers_Dict();

  G__cpp_setup_memfuncTriggerD3PDHelpers_Dict();
  G__cpp_setup_globalTriggerD3PDHelpers_Dict();
  G__cpp_setup_funcTriggerD3PDHelpers_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTriggerD3PDHelpers_Dict();
  return;
}
class G__cpp_setup_initTriggerD3PDHelpers_Dict {
  public:
    G__cpp_setup_initTriggerD3PDHelpers_Dict() { G__add_setup_func("TriggerD3PDHelpers_Dict",(G__incsetup)(&G__cpp_setupTriggerD3PDHelpers_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTriggerD3PDHelpers_Dict() { G__remove_setup_func("TriggerD3PDHelpers_Dict"); }
};
G__cpp_setup_initTriggerD3PDHelpers_Dict G__cpp_setup_initializerTriggerD3PDHelpers_Dict;

