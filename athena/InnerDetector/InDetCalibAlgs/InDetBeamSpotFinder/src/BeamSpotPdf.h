/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef BEAMSPOTPDF
#define BEAMSPOTPDF

#include <RooFit.h>
#include <RooAbsPdf.h>
#include <RooRealProxy.h>
#include <RooCategoryProxy.h>
#include <RooAbsReal.h>
#include <RooAbsCategory.h>
 
class BeamSpotPdf : public RooAbsPdf {
  
public:
  BeamSpotPdf() {} ; 
  
  BeamSpotPdf(const char *name, const char *title,
	      RooAbsReal& x,
	      RooAbsReal& y,
	      RooAbsReal& z,
	      RooAbsReal& vxx,
	      RooAbsReal& vyy,
	      RooAbsReal& vxy,
	      RooAbsReal& mx,
	      RooAbsReal& sx,
	      RooAbsReal& ax,
	      RooAbsReal& my,
	      RooAbsReal& sy,
	      RooAbsReal& ay,
	      RooAbsReal& mz,
	      RooAbsReal& sz,
	      RooAbsReal& k,
	      RooAbsReal& rho);
  BeamSpotPdf(const BeamSpotPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new BeamSpotPdf(*this,newname); }
  inline virtual ~BeamSpotPdf() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /*rangeName=0*/) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
  
 protected:

  RooRealProxy m_x ;
  RooRealProxy m_y ;
  RooRealProxy m_z ;
  RooRealProxy m_vxx ;
  RooRealProxy m_vyy ;
  RooRealProxy m_vxy ;
  RooRealProxy m_mx ;
  RooRealProxy m_sx ;
  RooRealProxy m_ax ;
  RooRealProxy m_my ;
  RooRealProxy m_sy ;
  RooRealProxy m_ay ;
  RooRealProxy m_mz ;
  RooRealProxy m_sz ;
  RooRealProxy m_k ;
  RooRealProxy m_rho ;
  
  Double_t evaluate() const ;



  
};
 
#endif

