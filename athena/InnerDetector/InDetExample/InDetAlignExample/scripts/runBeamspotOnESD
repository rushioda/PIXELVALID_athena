#! /usr/bin/env python
# Run beam spot determination on a set of ESD files using JobRunner
#
# Written by Juerg Beringer in July 2008.

import sys
import glob
import os
import re
from PyUtils import castor
from InDetAlignExample.InDetAlignJobRunner import InDetAlignJobRunner as JobRunner
from InDetAlignExample.InDetAlignJobRunner import InDetAlignJobRunnerError as JobRunnerError

if len(sys.argv)<=2:
    print "Usage: runBeamspotOnESD name castorpath [alignmentConstantFile]"
    exit(1)
name = sys.argv[1]
castorPath = sys.argv[2]
if len(sys.argv)>2:
    alignmentConstantFile = sys.argv[3]
else:
    alignmentConstantFile = ''

workdir = name
mycmthome = '$HOME/athena/14.2.X.rel_5/'
myrelease = '14.2.X,val,rel_5,saved,opt,32,setup,runtime'
mylogmail = 'beringer,lacuesta'

try:
    esdFiles = []
    castorFiles = castor.nsls(castorPath)
    pattern = re.compile('.*ESD.*')
    for f in castorFiles:
        if pattern.search(f):
            esdFiles.append('rfio:'+f)
    #print "Input file(s) =", esdFiles

    print
    print "Running over ESD files ..."
    aodrunner = JobRunner(startdirTemplate=workdir+'/%(jobname)s',
                          batchType='LSF',
                          batchQueue='atlasidali',
                          logmail=mylogmail,
                          EvtMax=-1,
                          alignmentFile=alignmentConstantFile,
                          DetDescrVersion="ATLAS-CSC-02-00-00",
                          #GlobalTag="OFLCOND-FDR-02-01-00",   # Not used when running on ESD
                          release=myrelease,
                          cmthome=mycmthome,
                          jobnameTemplate='bsaod%(jobnr)03i',
                          joboptionPath=os.getcwd()+'/InDetAlignBeamspotESDtoAOD.py')

    aodrunner.addFiles(esdFiles)
    aodrunner.setOption('filesPerJob', 1)

    if alignmentConstantFile:
        scriptTemplate = """#!/bin/sh
source %(cmthome)s/setup.sh -tag=%(release)s
mkdir -p %(rundir)s
cd %(rundir)s
pool_insertFileToCatalog %(alignmentFile)s
athena.py %(configfile)s %(joboptionPath)s
"""
        aodrunner.setOption('scriptTemplate',scriptTemplate)

    aodrunner.showOptions()
    aodrunner.run()
    aodrunner.wait()
    outputFiles = aodrunner.getOutputFiles()
    print
    print "The following AOD files were produced:"
    print outputFiles

    #
    # Determine beamspot using AOD files (single job over all AOD files)
    #
    print
    print "Calculating beamspot on AOD files..."
    finder = JobRunner(startdirTemplate=workdir,
                       outputfileTemplate='%(startdir)s/vtxbeamspot.db',
                       histfileTemplate='%(startdir)s/vtxbeamspot.root',
                       batchType='LSF',
                       batchQueue='atlasidali',
                       logmail=mylogmail,
                       EvtMax=-1,
                       release=myrelease,
                       vertexContainer='NewVxPrimaryCandidate',
                       useNLumiBlocksPerBeamspot=10,
                       maxCountPerBeamspot=-1,
                       cmthome=mycmthome,
                       jobnameTemplate='vtxbeamspot',
                       joboptionPath=os.getcwd()+'/InDetAlignBeamspotVertexFinder.py')

    finder.addFiles(outputFiles)
    finder.setOption('filesPerJob', len(outputFiles))
    finder.run()
    finder.wait()

except JobRunnerError, err:
    print '\nERROR:',err
    print
    exit(1)

print
os.system('ls -l %s' % workdir)
