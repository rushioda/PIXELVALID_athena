/*
  Copyright (C) 2002-2017 CERN for the benefit of the ATLAS collaboration
*/

/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef BEAMSPOTPDF
#define BEAMSPOTPDF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class BeamSpotPdf : public RooAbsPdf {
public:
  BeamSpotPdf() {} ; 
  BeamSpotPdf(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _y,
	      RooAbsReal& _z,
	      RooAbsReal& _vxx,
	      RooAbsReal& _vyy,
	      RooAbsReal& _vxy,
	      RooAbsReal& _mx,
	      RooAbsReal& _sx,
	      RooAbsReal& _ax,
	      RooAbsReal& _my,
	      RooAbsReal& _sy,
	      RooAbsReal& _ay,
	      RooAbsReal& _mz,
	      RooAbsReal& _sz,
	      RooAbsReal& _k,
	      RooAbsReal& _rho);
  BeamSpotPdf(const BeamSpotPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new BeamSpotPdf(*this,newname); }
  inline virtual ~BeamSpotPdf() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy x ;
  RooRealProxy y ;
  RooRealProxy z ;
  RooRealProxy vxx ;
  RooRealProxy vyy ;
  RooRealProxy vxy ;
  RooRealProxy mx ;
  RooRealProxy sx ;
  RooRealProxy ax ;
  RooRealProxy my ;
  RooRealProxy sy ;
  RooRealProxy ay ;
  RooRealProxy mz ;
  RooRealProxy sz ;
  RooRealProxy k ;
  RooRealProxy rho ;
  
  Double_t evaluate() const ;

private:

  ClassDef(BeamSpotPdf,1) // Your description goes here...
};
 
#endif
